"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6959],{3905:function(e,r,n){n.d(r,{Zo:function(){return p},kt:function(){return d}});var l=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function t(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);r&&(l=l.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,l,o=function(e,r){if(null==e)return{};var n,l,o={},t=Object.keys(e);for(l=0;l<t.length;l++)n=t[l],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(l=0;l<t.length;l++)n=t[l],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=l.createContext({}),a=function(e){var r=l.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=a(e.components);return l.createElement(u.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return l.createElement(l.Fragment,{},r)}},y=l.forwardRef((function(e,r){var n=e.components,o=e.mdxType,t=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),y=a(n),d=o,m=y["".concat(u,".").concat(d)]||y[d]||s[d]||t;return n?l.createElement(m,i(i({ref:r},p),{},{components:n})):l.createElement(m,i({ref:r},p))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var t=n.length,i=new Array(t);i[0]=y;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var a=2;a<t;a++)i[a]=n[a];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}y.displayName="MDXCreateElement"},84393:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return p},default:function(){return y}});var l=n(87462),o=n(63366),t=(n(67294),n(3905)),i=["components"],c={id:"FirewallPolicyRuleCollectionGroup",title:"FirewallPolicyRuleCollectionGroup"},u=void 0,a={unversionedId:"azure/resources/Network/FirewallPolicyRuleCollectionGroup",id:"azure/resources/Network/FirewallPolicyRuleCollectionGroup",isDocsHomePage:!1,title:"FirewallPolicyRuleCollectionGroup",description:"Provides a FirewallPolicyRuleCollectionGroup from the Network group",source:"@site/docs/azure/resources/Network/FirewallPolicyRuleCollectionGroup.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/FirewallPolicyRuleCollectionGroup",permalink:"/docs/azure/resources/Network/FirewallPolicyRuleCollectionGroup",tags:[],version:"current",frontMatter:{id:"FirewallPolicyRuleCollectionGroup",title:"FirewallPolicyRuleCollectionGroup"},sidebar:"docs",previous:{title:"FirewallPolicyIdpsSignaturesOverride",permalink:"/docs/azure/resources/Network/FirewallPolicyIdpsSignaturesOverride"},next:{title:"FirewallPolicyRuleGroup",permalink:"/docs/azure/resources/Network/FirewallPolicyRuleGroup"}},p=[{value:"Examples",id:"examples",children:[{value:"Create FirewallPolicyRuleCollectionGroup",id:"create-firewallpolicyrulecollectiongroup",children:[],level:3},{value:"Create FirewallPolicyRuleCollectionGroup With IpGroups",id:"create-firewallpolicyrulecollectiongroup-with-ipgroups",children:[],level:3},{value:"Create FirewallPolicyNatRuleCollectionGroup",id:"create-firewallpolicynatrulecollectiongroup",children:[],level:3},{value:"Create FirewallPolicyRuleCollectionGroup With Web Categories",id:"create-firewallpolicyrulecollectiongroup-with-web-categories",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],s={toc:p};function y(e){var r=e.components,n=(0,o.Z)(e,i);return(0,t.kt)("wrapper",(0,l.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Provides a ",(0,t.kt)("strong",{parentName:"p"},"FirewallPolicyRuleCollectionGroup")," from the ",(0,t.kt)("strong",{parentName:"p"},"Network")," group"),(0,t.kt)("h2",{id:"examples"},"Examples"),(0,t.kt)("h3",{id:"create-firewallpolicyrulecollectiongroup"},"Create FirewallPolicyRuleCollectionGroup"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FirewallPolicyRuleCollectionGroup",\n    group: "Network",\n    name: "myFirewallPolicyRuleCollectionGroup",\n    properties: () => ({\n      properties: {\n        priority: 100,\n        ruleCollections: [\n          {\n            ruleCollectionType: "FirewallPolicyFilterRuleCollection",\n            name: "Example-Filter-Rule-Collection",\n            priority: 100,\n            action: { type: "Deny" },\n            rules: [\n              {\n                ruleType: "NetworkRule",\n                name: "network-rule1",\n                sourceAddresses: ["10.1.25.0/24"],\n                destinationAddresses: ["*"],\n                ipProtocols: ["TCP"],\n                destinationPorts: ["*"],\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      firewallPolicy: "myFirewallPolicy",\n    }),\n  },\n];\n\n')),(0,t.kt)("h3",{id:"create-firewallpolicyrulecollectiongroup-with-ipgroups"},"Create FirewallPolicyRuleCollectionGroup With IpGroups"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FirewallPolicyRuleCollectionGroup",\n    group: "Network",\n    name: "myFirewallPolicyRuleCollectionGroup",\n    properties: () => ({\n      properties: {\n        priority: 110,\n        ruleCollections: [\n          {\n            ruleCollectionType: "FirewallPolicyFilterRuleCollection",\n            name: "Example-Filter-Rule-Collection",\n            action: { type: "Deny" },\n            rules: [\n              {\n                ruleType: "NetworkRule",\n                name: "network-1",\n                ipProtocols: ["TCP"],\n                destinationPorts: ["*"],\n                sourceIpGroups: [\n                  "/subscriptions/subid/providers/Microsoft.Network/resourceGroup/rg1/ipGroups/ipGroups1",\n                ],\n                destinationIpGroups: [\n                  "/subscriptions/subid/providers/Microsoft.Network/resourceGroup/rg1/ipGroups/ipGroups2",\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      firewallPolicy: "myFirewallPolicy",\n    }),\n  },\n];\n\n')),(0,t.kt)("h3",{id:"create-firewallpolicynatrulecollectiongroup"},"Create FirewallPolicyNatRuleCollectionGroup"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FirewallPolicyRuleCollectionGroup",\n    group: "Network",\n    name: "myFirewallPolicyRuleCollectionGroup",\n    properties: () => ({\n      properties: {\n        priority: 100,\n        ruleCollections: [\n          {\n            ruleCollectionType: "FirewallPolicyNatRuleCollection",\n            priority: 100,\n            name: "Example-Nat-Rule-Collection",\n            action: { type: "DNAT" },\n            rules: [\n              {\n                ruleType: "NatRule",\n                name: "nat-rule1",\n                translatedFqdn: "internalhttp.server.net",\n                translatedPort: "8080",\n                ipProtocols: ["TCP", "UDP"],\n                sourceAddresses: ["2.2.2.2"],\n                sourceIpGroups: [],\n                destinationAddresses: ["152.23.32.23"],\n                destinationPorts: ["8080"],\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      firewallPolicy: "myFirewallPolicy",\n    }),\n  },\n];\n\n')),(0,t.kt)("h3",{id:"create-firewallpolicyrulecollectiongroup-with-web-categories"},"Create FirewallPolicyRuleCollectionGroup With Web Categories"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FirewallPolicyRuleCollectionGroup",\n    group: "Network",\n    name: "myFirewallPolicyRuleCollectionGroup",\n    properties: () => ({\n      properties: {\n        priority: 110,\n        ruleCollections: [\n          {\n            ruleCollectionType: "FirewallPolicyFilterRuleCollection",\n            name: "Example-Filter-Rule-Collection",\n            action: { type: "Deny" },\n            rules: [\n              {\n                ruleType: "ApplicationRule",\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n                webCategories: ["Hacking"],\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      firewallPolicy: "myFirewallPolicy",\n    }),\n  },\n];\n\n')),(0,t.kt)("h2",{id:"dependencies"},"Dependencies"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/FirewallPolicy"},"FirewallPolicy"))),(0,t.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'The properties of the firewall policy rule collection group.',\n      properties: {\n        priority: {\n          type: 'integer',\n          format: 'int32',\n          maximum: 65000,\n          exclusiveMaximum: false,\n          minimum: 100,\n          exclusiveMinimum: false,\n          description: 'Priority of the Firewall Policy Rule Collection Group resource.'\n        },\n        ruleCollections: {\n          type: 'array',\n          items: {\n            description: 'Properties of the rule collection.',\n            discriminator: 'ruleCollectionType',\n            required: [ 'ruleCollectionType' ],\n            properties: {\n              ruleCollectionType: {\n                type: 'string',\n                description: 'The type of the rule collection.',\n                enum: [\n                  'FirewallPolicyNatRuleCollection',\n                  'FirewallPolicyFilterRuleCollection'\n                ],\n                'x-ms-enum': {\n                  name: 'FirewallPolicyRuleCollectionType',\n                  modelAsString: true\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the rule collection.'\n              },\n              priority: {\n                type: 'integer',\n                format: 'int32',\n                maximum: 65000,\n                exclusiveMaximum: false,\n                minimum: 100,\n                exclusiveMinimum: false,\n                description: 'Priority of the Firewall Policy Rule Collection resource.'\n              }\n            }\n          },\n          description: 'Group of Firewall Policy rule collections.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the firewall policy rule collection group resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        }\n      }\n    },\n    name: {\n      type: 'string',\n      description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    },\n    type: { type: 'string', readOnly: true, description: 'Rule Group type.' }\n  },\n  allOf: [\n    {\n      properties: { id: { type: 'string', description: 'Resource ID.' } },\n      description: 'Reference to another subresource.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Rule Collection Group resource.'\n}\n")),(0,t.kt)("h2",{id:"misc"},"Misc"),(0,t.kt)("p",null,"The resource version is ",(0,t.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,t.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/firewallPolicy.json"},"here"),"."))}y.isMDXComponent=!0}}]);