"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1452],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},67243:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=t(87462),a=t(63366),s=(t(67294),t(3905)),o=["components"],l={id:"StatefulSet",title:"StatefulSet"},i=void 0,p={unversionedId:"k8s/resources/StatefulSet",id:"k8s/resources/StatefulSet",isDocsHomePage:!1,title:"StatefulSet",description:"Provides a Kubernetes StatefulSet",source:"@site/docs/k8s/resources/StatefulSet.md",sourceDirName:"k8s/resources",slug:"/k8s/resources/StatefulSet",permalink:"/docs/k8s/resources/StatefulSet",tags:[],version:"current",frontMatter:{id:"StatefulSet",title:"StatefulSet"},sidebar:"docs",previous:{title:"Service Account",permalink:"/docs/k8s/resources/ServiceAccount"},next:{title:"Requirements",permalink:"/docs/k8s/K8sRequirements"}},c=[{value:"Examples",id:"examples",children:[{value:"Create a StatefulSet for postgres",id:"create-a-statefulset-for-postgres",children:[],level:3}],level:2},{value:"Source Code Examples",id:"source-code-examples",children:[],level:2},{value:"Listing",id:"listing",children:[],level:2}],u={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Provides a ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/"},"Kubernetes StatefulSet")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"create-a-statefulset-for-postgres"},"Create a StatefulSet for postgres"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const label = "myLabel";\nconst pvName = "pv-db";\n\nconst persistentVolume = provider.makePersistentVolume({\n  properties: () => ({\n    metadata: {\n      name: pvName,\n      namespace: "pg",\n    },\n    spec: {\n      accessModes: ["ReadWriteOnce"],\n      capacity: {\n        storage: "2Gi",\n      },\n      hostPath: {\n        path: "/data/pv0001/",\n      },\n    },\n  }),\n});\n\nconst statefulSetPostgres = provider.makeStatefulSet({\n  name: "myStatefulSet",\n  dependencies: { persistentVolume },\n  properties: () => ({\n    metadata: {\n      name: pvName,\n      namespace: "pg",\n      labels: {\n        app: label,\n      },\n    },\n    spec: {\n      serviceName: "postgres",\n      replicas: 1,\n      selector: {\n        matchLabels: {\n          app: label,\n        },\n      },\n      template: {\n        metadata: {\n          labels: {\n            app: label,\n          },\n        },\n        spec: {\n          containers: [\n            {\n              name: "postgres",\n              image: "postgres:10-alpine",\n              ports: [\n                {\n                  containerPort: 5432,\n                  name: "postgres",\n                },\n              ],\n              volumeMounts: [\n                {\n                  name: pvName,\n                  mountPath: "/var/lib/postgresql",\n                },\n              ],\n            },\n          ],\n        },\n      },\n      volumeClaimTemplates: [\n        {\n          metadata: {\n            name: pvName,\n          },\n          spec: {\n            accessModes: ["ReadWriteOnce"],\n            resources: {\n              requests: {\n                storage: "2Gi",\n              },\n            },\n          },\n        },\n      ],\n    },\n  }),\n});\n')),(0,s.kt)("h2",{id:"source-code-examples"},"Source Code Examples"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/grucloud/grucloud/blob/main/examples/k8s/starhackit/base/charts/postgres.js#L134"},"postgres statefulset"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/grucloud/grucloud/blob/main/examples/k8s/starhackit/base/charts/redis.js#L53"},"redis statefulset")))),(0,s.kt)("h2",{id:"listing"},"Listing"),(0,s.kt)("p",null,"The following commands list the ",(0,s.kt)("strong",{parentName:"p"},"StatefulSet")," type:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"gc list --types StatefulSet\n")),(0,s.kt)("p",null,"Short version:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"gc l -t Stat\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'List Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nProvider: k8s\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 k8s                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 StatefulSet        \u2502 postgres                                                    \u2502\n\u2502                    \u2502 redis                                                       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 resources, 1 type, 2 providers\nCommand "gc list --types StatefulSet" executed in 5s\n')),(0,s.kt)("p",null,"To list a StatefulSet by name:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"gc l -t StatefulSet -n postgres\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Listing resources on 2 providers: aws, k8s\n\u2713 aws\n  \u2713 Initialising\n  \u2713 Listing\n\u2713 k8s\n  \u2713 Initialising\n  \u2713 Listing 6/6\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 1 StatefulSet from k8s                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Name     \u2502 Data                                                            \u2502 Our  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 postgres \u2502 metadata:                                                       \u2502 Yes  \u2502\n\u2502          \u2502   name: postgres                                                \u2502      \u2502\n\u2502          \u2502   namespace: default                                            \u2502      \u2502\n\u2502          \u2502   selfLink: /apis/apps/v1/namespaces/default/statefulsets/post\u2026 \u2502      \u2502\n\u2502          \u2502   uid: b8f36ec5-7788-40bc-ad90-fb50fb8b2c62                     \u2502      \u2502\n\u2502          \u2502   resourceVersion: 118835                                       \u2502      \u2502\n\u2502          \u2502   generation: 1                                                 \u2502      \u2502\n\u2502          \u2502   creationTimestamp: 2021-03-23T15:36:24Z                       \u2502      \u2502\n\u2502          \u2502   labels:                                                       \u2502      \u2502\n\u2502          \u2502     app: db                                                     \u2502      \u2502\n\u2502          \u2502   annotations:                                                  \u2502      \u2502\n\u2502          \u2502     CreatedByProvider: k8s                                      \u2502      \u2502\n\u2502          \u2502     ManagedBy: GruCloud                                         \u2502      \u2502\n\u2502          \u2502     Name: postgres                                              \u2502      \u2502\n\u2502          \u2502     stage: dev                                                  \u2502      \u2502\n\u2502          \u2502 spec:                                                           \u2502      \u2502\n\u2502          \u2502   replicas: 1                                                   \u2502      \u2502\n\u2502          \u2502   selector:                                                     \u2502      \u2502\n\u2502          \u2502     matchLabels:                                                \u2502      \u2502\n\u2502          \u2502       app: db                                                   \u2502      \u2502\n\u2502          \u2502   template:                                                     \u2502      \u2502\n\u2502          \u2502     metadata:                                                   \u2502      \u2502\n\u2502          \u2502       creationTimestamp: null                                   \u2502      \u2502\n\u2502          \u2502       labels:                                                   \u2502      \u2502\n\u2502          \u2502         app: db                                                 \u2502      \u2502\n\u2502          \u2502     spec:                                                       \u2502      \u2502\n\u2502          \u2502       containers:                                               \u2502      \u2502\n\u2502          \u2502         - name: postgres                                        \u2502      \u2502\n\u2502          \u2502           image: postgres:10-alpine                             \u2502      \u2502\n\u2502          \u2502           ports:                                                \u2502      \u2502\n\u2502          \u2502             - name: postgres                                    \u2502      \u2502\n\u2502          \u2502               containerPort: 5432                               \u2502      \u2502\n\u2502          \u2502               protocol: TCP                                     \u2502      \u2502\n\u2502          \u2502           env:                                                  \u2502      \u2502\n\u2502          \u2502             - name: POSTGRES_USER                               \u2502      \u2502\n\u2502          \u2502               valueFrom:                                        \u2502      \u2502\n\u2502          \u2502                 configMapKeyRef:                                \u2502      \u2502\n\u2502          \u2502                   name: postgres                                \u2502      \u2502\n\u2502          \u2502                   key: POSTGRES_USER                            \u2502      \u2502\n\u2502          \u2502             - name: POSTGRES_PASSWORD                           \u2502      \u2502\n\u2502          \u2502               valueFrom:                                        \u2502      \u2502\n\u2502          \u2502                 configMapKeyRef:                                \u2502      \u2502\n\u2502          \u2502                   name: postgres                                \u2502      \u2502\n\u2502          \u2502                   key: POSTGRES_PASSWORD                        \u2502      \u2502\n\u2502          \u2502             - name: POSTGRES_DB                                 \u2502      \u2502\n\u2502          \u2502               valueFrom:                                        \u2502      \u2502\n\u2502          \u2502                 configMapKeyRef:                                \u2502      \u2502\n\u2502          \u2502                   name: postgres                                \u2502      \u2502\n\u2502          \u2502                   key: POSTGRES_DB                              \u2502      \u2502\n\u2502          \u2502           resources:                                            \u2502      \u2502\n\u2502          \u2502           volumeMounts:                                         \u2502      \u2502\n\u2502          \u2502             - name: pv-db                                       \u2502      \u2502\n\u2502          \u2502               mountPath: /var/lib/postgresql                    \u2502      \u2502\n\u2502          \u2502           terminationMessagePath: /dev/termination-log          \u2502      \u2502\n\u2502          \u2502           terminationMessagePolicy: File                        \u2502      \u2502\n\u2502          \u2502           imagePullPolicy: IfNotPresent                         \u2502      \u2502\n\u2502          \u2502       restartPolicy: Always                                     \u2502      \u2502\n\u2502          \u2502       terminationGracePeriodSeconds: 30                         \u2502      \u2502\n\u2502          \u2502       dnsPolicy: ClusterFirst                                   \u2502      \u2502\n\u2502          \u2502       securityContext:                                          \u2502      \u2502\n\u2502          \u2502       schedulerName: default-scheduler                          \u2502      \u2502\n\u2502          \u2502   volumeClaimTemplates:                                         \u2502      \u2502\n\u2502          \u2502     - kind: PersistentVolumeClaim                               \u2502      \u2502\n\u2502          \u2502       apiVersion: v1                                            \u2502      \u2502\n\u2502          \u2502       metadata:                                                 \u2502      \u2502\n\u2502          \u2502         name: pv-db                                             \u2502      \u2502\n\u2502          \u2502         creationTimestamp: null                                 \u2502      \u2502\n\u2502          \u2502       spec:                                                     \u2502      \u2502\n\u2502          \u2502         accessModes:                                            \u2502      \u2502\n\u2502          \u2502           - "ReadWriteOnce"                                     \u2502      \u2502\n\u2502          \u2502         resources:                                              \u2502      \u2502\n\u2502          \u2502           requests:                                             \u2502      \u2502\n\u2502          \u2502             storage: 1Gi                                        \u2502      \u2502\n\u2502          \u2502         volumeMode: Filesystem                                  \u2502      \u2502\n\u2502          \u2502       status:                                                   \u2502      \u2502\n\u2502          \u2502         phase: Pending                                          \u2502      \u2502\n\u2502          \u2502   serviceName: postgres                                         \u2502      \u2502\n\u2502          \u2502   podManagementPolicy: OrderedReady                             \u2502      \u2502\n\u2502          \u2502   updateStrategy:                                               \u2502      \u2502\n\u2502          \u2502     type: RollingUpdate                                         \u2502      \u2502\n\u2502          \u2502     rollingUpdate:                                              \u2502      \u2502\n\u2502          \u2502       partition: 0                                              \u2502      \u2502\n\u2502          \u2502   revisionHistoryLimit: 10                                      \u2502      \u2502\n\u2502          \u2502 status:                                                         \u2502      \u2502\n\u2502          \u2502   observedGeneration: 1                                         \u2502      \u2502\n\u2502          \u2502   replicas: 1                                                   \u2502      \u2502\n\u2502          \u2502   readyReplicas: 1                                              \u2502      \u2502\n\u2502          \u2502   currentReplicas: 1                                            \u2502      \u2502\n\u2502          \u2502   updatedReplicas: 1                                            \u2502      \u2502\n\u2502          \u2502   currentRevision: postgres-765dc6b644                          \u2502      \u2502\n\u2502          \u2502   updateRevision: postgres-765dc6b644                           \u2502      \u2502\n\u2502          \u2502   collisionCount: 0                                             \u2502      \u2502\n\u2502          \u2502                                                                 \u2502      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\nList Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nProvider: k8s\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 k8s                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 StatefulSet        \u2502 postgres                                                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n1 resource, 1 type, 2 providers\nCommand "gc l -t StatefulSet -n postgres" executed in 4s\n')))}m.isMDXComponent=!0}}]);