"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6561],{3905:function(e,n,r){r.d(n,{Zo:function(){return a},kt:function(){return m}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),p=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},a=function(e){var n=p(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,s=e.originalType,u=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),g=p(r),m=i,l=g["".concat(u,".").concat(m)]||g[m]||d[m]||s;return r?t.createElement(l,o(o({ref:n},a),{},{components:r})):t.createElement(l,o({ref:n},a))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=g;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<s;p++)o[p]=r[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},1654:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return a},default:function(){return g}});var t=r(87462),i=r(63366),s=(r(67294),r(3905)),o=["components"],c={id:"ExpressRouteCircuitPeering",title:"ExpressRouteCircuitPeering"},u=void 0,p={unversionedId:"azure/resources/Network/ExpressRouteCircuitPeering",id:"azure/resources/Network/ExpressRouteCircuitPeering",isDocsHomePage:!1,title:"ExpressRouteCircuitPeering",description:"Provides a ExpressRouteCircuitPeering from the Network group",source:"@site/docs/azure/resources/Network/ExpressRouteCircuitPeering.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ExpressRouteCircuitPeering",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitPeering",tags:[],version:"current",frontMatter:{id:"ExpressRouteCircuitPeering",title:"ExpressRouteCircuitPeering"},sidebar:"docs",previous:{title:"ExpressRouteCircuitConnection",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitConnection"},next:{title:"ExpressRouteConnection",permalink:"/docs/azure/resources/Network/ExpressRouteConnection"}},a=[{value:"Examples",id:"examples",children:[{value:"Create ExpressRouteCircuit Peerings",id:"create-expressroutecircuit-peerings",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:a};function g(e){var n=e.components,r=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Provides a ",(0,s.kt)("strong",{parentName:"p"},"ExpressRouteCircuitPeering")," from the ",(0,s.kt)("strong",{parentName:"p"},"Network")," group"),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"create-expressroutecircuit-peerings"},"Create ExpressRouteCircuit Peerings"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "ExpressRouteCircuitPeering",\n    group: "Network",\n    name: "myExpressRouteCircuitPeering",\n    properties: () => ({\n      properties: {\n        peerASN: 200,\n        primaryPeerAddressPrefix: "192.168.16.252/30",\n        secondaryPeerAddressPrefix: "192.168.18.252/30",\n        vlanId: 200,\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      routeFilter: "myRouteFilter",\n      expressRouteConnection: "myExpressRouteConnection",\n      circuit: "myExpressRouteCircuit",\n    }),\n  },\n];\n\n')),(0,s.kt)("h2",{id:"dependencies"},"Dependencies"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/RouteFilter"},"RouteFilter")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteConnection"},"ExpressRouteConnection")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteCircuit"},"ExpressRouteCircuit"))),(0,s.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the express route circuit peering.',\n      properties: {\n        peeringType: {\n          description: 'The peering type.',\n          type: 'string',\n          enum: [\n            'AzurePublicPeering',\n            'AzurePrivatePeering',\n            'MicrosoftPeering'\n          ],\n          'x-ms-enum': { name: 'ExpressRoutePeeringType', modelAsString: true }\n        },\n        state: {\n          description: 'The peering state.',\n          type: 'string',\n          enum: [ 'Disabled', 'Enabled' ],\n          'x-ms-enum': { name: 'ExpressRoutePeeringState', modelAsString: true }\n        },\n        azureASN: {\n          type: 'integer',\n          format: 'int32',\n          description: 'The Azure ASN.'\n        },\n        peerASN: {\n          type: 'integer',\n          format: 'int64',\n          minimum: 1,\n          maximum: 4294967295,\n          description: 'The peer ASN.'\n        },\n        primaryPeerAddressPrefix: { type: 'string', description: 'The primary address prefix.' },\n        secondaryPeerAddressPrefix: {\n          type: 'string',\n          description: 'The secondary address prefix.'\n        },\n        primaryAzurePort: { type: 'string', description: 'The primary port.' },\n        secondaryAzurePort: { type: 'string', description: 'The secondary port.' },\n        sharedKey: { type: 'string', description: 'The shared key.' },\n        vlanId: {\n          type: 'integer',\n          format: 'int32',\n          description: 'The VLAN ID.'\n        },\n        microsoftPeeringConfig: {\n          description: 'The Microsoft peering configuration.',\n          properties: {\n            advertisedPublicPrefixes: {\n              type: 'array',\n              items: { type: 'string' },\n              description: 'The reference to AdvertisedPublicPrefixes.'\n            },\n            advertisedCommunities: {\n              type: 'array',\n              items: { type: 'string' },\n              description: 'The communities of bgp peering. Specified for microsoft peering.'\n            },\n            advertisedPublicPrefixesState: {\n              readOnly: true,\n              type: 'string',\n              description: 'The advertised public prefix state of the Peering resource.',\n              enum: [\n                'NotConfigured',\n                'Configuring',\n                'Configured',\n                'ValidationNeeded'\n              ],\n              'x-ms-enum': {\n                name: 'ExpressRouteCircuitPeeringAdvertisedPublicPrefixState',\n                modelAsString: true\n              }\n            },\n            legacyMode: {\n              type: 'integer',\n              format: 'int32',\n              description: 'The legacy mode of the peering.'\n            },\n            customerASN: {\n              type: 'integer',\n              format: 'int32',\n              description: 'The CustomerASN of the peering.'\n            },\n            routingRegistryName: {\n              type: 'string',\n              description: 'The RoutingRegistryName of the configuration.'\n            }\n          }\n        },\n        stats: {\n          description: 'The peering stats of express route circuit.',\n          properties: {\n            primarybytesIn: {\n              type: 'integer',\n              format: 'int64',\n              description: 'The Primary BytesIn of the peering.'\n            },\n            primarybytesOut: {\n              type: 'integer',\n              format: 'int64',\n              description: 'The primary BytesOut of the peering.'\n            },\n            secondarybytesIn: {\n              type: 'integer',\n              format: 'int64',\n              description: 'The secondary BytesIn of the peering.'\n            },\n            secondarybytesOut: {\n              type: 'integer',\n              format: 'int64',\n              description: 'The secondary BytesOut of the peering.'\n            }\n          }\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the express route circuit peering resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        gatewayManagerEtag: { type: 'string', description: 'The GatewayManager Etag.' },\n        lastModifiedBy: {\n          readOnly: true,\n          type: 'string',\n          description: 'Who was the last to modify the peering.'\n        },\n        routeFilter: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        ipv6PeeringConfig: {\n          description: 'The IPv6 peering configuration.',\n          properties: {\n            primaryPeerAddressPrefix: {\n              type: 'string',\n              description: 'The primary address prefix.'\n            },\n            secondaryPeerAddressPrefix: {\n              type: 'string',\n              description: 'The secondary address prefix.'\n            },\n            microsoftPeeringConfig: {\n              description: 'The Microsoft peering configuration.',\n              properties: {\n                advertisedPublicPrefixes: {\n                  type: 'array',\n                  items: { type: 'string' },\n                  description: 'The reference to AdvertisedPublicPrefixes.'\n                },\n                advertisedCommunities: {\n                  type: 'array',\n                  items: { type: 'string' },\n                  description: 'The communities of bgp peering. Specified for microsoft peering.'\n                },\n                advertisedPublicPrefixesState: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'The advertised public prefix state of the Peering resource.',\n                  enum: [\n                    'NotConfigured',\n                    'Configuring',\n                    'Configured',\n                    'ValidationNeeded'\n                  ],\n                  'x-ms-enum': {\n                    name: 'ExpressRouteCircuitPeeringAdvertisedPublicPrefixState',\n                    modelAsString: true\n                  }\n                },\n                legacyMode: {\n                  type: 'integer',\n                  format: 'int32',\n                  description: 'The legacy mode of the peering.'\n                },\n                customerASN: {\n                  type: 'integer',\n                  format: 'int32',\n                  description: 'The CustomerASN of the peering.'\n                },\n                routingRegistryName: {\n                  type: 'string',\n                  description: 'The RoutingRegistryName of the configuration.'\n                }\n              }\n            },\n            routeFilter: {\n              properties: { id: { type: 'string', description: 'Resource ID.' } },\n              description: 'Reference to another subresource.',\n              'x-ms-azure-resource': true\n            },\n            state: {\n              type: 'string',\n              description: 'The state of peering.',\n              enum: [ 'Disabled', 'Enabled' ],\n              'x-ms-enum': {\n                name: 'ExpressRouteCircuitPeeringState',\n                modelAsString: true\n              }\n            }\n          }\n        },\n        expressRouteConnection: {\n          description: 'The ExpressRoute connection.',\n          properties: {\n            id: {\n              type: 'string',\n              readOnly: true,\n              description: 'The ID of the ExpressRouteConnection.'\n            }\n          }\n        },\n        connections: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route circuit connection.',\n                properties: {\n                  expressRouteCircuitPeering: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  peerExpressRouteCircuitPeering: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  addressPrefix: {\n                    type: 'string',\n                    description: '/29 IP address space to carve out Customer addresses for tunnels.'\n                  },\n                  authorizationKey: {\n                    type: 'string',\n                    description: 'The authorization key.'\n                  },\n                  ipv6CircuitConnectionConfig: {\n                    description: 'IPv6 Address PrefixProperties of the express route circuit connection.',\n                    properties: {\n                      addressPrefix: {\n                        type: 'string',\n                        description: '/125 IP address space to carve out customer addresses for global reach.'\n                      },\n                      circuitConnectionStatus: {\n                        readOnly: true,\n                        description: 'Express Route Circuit connection state.',\n                        type: 'string',\n                        enum: [ 'Connected', 'Connecting', 'Disconnected' ],\n                        'x-ms-enum': {\n                          name: 'CircuitConnectionStatus',\n                          modelAsString: true\n                        }\n                      }\n                    }\n                  },\n                  circuitConnectionStatus: {\n                    description: 'Express Route Circuit connection state.',\n                    type: 'string',\n                    readOnly: true,\n                    enum: [ 'Connected', 'Connecting', 'Disconnected' ],\n                    'x-ms-enum': {\n                      name: 'CircuitConnectionStatus',\n                      modelAsString: true\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the express route circuit connection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n          },\n          description: 'The list of circuit connections associated with Azure Private Peering for this circuit.'\n        },\n        peeredConnections: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the peer express route circuit connection.',\n                properties: {\n                  expressRouteCircuitPeering: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  peerExpressRouteCircuitPeering: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  addressPrefix: {\n                    type: 'string',\n                    description: '/29 IP address space to carve out Customer addresses for tunnels.'\n                  },\n                  circuitConnectionStatus: {\n                    description: 'Express Route Circuit connection state.',\n                    type: 'string',\n                    readOnly: true,\n                    enum: [ 'Connected', 'Connecting', 'Disconnected' ],\n                    'x-ms-enum': {\n                      name: 'CircuitConnectionStatus',\n                      modelAsString: true\n                    }\n                  },\n                  connectionName: {\n                    type: 'string',\n                    description: 'The name of the express route circuit connection resource.'\n                  },\n                  authResourceGuid: {\n                    type: 'string',\n                    description: 'The resource guid of the authorization used for the express route circuit connection.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the peer express route circuit connection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n          },\n          readOnly: true,\n          description: 'The list of peered circuit connections associated with Azure Private Peering for this circuit.'\n        }\n      }\n    },\n    name: {\n      type: 'string',\n      description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n    },\n    etag: {\n      readOnly: true,\n      type: 'string',\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    },\n    type: {\n      readOnly: true,\n      type: 'string',\n      description: 'Type of the resource.'\n    }\n  },\n  allOf: [\n    {\n      properties: { id: { type: 'string', description: 'Resource ID.' } },\n      description: 'Reference to another subresource.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Peering in an ExpressRouteCircuit resource.'\n}\n")),(0,s.kt)("h2",{id:"misc"},"Misc"),(0,s.kt)("p",null,"The resource version is ",(0,s.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,s.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/expressRouteCircuit.json"},"here"),"."))}g.isMDXComponent=!0}}]);