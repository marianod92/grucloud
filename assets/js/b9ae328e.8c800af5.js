"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4925],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return y}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=i.createContext({}),c=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},l=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=c(t),y=r,g=l["".concat(p,".").concat(y)]||l[y]||d[y]||o;return t?i.createElement(g,s(s({ref:n},u),{},{components:t})):i.createElement(g,s({ref:n},u))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=l;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var c=2;c<o;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}l.displayName="MDXCreateElement"},45347:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return l}});var i=t(87462),r=t(63366),o=(t(67294),t(3905)),s=["components"],a={id:"ApplicationGateway",title:"ApplicationGateway"},p=void 0,c={unversionedId:"azure/resources/Network/ApplicationGateway",id:"azure/resources/Network/ApplicationGateway",isDocsHomePage:!1,title:"ApplicationGateway",description:"Provides a ApplicationGateway from the Network group",source:"@site/docs/azure/resources/Network/ApplicationGateway.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ApplicationGateway",permalink:"/docs/azure/resources/Network/ApplicationGateway",tags:[],version:"current",frontMatter:{id:"ApplicationGateway",title:"ApplicationGateway"},sidebar:"docs",previous:{title:"TableService",permalink:"/docs/azure/resources/Storage/TableService"},next:{title:"ApplicationGatewayPrivateEndpointConnection",permalink:"/docs/azure/resources/Network/ApplicationGatewayPrivateEndpointConnection"}},u=[{value:"Examples",id:"examples",children:[{value:"Create Application Gateway",id:"create-application-gateway",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:u};function l(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"ApplicationGateway")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"create-application-gateway"},"Create Application Gateway"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "ApplicationGateway",\n    group: "Network",\n    name: "myApplicationGateway",\n    properties: () => ({\n      identity: {\n        type: "UserAssigned",\n        userAssignedIdentities: {\n          "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1":\n            {},\n        },\n      },\n      location: "eastus",\n      properties: {\n        sku: { name: "Standard_v2", tier: "Standard_v2", capacity: 3 },\n        gatewayIPConfigurations: [\n          {\n            name: "appgwipc",\n            properties: {\n              subnet: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet",\n              },\n            },\n          },\n        ],\n        sslCertificates: [\n          { name: "sslcert", properties: { data: "****", password: "****" } },\n          {\n            name: "sslcert2",\n            properties: { keyVaultSecretId: "https://kv/secret" },\n          },\n        ],\n        trustedRootCertificates: [\n          { name: "rootcert", properties: { data: "****" } },\n          {\n            name: "rootcert1",\n            properties: { keyVaultSecretId: "https://kv/secret" },\n          },\n        ],\n        trustedClientCertificates: [\n          { name: "clientcert", properties: { data: "****" } },\n        ],\n        frontendIPConfigurations: [\n          {\n            name: "appgwfip",\n            properties: {\n              publicIPAddress: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip",\n              },\n            },\n          },\n        ],\n        frontendPorts: [\n          { name: "appgwfp", properties: { port: 443 } },\n          { name: "appgwfp80", properties: { port: 80 } },\n        ],\n        backendAddressPools: [\n          {\n            name: "appgwpool",\n            properties: {\n              backendAddresses: [\n                { ipAddress: "10.0.1.1" },\n                { ipAddress: "10.0.1.2" },\n              ],\n            },\n          },\n          {\n            name: "appgwpool1",\n            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool1",\n            properties: { backendAddresses: ["10.0.0.1", "10.0.0.2"] },\n          },\n        ],\n        backendHttpSettingsCollection: [\n          {\n            name: "appgwbhs",\n            properties: {\n              port: 80,\n              protocol: "Http",\n              cookieBasedAffinity: "Disabled",\n              requestTimeout: 30,\n            },\n          },\n        ],\n        sslProfiles: [\n          {\n            name: "sslProfile1",\n            properties: {\n              sslPolicy: {\n                policyType: "Custom",\n                minProtocolVersion: "TLSv1_1",\n                cipherSuites: ["TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"],\n              },\n              clientAuthConfiguration: { verifyClientCertIssuerDN: true },\n              trustedClientCertificates: [\n                {\n                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert",\n                },\n              ],\n            },\n          },\n        ],\n        httpListeners: [\n          {\n            name: "appgwhl",\n            properties: {\n              frontendIPConfiguration: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",\n              },\n              frontendPort: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp",\n              },\n              protocol: "Https",\n              sslCertificate: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert",\n              },\n              sslProfile: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1",\n              },\n              requireServerNameIndication: false,\n            },\n          },\n          {\n            name: "appgwhttplistener",\n            properties: {\n              frontendIPConfiguration: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",\n              },\n              frontendPort: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80",\n              },\n              protocol: "Http",\n            },\n          },\n        ],\n        urlPathMaps: [\n          {\n            name: "pathMap1",\n            properties: {\n              defaultBackendAddressPool: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",\n              },\n              defaultBackendHttpSettings: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",\n              },\n              defaultRewriteRuleSet: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",\n              },\n              defaultLoadDistributionPolicy: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1",\n              },\n              pathRules: [\n                {\n                  name: "apiPaths",\n                  properties: {\n                    paths: ["/api", "/v1/api"],\n                    backendAddressPool: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",\n                    },\n                    backendHttpSettings: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",\n                    },\n                    rewriteRuleSet: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",\n                    },\n                    loadDistributionPolicy: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1",\n                    },\n                  },\n                },\n              ],\n            },\n          },\n        ],\n        requestRoutingRules: [\n          {\n            name: "appgwrule",\n            properties: {\n              ruleType: "Basic",\n              priority: 10,\n              httpListener: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl",\n              },\n              backendAddressPool: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",\n              },\n              backendHttpSettings: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",\n              },\n              rewriteRuleSet: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",\n              },\n              loadDistributionPolicy: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1",\n              },\n            },\n          },\n          {\n            name: "appgwPathBasedRule",\n            properties: {\n              ruleType: "PathBasedRouting",\n              priority: 20,\n              httpListener: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener",\n              },\n              urlPathMap: {\n                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1",\n              },\n            },\n          },\n        ],\n        rewriteRuleSets: [\n          {\n            name: "rewriteRuleSet1",\n            properties: {\n              rewriteRules: [\n                {\n                  name: "Set X-Forwarded-For",\n                  ruleSequence: 102,\n                  conditions: [\n                    {\n                      variable: "http_req_Authorization",\n                      pattern: "^Bearer",\n                      ignoreCase: true,\n                      negate: false,\n                    },\n                  ],\n                  actionSet: {\n                    requestHeaderConfigurations: [\n                      {\n                        headerName: "X-Forwarded-For",\n                        headerValue: "{var_add_x_forwarded_for_proxy}",\n                      },\n                    ],\n                    responseHeaderConfigurations: [\n                      {\n                        headerName: "Strict-Transport-Security",\n                        headerValue: "max-age=31536000",\n                      },\n                    ],\n                    urlConfiguration: { modifiedPath: "/abc" },\n                  },\n                },\n              ],\n            },\n          },\n        ],\n        loadDistributionPolicies: [\n          {\n            name: "ldp1",\n            properties: {\n              loadDistributionAlgorithm: "RoundRobin",\n              loadDistributionTargets: [\n                {\n                  name: "ld11",\n                  properties: {\n                    weightPerServer: 40,\n                    backendAddressPool: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",\n                    },\n                  },\n                },\n                {\n                  name: "ld11",\n                  properties: {\n                    weightPerServer: 60,\n                    backendAddressPool: {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool1",\n                    },\n                  },\n                },\n              ],\n            },\n          },\n        ],\n        globalConfiguration: {\n          enableRequestBuffering: true,\n          enableResponseBuffering: true,\n        },\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      managedIdentities: ["myUserAssignedIdentity"],\n      subnets: ["mySubnet"],\n      publicIpAddresses: ["myPublicIPAddress"],\n      firewallPolicy: "myFirewallPolicy",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/ManagedIdentity/UserAssignedIdentity"},"UserAssignedIdentity")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../Network/PublicIPAddress.md"},"PublicIPAddress")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/FirewallPolicy"},"FirewallPolicy"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the application gateway.',\n      properties: {\n        sku: {\n          description: 'SKU of the application gateway resource.',\n          properties: {\n            name: {\n              type: 'string',\n              description: 'Name of an application gateway SKU.',\n              enum: [\n                'Standard_Small',\n                'Standard_Medium',\n                'Standard_Large',\n                'WAF_Medium',\n                'WAF_Large',\n                'Standard_v2',\n                'WAF_v2'\n              ],\n              'x-ms-enum': {\n                name: 'ApplicationGatewaySkuName',\n                modelAsString: true\n              }\n            },\n            tier: {\n              type: 'string',\n              description: 'Tier of an application gateway.',\n              enum: [ 'Standard', 'WAF', 'Standard_v2', 'WAF_v2' ],\n              'x-ms-enum': { name: 'ApplicationGatewayTier', modelAsString: true }\n            },\n            capacity: {\n              type: 'integer',\n              format: 'int32',\n              description: 'Capacity (instance count) of an application gateway.'\n            }\n          }\n        },\n        sslPolicy: {\n          description: 'SSL policy of the application gateway resource.',\n          properties: {\n            disabledSslProtocols: {\n              type: 'array',\n              description: 'Ssl protocols to be disabled on application gateway.',\n              items: {\n                type: 'string',\n                description: 'Ssl protocol enums.',\n                enum: [ 'TLSv1_0', 'TLSv1_1', 'TLSv1_2' ],\n                'x-ms-enum': {\n                  name: 'ApplicationGatewaySslProtocol',\n                  modelAsString: true\n                }\n              }\n            },\n            policyType: {\n              type: 'string',\n              description: 'Type of Ssl Policy.',\n              enum: [ 'Predefined', 'Custom' ],\n              'x-ms-enum': {\n                name: 'ApplicationGatewaySslPolicyType',\n                modelAsString: true\n              }\n            },\n            policyName: {\n              description: 'Name of Ssl predefined policy.',\n              type: 'string',\n              enum: [\n                'AppGwSslPolicy20150501',\n                'AppGwSslPolicy20170401',\n                'AppGwSslPolicy20170401S'\n              ],\n              'x-ms-enum': {\n                name: 'ApplicationGatewaySslPolicyName',\n                modelAsString: true\n              }\n            },\n            cipherSuites: {\n              type: 'array',\n              items: {\n                type: 'string',\n                description: 'Ssl cipher suites enums.',\n                enum: [\n                  'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',\n                  'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',\n                  'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA',\n                  'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA',\n                  'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',\n                  'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256',\n                  'TLS_DHE_RSA_WITH_AES_256_CBC_SHA',\n                  'TLS_DHE_RSA_WITH_AES_128_CBC_SHA',\n                  'TLS_RSA_WITH_AES_256_GCM_SHA384',\n                  'TLS_RSA_WITH_AES_128_GCM_SHA256',\n                  'TLS_RSA_WITH_AES_256_CBC_SHA256',\n                  'TLS_RSA_WITH_AES_128_CBC_SHA256',\n                  'TLS_RSA_WITH_AES_256_CBC_SHA',\n                  'TLS_RSA_WITH_AES_128_CBC_SHA',\n                  'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',\n                  'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256',\n                  'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',\n                  'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',\n                  'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA',\n                  'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA',\n                  'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256',\n                  'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256',\n                  'TLS_DHE_DSS_WITH_AES_256_CBC_SHA',\n                  'TLS_DHE_DSS_WITH_AES_128_CBC_SHA',\n                  'TLS_RSA_WITH_3DES_EDE_CBC_SHA',\n                  'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA',\n                  'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256',\n                  'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'\n                ],\n                'x-ms-enum': {\n                  name: 'ApplicationGatewaySslCipherSuite',\n                  modelAsString: true\n                }\n              },\n              description: 'Ssl cipher suites to be enabled in the specified order to application gateway.'\n            },\n            minProtocolVersion: {\n              description: 'Minimum version of Ssl protocol to be supported on application gateway.',\n              type: 'string',\n              enum: [ 'TLSv1_0', 'TLSv1_1', 'TLSv1_2' ],\n              'x-ms-enum': {\n                name: 'ApplicationGatewaySslProtocol',\n                modelAsString: true\n              }\n            }\n          }\n        },\n        operationalState: {\n          readOnly: true,\n          type: 'string',\n          description: 'Operational state of the application gateway resource.',\n          enum: [ 'Stopped', 'Starting', 'Running', 'Stopping' ],\n          'x-ms-enum': {\n            name: 'ApplicationGatewayOperationalState',\n            modelAsString: true\n          }\n        },\n        gatewayIPConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway IP configuration.',\n                properties: {\n                  subnet: {\n                    description: 'Reference to the subnet resource. A subnet from where application gateway gets its private address.',\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    'x-ms-azure-resource': true\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the application gateway IP configuration resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the IP configuration that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.'\n          },\n          description: 'Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        authenticationCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway authentication certificate.',\n                properties: {\n                  data: {\n                    type: 'string',\n                    description: 'Certificate public data.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the authentication certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the authentication certificate that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Authentication certificates of an application gateway.'\n          },\n          description: 'Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        trustedRootCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway trusted root certificate.',\n                properties: {\n                  data: {\n                    type: 'string',\n                    description: 'Certificate public data.'\n                  },\n                  keyVaultSecretId: {\n                    type: 'string',\n                    description: \"Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.\"\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the trusted root certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the trusted root certificate that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Trusted Root certificates of an application gateway.'\n          },\n          description: 'Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        trustedClientCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway trusted client certificate.',\n                properties: {\n                  data: {\n                    type: 'string',\n                    description: 'Certificate public data.'\n                  },\n                  validatedCertData: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Validated certificate data.'\n                  },\n                  clientCertIssuerDN: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Distinguished name of client certificate issuer.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the trusted client certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the trusted client certificate that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Trusted client certificates of an application gateway.'\n          },\n          description: 'Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        sslCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway SSL certificate.',\n                properties: {\n                  data: {\n                    type: 'string',\n                    description: 'Base-64 encoded pfx certificate. Only applicable in PUT Request.'\n                  },\n                  password: {\n                    type: 'string',\n                    description: 'Password for the pfx file specified in data. Only applicable in PUT request.'\n                  },\n                  publicCertData: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.'\n                  },\n                  keyVaultSecretId: {\n                    type: 'string',\n                    description: \"Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.\"\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the SSL certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the SSL certificate that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'SSL certificates of an application gateway.'\n          },\n          description: 'SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        frontendIPConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway frontend IP configuration.',\n                properties: {\n                  privateIPAddress: {\n                    type: 'string',\n                    description: 'PrivateIPAddress of the network interface IP Configuration.'\n                  },\n                  privateIPAllocationMethod: {\n                    description: 'The private IP address allocation method.',\n                    type: 'string',\n                    enum: [ 'Static', 'Dynamic' ],\n                    'x-ms-enum': { name: 'IPAllocationMethod', modelAsString: true }\n                  },\n                  subnet: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  publicIPAddress: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  privateLinkConfiguration: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the frontend IP configuration resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the frontend IP configuration that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Frontend IP configuration of an application gateway.'\n          },\n          description: 'Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        frontendPorts: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway frontend port.',\n                properties: {\n                  port: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'Frontend port.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the frontend port resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the frontend port that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Frontend port of an application gateway.'\n          },\n          description: 'Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        probes: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway probe.',\n                properties: {\n                  protocol: {\n                    description: 'The protocol used for the probe.',\n                    type: 'string',\n                    enum: [ 'Http', 'Https' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayProtocol',\n                      modelAsString: true\n                    }\n                  },\n                  host: {\n                    type: 'string',\n                    description: 'Host name to send the probe to.'\n                  },\n                  path: {\n                    type: 'string',\n                    description: \"Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.\"\n                  },\n                  interval: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.'\n                  },\n                  timeout: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.'\n                  },\n                  unhealthyThreshold: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.'\n                  },\n                  pickHostNameFromBackendHttpSettings: {\n                    type: 'boolean',\n                    description: 'Whether the host header should be picked from the backend http settings. Default value is false.'\n                  },\n                  minServers: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'Minimum number of servers that are always marked healthy. Default value is 0.'\n                  },\n                  match: {\n                    description: 'Criterion for classifying a healthy probe response.',\n                    properties: {\n                      body: {\n                        type: 'string',\n                        description: 'Body that must be contained in the health response. Default value is empty.'\n                      },\n                      statusCodes: {\n                        type: 'array',\n                        items: { type: 'string' },\n                        description: 'Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.'\n                      }\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the probe resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  port: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.',\n                    minimum: 1,\n                    maximum: 65535\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the probe that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Probe of the application gateway.'\n          },\n          description: 'Probes of the application gateway resource.'\n        },\n        backendAddressPools: {\n          type: 'array',\n          items: <ref *1> {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway backend address pool.',\n                properties: {\n                  backendIPConfigurations: {\n                    readOnly: true,\n                    type: 'array',\n                    items: {\n                      properties: {\n                        properties: {\n                          'x-ms-client-flatten': true,\n                          description: 'Network interface IP configuration properties.',\n                          properties: {\n                            gatewayLoadBalancer: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            virtualNetworkTaps: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                allOf: [Array],\n                                description: 'Virtual Network Tap resource.'\n                              },\n                              description: 'The reference to Virtual Network Taps.'\n                            },\n                            applicationGatewayBackendAddressPools: {\n                              type: 'array',\n                              items: [Circular *1],\n                              description: 'The reference to ApplicationGatewayBackendAddressPool resource.'\n                            },\n                            loadBalancerBackendAddressPools: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                allOf: [Array],\n                                description: 'Pool of backend IP addresses.'\n                              },\n                              description: 'The reference to LoadBalancerBackendAddressPool resource.'\n                            },\n                            loadBalancerInboundNatRules: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                allOf: [Array],\n                                description: 'Inbound NAT rule of the load balancer.'\n                              },\n                              description: 'A list of references of LoadBalancerInboundNatRules.'\n                            },\n                            privateIPAddress: {\n                              type: 'string',\n                              description: 'Private IP address of the IP configuration.'\n                            },\n                            privateIPAllocationMethod: {\n                              description: 'The private IP address allocation method.',\n                              type: 'string',\n                              enum: [ 'Static', 'Dynamic' ],\n                              'x-ms-enum': {\n                                name: 'IPAllocationMethod',\n                                modelAsString: true\n                              }\n                            },\n                            privateIPAddressVersion: {\n                              description: 'Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.',\n                              type: 'string',\n                              enum: [ 'IPv4', 'IPv6' ],\n                              'x-ms-enum': {\n                                name: 'IPVersion',\n                                modelAsString: true\n                              }\n                            },\n                            subnet: {\n                              properties: {\n                                properties: [Object],\n                                name: [Object],\n                                etag: [Object],\n                                type: [Object]\n                              },\n                              allOf: [ [Object] ],\n                              description: 'Subnet in a virtual network resource.'\n                            },\n                            primary: {\n                              type: 'boolean',\n                              description: 'Whether this is a primary customer address on the network interface.'\n                            },\n                            publicIPAddress: {\n                              description: 'Public IP address bound to the IP configuration.',\n                              properties: {\n                                extendedLocation: [Object],\n                                sku: [Object],\n                                properties: [Object],\n                                etag: [Object],\n                                zones: [Object]\n                              },\n                              allOf: [ [Object] ]\n                            },\n                            applicationSecurityGroups: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                allOf: [Array],\n                                description: 'An application security group in a resource group.'\n                              },\n                              description: 'Application security groups in which the IP configuration is included.'\n                            },\n                            provisioningState: {\n                              readOnly: true,\n                              description: 'The provisioning state of the network interface IP configuration.',\n                              type: 'string',\n                              enum: [\n                                'Succeeded',\n                                'Updating',\n                                'Deleting',\n                                'Failed'\n                              ],\n                              'x-ms-enum': {\n                                name: 'ProvisioningState',\n                                modelAsString: true\n                              }\n                            },\n                            privateLinkConnectionProperties: {\n                              description: 'PrivateLinkConnection properties for the network interface.',\n                              readOnly: true,\n                              properties: {\n                                groupId: [Object],\n                                requiredMemberName: [Object],\n                                fqdns: [Object]\n                              }\n                            }\n                          }\n                        },\n                        name: {\n                          type: 'string',\n                          description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n                        },\n                        etag: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'A unique read-only string that changes whenever the resource is updated.'\n                        },\n                        type: {\n                          type: 'string',\n                          description: 'Resource type.'\n                        }\n                      },\n                      allOf: [\n                        {\n                          properties: {\n                            id: {\n                              type: 'string',\n                              description: 'Resource ID.'\n                            }\n                          },\n                          description: 'Reference to another subresource.',\n                          'x-ms-azure-resource': true\n                        }\n                      ],\n                      description: 'IPConfiguration in a network interface.'\n                    },\n                    description: 'Collection of references to IPs defined in network interfaces.'\n                  },\n                  backendAddresses: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        fqdn: {\n                          type: 'string',\n                          description: 'Fully qualified domain name (FQDN).'\n                        },\n                        ipAddress: { type: 'string', description: 'IP address.' }\n                      },\n                      description: 'Backend address of an application gateway.'\n                    },\n                    description: 'Backend addresses.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the backend address pool resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the backend address pool that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Backend Address Pool of an application gateway.'\n          },\n          description: 'Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        backendHttpSettingsCollection: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway backend HTTP settings.',\n                properties: {\n                  port: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The destination port on the backend.'\n                  },\n                  protocol: {\n                    description: 'The protocol used to communicate with the backend.',\n                    type: 'string',\n                    enum: [ 'Http', 'Https' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayProtocol',\n                      modelAsString: true\n                    }\n                  },\n                  cookieBasedAffinity: {\n                    type: 'string',\n                    description: 'Cookie based affinity.',\n                    enum: [ 'Enabled', 'Disabled' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayCookieBasedAffinity',\n                      modelAsString: true\n                    }\n                  },\n                  requestTimeout: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.'\n                  },\n                  probe: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  authenticationCertificates: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Array of references to application gateway authentication certificates.'\n                  },\n                  trustedRootCertificates: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Array of references to application gateway trusted root certificates.'\n                  },\n                  connectionDraining: {\n                    description: 'Connection draining of the backend http settings resource.',\n                    properties: {\n                      enabled: {\n                        type: 'boolean',\n                        description: 'Whether connection draining is enabled or not.'\n                      },\n                      drainTimeoutInSec: {\n                        type: 'integer',\n                        format: 'int32',\n                        maximum: 3600,\n                        exclusiveMaximum: false,\n                        minimum: 1,\n                        exclusiveMinimum: false,\n                        description: 'The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.'\n                      }\n                    },\n                    required: [ 'enabled', 'drainTimeoutInSec' ]\n                  },\n                  hostName: {\n                    type: 'string',\n                    description: 'Host header to be sent to the backend servers.'\n                  },\n                  pickHostNameFromBackendAddress: {\n                    type: 'boolean',\n                    description: 'Whether to pick host header should be picked from the host name of the backend server. Default value is false.'\n                  },\n                  affinityCookieName: {\n                    type: 'string',\n                    description: 'Cookie name to use for the affinity cookie.'\n                  },\n                  probeEnabled: {\n                    type: 'boolean',\n                    description: 'Whether the probe is enabled. Default value is false.'\n                  },\n                  path: {\n                    type: 'string',\n                    description: 'Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the backend HTTP settings resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the backend http settings that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Backend address pool settings of an application gateway.'\n          },\n          description: 'Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        httpListeners: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway HTTP listener.',\n                properties: {\n                  frontendIPConfiguration: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  frontendPort: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  protocol: {\n                    description: 'Protocol of the HTTP listener.',\n                    type: 'string',\n                    enum: [ 'Http', 'Https' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayProtocol',\n                      modelAsString: true\n                    }\n                  },\n                  hostName: {\n                    type: 'string',\n                    description: 'Host name of HTTP listener.'\n                  },\n                  sslCertificate: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  sslProfile: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  requireServerNameIndication: {\n                    type: 'boolean',\n                    description: 'Applicable only if protocol is https. Enables SNI for multi-hosting.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the HTTP listener resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  customErrorConfigurations: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        statusCode: {\n                          type: 'string',\n                          description: 'Status code of the application gateway customer error.',\n                          enum: [ 'HttpStatus403', 'HttpStatus502' ],\n                          'x-ms-enum': {\n                            name: 'ApplicationGatewayCustomErrorStatusCode',\n                            modelAsString: true\n                          }\n                        },\n                        customErrorPageUrl: {\n                          type: 'string',\n                          description: 'Error page URL of the application gateway customer error.'\n                        }\n                      },\n                      description: 'Customer error of an application gateway.'\n                    },\n                    description: 'Custom error configurations of the HTTP listener.'\n                  },\n                  firewallPolicy: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  hostNames: {\n                    type: 'array',\n                    items: { type: 'string' },\n                    description: 'List of Host names for HTTP Listener that allows special wildcard characters as well.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the HTTP listener that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Http listener of an application gateway.'\n          },\n          description: 'Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        sslProfiles: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway SSL profile.',\n                properties: {\n                  trustedClientCertificates: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Array of references to application gateway trusted client certificates.'\n                  },\n                  sslPolicy: {\n                    description: 'SSL policy of the application gateway resource.',\n                    properties: {\n                      disabledSslProtocols: {\n                        type: 'array',\n                        description: 'Ssl protocols to be disabled on application gateway.',\n                        items: {\n                          type: 'string',\n                          description: 'Ssl protocol enums.',\n                          enum: [ 'TLSv1_0', 'TLSv1_1', 'TLSv1_2' ],\n                          'x-ms-enum': {\n                            name: 'ApplicationGatewaySslProtocol',\n                            modelAsString: true\n                          }\n                        }\n                      },\n                      policyType: {\n                        type: 'string',\n                        description: 'Type of Ssl Policy.',\n                        enum: [ 'Predefined', 'Custom' ],\n                        'x-ms-enum': {\n                          name: 'ApplicationGatewaySslPolicyType',\n                          modelAsString: true\n                        }\n                      },\n                      policyName: {\n                        description: 'Name of Ssl predefined policy.',\n                        type: 'string',\n                        enum: [\n                          'AppGwSslPolicy20150501',\n                          'AppGwSslPolicy20170401',\n                          'AppGwSslPolicy20170401S'\n                        ],\n                        'x-ms-enum': {\n                          name: 'ApplicationGatewaySslPolicyName',\n                          modelAsString: true\n                        }\n                      },\n                      cipherSuites: {\n                        type: 'array',\n                        items: {\n                          type: 'string',\n                          description: 'Ssl cipher suites enums.',\n                          enum: [\n                            'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',\n                            'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',\n                            'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA',\n                            'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA',\n                            'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',\n                            'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256',\n                            'TLS_DHE_RSA_WITH_AES_256_CBC_SHA',\n                            'TLS_DHE_RSA_WITH_AES_128_CBC_SHA',\n                            'TLS_RSA_WITH_AES_256_GCM_SHA384',\n                            'TLS_RSA_WITH_AES_128_GCM_SHA256',\n                            'TLS_RSA_WITH_AES_256_CBC_SHA256',\n                            'TLS_RSA_WITH_AES_128_CBC_SHA256',\n                            'TLS_RSA_WITH_AES_256_CBC_SHA',\n                            'TLS_RSA_WITH_AES_128_CBC_SHA',\n                            'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',\n                            'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256',\n                            'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',\n                            'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',\n                            'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA',\n                            'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA',\n                            'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256',\n                            'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256',\n                            'TLS_DHE_DSS_WITH_AES_256_CBC_SHA',\n                            'TLS_DHE_DSS_WITH_AES_128_CBC_SHA',\n                            'TLS_RSA_WITH_3DES_EDE_CBC_SHA',\n                            'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA',\n                            'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256',\n                            'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'\n                          ],\n                          'x-ms-enum': {\n                            name: 'ApplicationGatewaySslCipherSuite',\n                            modelAsString: true\n                          }\n                        },\n                        description: 'Ssl cipher suites to be enabled in the specified order to application gateway.'\n                      },\n                      minProtocolVersion: {\n                        description: 'Minimum version of Ssl protocol to be supported on application gateway.',\n                        type: 'string',\n                        enum: [ 'TLSv1_0', 'TLSv1_1', 'TLSv1_2' ],\n                        'x-ms-enum': {\n                          name: 'ApplicationGatewaySslProtocol',\n                          modelAsString: true\n                        }\n                      }\n                    }\n                  },\n                  clientAuthConfiguration: {\n                    description: 'Client authentication configuration of the application gateway resource.',\n                    properties: {\n                      verifyClientCertIssuerDN: {\n                        type: 'boolean',\n                        description: 'Verify client certificate issuer name on the application gateway.'\n                      }\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the HTTP listener resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the SSL profile that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'SSL profile of an application gateway.'\n          },\n          description: 'SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        urlPathMaps: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway URL path map.',\n                properties: {\n                  defaultBackendAddressPool: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  defaultBackendHttpSettings: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  defaultRewriteRuleSet: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  defaultRedirectConfiguration: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  defaultLoadDistributionPolicy: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  pathRules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        properties: {\n                          'x-ms-client-flatten': true,\n                          description: 'Properties of the application gateway path rule.',\n                          properties: {\n                            paths: {\n                              type: 'array',\n                              items: { type: 'string' },\n                              description: 'Path rules of URL path map.'\n                            },\n                            backendAddressPool: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            backendHttpSettings: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            redirectConfiguration: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            rewriteRuleSet: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            loadDistributionPolicy: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            provisioningState: {\n                              readOnly: true,\n                              description: 'The provisioning state of the path rule resource.',\n                              type: 'string',\n                              enum: [\n                                'Succeeded',\n                                'Updating',\n                                'Deleting',\n                                'Failed'\n                              ],\n                              'x-ms-enum': {\n                                name: 'ProvisioningState',\n                                modelAsString: true\n                              }\n                            },\n                            firewallPolicy: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        },\n                        name: {\n                          type: 'string',\n                          description: 'Name of the path rule that is unique within an Application Gateway.'\n                        },\n                        etag: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'A unique read-only string that changes whenever the resource is updated.'\n                        },\n                        type: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'Type of the resource.'\n                        }\n                      },\n                      allOf: [\n                        {\n                          properties: {\n                            id: {\n                              type: 'string',\n                              description: 'Resource ID.'\n                            }\n                          },\n                          description: 'Reference to another subresource.',\n                          'x-ms-azure-resource': true\n                        }\n                      ],\n                      description: 'Path rule of URL path map of an application gateway.'\n                    },\n                    description: 'Path rule of URL path map resource.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the URL path map resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the URL path map that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.'\n          },\n          description: 'URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        requestRoutingRules: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway request routing rule.',\n                properties: {\n                  ruleType: {\n                    type: 'string',\n                    description: 'Rule type.',\n                    enum: [ 'Basic', 'PathBasedRouting' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayRequestRoutingRuleType',\n                      modelAsString: true\n                    }\n                  },\n                  priority: {\n                    type: 'integer',\n                    format: 'int32',\n                    minimum: 1,\n                    exclusiveMinimum: false,\n                    maximum: 20000,\n                    exclusiveMaximum: false,\n                    description: 'Priority of the request routing rule.'\n                  },\n                  backendAddressPool: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  backendHttpSettings: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  httpListener: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  urlPathMap: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  rewriteRuleSet: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  redirectConfiguration: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  loadDistributionPolicy: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the request routing rule resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the request routing rule that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Request routing rule of an application gateway.'\n          },\n          description: 'Request routing rules of the application gateway resource.'\n        },\n        rewriteRuleSets: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway rewrite rule set.',\n                properties: {\n                  rewriteRules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        name: {\n                          type: 'string',\n                          description: 'Name of the rewrite rule that is unique within an Application Gateway.'\n                        },\n                        ruleSequence: {\n                          type: 'integer',\n                          description: 'Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.'\n                        },\n                        conditions: {\n                          type: 'array',\n                          items: {\n                            properties: {\n                              variable: {\n                                type: 'string',\n                                description: 'The condition parameter of the RewriteRuleCondition.'\n                              },\n                              pattern: {\n                                type: 'string',\n                                description: 'The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.'\n                              },\n                              ignoreCase: {\n                                type: 'boolean',\n                                description: 'Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.'\n                              },\n                              negate: {\n                                type: 'boolean',\n                                description: 'Setting this value as truth will force to check the negation of the condition given by the user.'\n                              }\n                            },\n                            description: 'Set of conditions in the Rewrite Rule in Application Gateway.'\n                          },\n                          description: 'Conditions based on which the action set execution will be evaluated.'\n                        },\n                        actionSet: {\n                          type: 'object',\n                          description: 'Set of actions to be done as part of the rewrite Rule.',\n                          properties: {\n                            requestHeaderConfigurations: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                description: 'Header configuration of the Actions set in Application Gateway.'\n                              },\n                              description: 'Request Header Actions in the Action Set.'\n                            },\n                            responseHeaderConfigurations: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                description: 'Header configuration of the Actions set in Application Gateway.'\n                              },\n                              description: 'Response Header Actions in the Action Set.'\n                            },\n                            urlConfiguration: {\n                              description: 'Url Configuration Action in the Action Set.',\n                              properties: {\n                                modifiedPath: [Object],\n                                modifiedQueryString: [Object],\n                                reroute: [Object]\n                              }\n                            }\n                          }\n                        }\n                      },\n                      description: 'Rewrite rule of an application gateway.'\n                    },\n                    description: 'Rewrite rules in the rewrite rule set.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the rewrite rule set resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the rewrite rule set that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Rewrite rule set of an application gateway.'\n          },\n          description: 'Rewrite rules for the application gateway resource.'\n        },\n        redirectConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway redirect configuration.',\n                properties: {\n                  redirectType: {\n                    type: 'string',\n                    description: 'HTTP redirection type.',\n                    enum: [ 'Permanent', 'Found', 'SeeOther', 'Temporary' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayRedirectType',\n                      modelAsString: true\n                    }\n                  },\n                  targetListener: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  targetUrl: {\n                    type: 'string',\n                    description: 'Url to redirect the request to.'\n                  },\n                  includePath: {\n                    type: 'boolean',\n                    description: 'Include path in the redirected url.'\n                  },\n                  includeQueryString: {\n                    type: 'boolean',\n                    description: 'Include query string in the redirected url.'\n                  },\n                  requestRoutingRules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Request routing specifying redirect configuration.'\n                  },\n                  urlPathMaps: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Url path maps specifying default redirect configuration.'\n                  },\n                  pathRules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'Path rules specifying redirect configuration.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the redirect configuration that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Redirect configuration of an application gateway.'\n          },\n          description: 'Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).'\n        },\n        webApplicationFirewallConfiguration: {\n          description: 'Web application firewall configuration.',\n          properties: {\n            enabled: {\n              type: 'boolean',\n              description: 'Whether the web application firewall is enabled or not.'\n            },\n            firewallMode: {\n              type: 'string',\n              description: 'Web application firewall mode.',\n              enum: [ 'Detection', 'Prevention' ],\n              'x-ms-enum': {\n                name: 'ApplicationGatewayFirewallMode',\n                modelAsString: true\n              }\n            },\n            ruleSetType: {\n              type: 'string',\n              description: \"The type of the web application firewall rule set. Possible values are: 'OWASP'.\"\n            },\n            ruleSetVersion: {\n              type: 'string',\n              description: 'The version of the rule set type.'\n            },\n            disabledRuleGroups: {\n              type: 'array',\n              items: {\n                properties: {\n                  ruleGroupName: {\n                    type: 'string',\n                    description: 'The name of the rule group that will be disabled.'\n                  },\n                  rules: {\n                    type: 'array',\n                    items: {\n                      type: 'integer',\n                      format: 'int32',\n                      'x-nullable': false\n                    },\n                    description: 'The list of rules that will be disabled. If null, all rules of the rule group will be disabled.'\n                  }\n                },\n                required: [ 'ruleGroupName' ],\n                description: 'Allows to disable rules within a rule group or an entire rule group.'\n              },\n              description: 'The disabled rule groups.'\n            },\n            requestBodyCheck: {\n              type: 'boolean',\n              description: 'Whether allow WAF to check request Body.'\n            },\n            maxRequestBodySize: {\n              type: 'integer',\n              format: 'int32',\n              maximum: 128,\n              exclusiveMaximum: false,\n              minimum: 8,\n              exclusiveMinimum: false,\n              description: 'Maximum request body size for WAF.'\n            },\n            maxRequestBodySizeInKb: {\n              type: 'integer',\n              format: 'int32',\n              maximum: 128,\n              exclusiveMaximum: false,\n              minimum: 8,\n              exclusiveMinimum: false,\n              description: 'Maximum request body size in Kb for WAF.'\n            },\n            fileUploadLimitInMb: {\n              type: 'integer',\n              format: 'int32',\n              minimum: 0,\n              exclusiveMinimum: false,\n              description: 'Maximum file upload size in Mb for WAF.'\n            },\n            exclusions: {\n              type: 'array',\n              items: {\n                properties: {\n                  matchVariable: {\n                    type: 'string',\n                    description: 'The variable to be excluded.'\n                  },\n                  selectorMatchOperator: {\n                    type: 'string',\n                    description: 'When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.'\n                  },\n                  selector: {\n                    type: 'string',\n                    description: 'When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.'\n                  }\n                },\n                required: [\n                  'matchVariable',\n                  'selectorMatchOperator',\n                  'selector'\n                ],\n                description: 'Allow to exclude some variable satisfy the condition for the WAF check.'\n              },\n              description: 'The exclusion list.'\n            }\n          },\n          required: [\n            'enabled',\n            'firewallMode',\n            'ruleSetType',\n            'ruleSetVersion'\n          ]\n        },\n        firewallPolicy: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        enableHttp2: {\n          type: 'boolean',\n          description: 'Whether HTTP2 is enabled on the application gateway resource.'\n        },\n        enableFips: {\n          type: 'boolean',\n          description: 'Whether FIPS is enabled on the application gateway resource.'\n        },\n        autoscaleConfiguration: {\n          description: 'Autoscale Configuration.',\n          properties: {\n            minCapacity: {\n              type: 'integer',\n              format: 'int32',\n              minimum: 0,\n              exclusiveMinimum: false,\n              description: 'Lower bound on number of Application Gateway capacity.'\n            },\n            maxCapacity: {\n              type: 'integer',\n              format: 'int32',\n              minimum: 2,\n              exclusiveMinimum: false,\n              description: 'Upper bound on number of Application Gateway capacity.'\n            }\n          },\n          required: [ 'minCapacity' ]\n        },\n        privateLinkConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway private link configuration.',\n                properties: {\n                  ipConfigurations: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        properties: {\n                          'x-ms-client-flatten': true,\n                          description: 'Properties of an application gateway private link ip configuration.',\n                          properties: {\n                            privateIPAddress: {\n                              type: 'string',\n                              description: 'The private IP address of the IP configuration.'\n                            },\n                            privateIPAllocationMethod: {\n                              description: 'The private IP address allocation method.',\n                              type: 'string',\n                              enum: [ 'Static', 'Dynamic' ],\n                              'x-ms-enum': {\n                                name: 'IPAllocationMethod',\n                                modelAsString: true\n                              }\n                            },\n                            subnet: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            },\n                            primary: {\n                              type: 'boolean',\n                              description: 'Whether the ip configuration is primary or not.'\n                            },\n                            provisioningState: {\n                              readOnly: true,\n                              description: 'The provisioning state of the application gateway private link IP configuration.',\n                              type: 'string',\n                              enum: [\n                                'Succeeded',\n                                'Updating',\n                                'Deleting',\n                                'Failed'\n                              ],\n                              'x-ms-enum': {\n                                name: 'ProvisioningState',\n                                modelAsString: true\n                              }\n                            }\n                          }\n                        },\n                        name: {\n                          type: 'string',\n                          description: 'The name of application gateway private link ip configuration.'\n                        },\n                        etag: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'A unique read-only string that changes whenever the resource is updated.'\n                        },\n                        type: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'The resource type.'\n                        }\n                      },\n                      allOf: [\n                        {\n                          properties: {\n                            id: {\n                              type: 'string',\n                              description: 'Resource ID.'\n                            }\n                          },\n                          description: 'Reference to another subresource.',\n                          'x-ms-azure-resource': true\n                        }\n                      ],\n                      description: 'The application gateway private link ip configuration.'\n                    },\n                    description: 'An array of application gateway private link ip configurations.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the application gateway private link configuration.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the private link configuration that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Private Link Configuration on an application gateway.'\n          },\n          description: 'PrivateLink configurations on application gateway.'\n        },\n        privateEndpointConnections: {\n          readOnly: true,\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway private endpoint connection.',\n                properties: {\n                  privateEndpoint: {\n                    properties: {\n                      extendedLocation: {\n                        description: 'The extended location of the load balancer.',\n                        properties: {\n                          name: {\n                            type: 'string',\n                            description: 'The name of the extended location.'\n                          },\n                          type: {\n                            description: 'The type of the extended location.',\n                            type: 'string',\n                            enum: [ 'EdgeZone' ],\n                            'x-ms-enum': {\n                              name: 'ExtendedLocationTypes',\n                              modelAsString: true\n                            }\n                          }\n                        }\n                      },\n                      properties: {\n                        'x-ms-client-flatten': true,\n                        description: 'Properties of the private endpoint.',\n                        properties: {\n                          subnet: {\n                            description: 'The ID of the subnet from which the private IP will be allocated.',\n                            properties: {\n                              properties: {\n                                'x-ms-client-flatten': true,\n                                description: 'Properties of the subnet.',\n                                properties: [Object]\n                              },\n                              name: {\n                                type: 'string',\n                                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n                              },\n                              etag: {\n                                readOnly: true,\n                                type: 'string',\n                                description: 'A unique read-only string that changes whenever the resource is updated.'\n                              },\n                              type: {\n                                type: 'string',\n                                description: 'Resource type.'\n                              }\n                            },\n                            allOf: [\n                              {\n                                properties: [Object],\n                                description: 'Reference to another subresource.',\n                                'x-ms-azure-resource': true\n                              }\n                            ]\n                          },\n                          networkInterfaces: {\n                            type: 'array',\n                            readOnly: true,\n                            items: {\n                              properties: {\n                                extendedLocation: [Object],\n                                properties: [Object],\n                                etag: [Object]\n                              },\n                              allOf: [ [Object] ],\n                              description: 'A network interface in a resource group.'\n                            },\n                            description: 'An array of references to the network interfaces created for this private endpoint.'\n                          },\n                          provisioningState: {\n                            readOnly: true,\n                            description: 'The provisioning state of the private endpoint resource.',\n                            type: 'string',\n                            enum: [\n                              'Succeeded',\n                              'Updating',\n                              'Deleting',\n                              'Failed'\n                            ],\n                            'x-ms-enum': {\n                              name: 'ProvisioningState',\n                              modelAsString: true\n                            }\n                          },\n                          privateLinkServiceConnections: {\n                            type: 'array',\n                            items: {\n                              properties: {\n                                properties: [Object],\n                                name: [Object],\n                                type: [Object],\n                                etag: [Object]\n                              },\n                              allOf: [ [Object] ],\n                              description: 'PrivateLinkServiceConnection resource.'\n                            },\n                            description: 'A grouping of information about the connection to the remote resource.'\n                          },\n                          manualPrivateLinkServiceConnections: {\n                            type: 'array',\n                            items: {\n                              properties: {\n                                properties: [Object],\n                                name: [Object],\n                                type: [Object],\n                                etag: [Object]\n                              },\n                              allOf: [ [Object] ],\n                              description: 'PrivateLinkServiceConnection resource.'\n                            },\n                            description: 'A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.'\n                          },\n                          customDnsConfigs: {\n                            type: 'array',\n                            items: {\n                              properties: { fqdn: [Object], ipAddresses: [Object] },\n                              description: 'Contains custom Dns resolution configuration from customer.'\n                            },\n                            description: 'An array of custom dns configurations.'\n                          },\n                          applicationSecurityGroups: {\n                            type: 'array',\n                            items: {\n                              properties: { properties: [Object], etag: [Object] },\n                              allOf: [ [Object] ],\n                              description: 'An application security group in a resource group.'\n                            },\n                            description: 'Application security groups in which the private endpoint IP configuration is included.'\n                          },\n                          ipConfigurations: {\n                            type: 'array',\n                            items: {\n                              type: 'object',\n                              properties: {\n                                properties: [Object],\n                                name: [Object],\n                                type: [Object],\n                                etag: [Object]\n                              },\n                              description: 'An IP Configuration of the private endpoint.'\n                            },\n                            description: \"A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.\"\n                          },\n                          customNetworkInterfaceName: {\n                            type: 'string',\n                            description: 'The custom name of the network interface attached to the private endpoint.'\n                          }\n                        }\n                      },\n                      etag: {\n                        readOnly: true,\n                        type: 'string',\n                        description: 'A unique read-only string that changes whenever the resource is updated.'\n                      }\n                    },\n                    allOf: [\n                      {\n                        properties: {\n                          id: {\n                            type: 'string',\n                            description: 'Resource ID.'\n                          },\n                          name: {\n                            readOnly: true,\n                            type: 'string',\n                            description: 'Resource name.'\n                          },\n                          type: {\n                            readOnly: true,\n                            type: 'string',\n                            description: 'Resource type.'\n                          },\n                          location: {\n                            type: 'string',\n                            description: 'Resource location.'\n                          },\n                          tags: {\n                            type: 'object',\n                            additionalProperties: { type: 'string' },\n                            description: 'Resource tags.'\n                          }\n                        },\n                        description: 'Common resource representation.',\n                        'x-ms-azure-resource': true\n                      }\n                    ],\n                    description: 'Private endpoint resource.',\n                    readOnly: true\n                  },\n                  privateLinkServiceConnectionState: {\n                    description: 'A collection of information about the state of the connection between service consumer and provider.',\n                    properties: {\n                      status: {\n                        type: 'string',\n                        description: 'Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.'\n                      },\n                      description: {\n                        type: 'string',\n                        description: 'The reason for approval/rejection of the connection.'\n                      },\n                      actionsRequired: {\n                        type: 'string',\n                        description: 'A message indicating if changes on the service provider require any updates on the consumer.'\n                      }\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the application gateway private endpoint connection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  linkIdentifier: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'The consumer link id.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the private endpoint connection on an application gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Private Endpoint connection on an application gateway.'\n          },\n          description: 'Private Endpoint connections on application gateway.'\n        },\n        resourceGuid: {\n          readOnly: true,\n          type: 'string',\n          description: 'The resource GUID property of the application gateway resource.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the application gateway resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        customErrorConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              statusCode: {\n                type: 'string',\n                description: 'Status code of the application gateway customer error.',\n                enum: [ 'HttpStatus403', 'HttpStatus502' ],\n                'x-ms-enum': {\n                  name: 'ApplicationGatewayCustomErrorStatusCode',\n                  modelAsString: true\n                }\n              },\n              customErrorPageUrl: {\n                type: 'string',\n                description: 'Error page URL of the application gateway customer error.'\n              }\n            },\n            description: 'Customer error of an application gateway.'\n          },\n          description: 'Custom error configurations of the application gateway resource.'\n        },\n        forceFirewallPolicyAssociation: {\n          type: 'boolean',\n          description: 'If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.'\n        },\n        loadDistributionPolicies: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the application gateway load distribution policy.',\n                properties: {\n                  loadDistributionTargets: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        properties: {\n                          'x-ms-client-flatten': true,\n                          description: 'Properties of the application gateway load distribution target.',\n                          properties: {\n                            weightPerServer: {\n                              type: 'integer',\n                              format: 'int32',\n                              maximum: 100,\n                              exclusiveMaximum: false,\n                              minimum: 1,\n                              exclusiveMinimum: false,\n                              description: 'Weight per server. Range between 1 and 100.'\n                            },\n                            backendAddressPool: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        },\n                        name: {\n                          type: 'string',\n                          description: 'Name of the load distribution policy that is unique within an Application Gateway.'\n                        },\n                        etag: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'A unique read-only string that changes whenever the resource is updated.'\n                        },\n                        type: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'Type of the resource.'\n                        }\n                      },\n                      allOf: [\n                        {\n                          properties: {\n                            id: {\n                              type: 'string',\n                              description: 'Resource ID.'\n                            }\n                          },\n                          description: 'Reference to another subresource.',\n                          'x-ms-azure-resource': true\n                        }\n                      ],\n                      description: 'Load Distribution Target of an application gateway.'\n                    },\n                    description: 'Load Distribution Targets resource of an application gateway.'\n                  },\n                  loadDistributionAlgorithm: {\n                    description: 'Load Distribution Targets resource of an application gateway.',\n                    type: 'string',\n                    enum: [ 'RoundRobin', 'LeastConnections', 'IpHash' ],\n                    'x-ms-enum': {\n                      name: 'ApplicationGatewayLoadDistributionAlgorithm',\n                      modelAsString: true\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the Load Distribution Policy resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the load distribution policy that is unique within an Application Gateway.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Load Distribution Policy of an application gateway.'\n          },\n          description: 'Load distribution policies of the application gateway resource.'\n        },\n        globalConfiguration: {\n          description: 'Global Configuration.',\n          properties: {\n            enableRequestBuffering: {\n              type: 'boolean',\n              description: 'Enable request buffering.'\n            },\n            enableResponseBuffering: {\n              type: 'boolean',\n              description: 'Enable response buffering.'\n            }\n          }\n        }\n      }\n    },\n    etag: {\n      readOnly: true,\n      type: 'string',\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    },\n    zones: {\n      type: 'array',\n      items: { type: 'string' },\n      description: 'A list of availability zones denoting where the resource needs to come from.'\n    },\n    identity: {\n      description: 'The identity of the application gateway, if configured.',\n      properties: {\n        principalId: {\n          readOnly: true,\n          type: 'string',\n          description: 'The principal id of the system assigned identity. This property will only be provided for a system assigned identity.'\n        },\n        tenantId: {\n          readOnly: true,\n          type: 'string',\n          description: 'The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.'\n        },\n        type: {\n          type: 'string',\n          description: \"The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.\",\n          enum: [\n            'SystemAssigned',\n            'UserAssigned',\n            'SystemAssigned, UserAssigned',\n            'None'\n          ],\n          'x-ms-enum': { name: 'ResourceIdentityType', modelAsString: false }\n        },\n        userAssignedIdentities: {\n          type: 'object',\n          additionalProperties: {\n            type: 'object',\n            properties: {\n              principalId: {\n                readOnly: true,\n                type: 'string',\n                description: 'The principal id of user assigned identity.'\n              },\n              clientId: {\n                readOnly: true,\n                type: 'string',\n                description: 'The client id of user assigned identity.'\n              }\n            }\n          },\n          description: \"The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\"\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Application gateway resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/applicationGateway.json"},"here"),"."))}l.isMDXComponent=!0}}]);