"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8065],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return f}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),c=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=c(r),f=i,m=l["".concat(u,".").concat(f)]||l[f]||d[f]||o;return r?t.createElement(m,a(a({ref:n},p),{},{components:r})):t.createElement(m,a({ref:n},p))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=l;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},94615:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return l}});var t=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],s={id:"FlexibleServer",title:"FlexibleServer"},u=void 0,c={unversionedId:"azure/resources/DBforPostgreSQL/FlexibleServer",id:"azure/resources/DBforPostgreSQL/FlexibleServer",isDocsHomePage:!1,title:"FlexibleServer",description:"Provides a FlexibleServer from the DBforPostgreSQL group",source:"@site/docs/azure/resources/DBforPostgreSQL/FlexibleServer.md",sourceDirName:"azure/resources/DBforPostgreSQL",slug:"/azure/resources/DBforPostgreSQL/FlexibleServer",permalink:"/docs/azure/resources/DBforPostgreSQL/FlexibleServer",tags:[],version:"current",frontMatter:{id:"FlexibleServer",title:"FlexibleServer"},sidebar:"docs",previous:{title:"FirewallRule",permalink:"/docs/azure/resources/DBforPostgreSQL/FirewallRule"},next:{title:"PrivateEndpointConnection",permalink:"/docs/azure/resources/DBforPostgreSQL/PrivateEndpointConnection"}},p=[{value:"Examples",id:"examples",children:[{value:"Create a new server",id:"create-a-new-server",children:[],level:3},{value:"Create a database as a point in time restore",id:"create-a-database-as-a-point-in-time-restore",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:p};function l(e){var n=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"FlexibleServer")," from the ",(0,o.kt)("strong",{parentName:"p"},"DBforPostgreSQL")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"create-a-new-server"},"Create a new server"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FlexibleServer",\n    group: "DBforPostgreSQL",\n    name: "myFlexibleServer",\n    properties: () => ({\n      location: "westus",\n      sku: { tier: "GeneralPurpose", name: "Standard_D4s_v3" },\n      properties: {\n        administratorLogin: "cloudsa",\n        administratorLoginPassword: "password",\n        version: "12",\n        availabilityZone: "1",\n        createMode: "Create",\n        storage: { storageSizeGB: 512 },\n        backup: { backupRetentionDays: 7, geoRedundantBackup: "Disabled" },\n        network: {\n          delegatedSubnetResourceId:\n            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-vnet-subnet",\n          privateDnsZoneArmResourceId:\n            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourcegroups/testrg/providers/Microsoft.Network/privateDnsZones/test-private-dns-zone.postgres.database.azure.com",\n        },\n        highAvailability: { mode: "ZoneRedundant" },\n      },\n      tags: { ElasticServer: "1" },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      subnet: "mySubnet",\n    }),\n  },\n];\n\n')),(0,o.kt)("h3",{id:"create-a-database-as-a-point-in-time-restore"},"Create a database as a point in time restore"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "FlexibleServer",\n    group: "DBforPostgreSQL",\n    name: "myFlexibleServer",\n    properties: () => ({\n      location: "westus",\n      properties: {\n        createMode: "PointInTimeRestore",\n        sourceServerResourceId:\n          "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforPostgreSQL/flexibleServers/sourcepgservername",\n        pointInTimeUTC: "2021-06-27T00:04:59.4078005+00:00",\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      subnet: "mySubnet",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    sku: {\n      description: 'The SKU (pricing tier) of the server.',\n      properties: {\n        name: {\n          type: 'string',\n          description: 'The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.'\n        },\n        tier: {\n          type: 'string',\n          description: 'The tier of the particular SKU, e.g. Burstable.',\n          enum: [ 'Burstable', 'GeneralPurpose', 'MemoryOptimized' ],\n          'x-ms-enum': { name: 'SkuTier', modelAsString: true }\n        }\n      },\n      required: [ 'name', 'tier' ]\n    },\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the server.',\n      properties: {\n        administratorLogin: {\n          type: 'string',\n          description: \"The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).\",\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        administratorLoginPassword: {\n          type: 'string',\n          description: 'The administrator login password (required for server creation).',\n          'x-ms-secret': true,\n          format: 'password',\n          'x-ms-mutability': [ 'create', 'update' ]\n        },\n        version: {\n          description: 'PostgreSQL Server version.',\n          type: 'string',\n          enum: [ '13', '12', '11' ],\n          'x-ms-enum': { name: 'ServerVersion', modelAsString: true }\n        },\n        minorVersion: {\n          type: 'string',\n          description: 'The minor version of the server.',\n          readOnly: true\n        },\n        state: {\n          type: 'string',\n          description: 'A state of a server that is visible to user.',\n          readOnly: true,\n          enum: [\n            'Ready',\n            'Dropping',\n            'Disabled',\n            'Starting',\n            'Stopping',\n            'Stopped',\n            'Updating'\n          ],\n          'x-ms-enum': { name: 'ServerState', modelAsString: true }\n        },\n        fullyQualifiedDomainName: {\n          type: 'string',\n          description: 'The fully qualified domain name of a server.',\n          readOnly: true\n        },\n        storage: {\n          default: null,\n          description: 'Storage properties of a server.',\n          properties: {\n            storageSizeGB: {\n              type: 'integer',\n              format: 'int32',\n              description: 'Max storage allowed for a server.'\n            }\n          }\n        },\n        backup: {\n          default: null,\n          description: 'Backup properties of a server.',\n          properties: {\n            backupRetentionDays: {\n              type: 'integer',\n              format: 'int32',\n              default: 7,\n              description: 'Backup retention days for the server.'\n            },\n            geoRedundantBackup: {\n              type: 'string',\n              default: 'Disabled',\n              description: 'A value indicating whether Geo-Redundant backup is enabled on the server.',\n              enum: [ 'Enabled', 'Disabled' ],\n              'x-ms-enum': { name: 'GeoRedundantBackupEnum', modelAsString: true },\n              'x-ms-mutability': [ 'create', 'read' ]\n            },\n            earliestRestoreDate: {\n              type: 'string',\n              format: 'date-time',\n              description: 'The earliest restore point time (ISO8601 format) for server.',\n              readOnly: true\n            }\n          }\n        },\n        network: {\n          default: null,\n          description: 'Network properties of a server.',\n          'x-ms-mutability': [ 'create', 'read' ],\n          properties: {\n            publicNetworkAccess: {\n              type: 'string',\n              description: 'public network access is enabled or not',\n              enum: [ 'Enabled', 'Disabled' ],\n              'x-ms-enum': {\n                name: 'ServerPublicNetworkAccessState',\n                modelAsString: true\n              },\n              readOnly: true\n            },\n            delegatedSubnetResourceId: {\n              type: 'string',\n              default: '',\n              description: 'delegated subnet arm resource id.',\n              'x-ms-mutability': [ 'create', 'read' ]\n            },\n            privateDnsZoneArmResourceId: {\n              type: 'string',\n              default: '',\n              description: 'private dns zone arm resource id.',\n              'x-ms-mutability': [ 'create', 'read' ]\n            }\n          }\n        },\n        highAvailability: {\n          default: null,\n          description: 'High availability properties of a server.',\n          properties: {\n            mode: {\n              type: 'string',\n              default: 'Disabled',\n              description: 'The HA mode for the server.',\n              enum: [ 'Disabled', 'ZoneRedundant' ],\n              'x-ms-enum': { name: 'HighAvailabilityMode', modelAsString: true }\n            },\n            state: {\n              type: 'string',\n              description: 'A state of a HA server that is visible to user.',\n              enum: [\n                'NotEnabled',\n                'CreatingStandby',\n                'ReplicatingData',\n                'FailingOver',\n                'Healthy',\n                'RemovingStandby'\n              ],\n              'x-ms-enum': { name: 'ServerHAState', modelAsString: true },\n              readOnly: true\n            },\n            standbyAvailabilityZone: {\n              type: 'string',\n              default: '',\n              description: 'availability zone information of the standby.'\n            }\n          }\n        },\n        maintenanceWindow: {\n          default: null,\n          description: 'Maintenance window properties of a server.',\n          'x-ms-mutability': [ 'update', 'read' ],\n          type: 'object',\n          properties: {\n            customWindow: {\n              type: 'string',\n              default: 'Disabled',\n              description: 'indicates whether custom window is enabled or disabled'\n            },\n            startHour: {\n              type: 'integer',\n              format: 'int32',\n              default: 0,\n              description: 'start hour for maintenance window'\n            },\n            startMinute: {\n              type: 'integer',\n              format: 'int32',\n              default: 0,\n              description: 'start minute for maintenance window'\n            },\n            dayOfWeek: {\n              type: 'integer',\n              format: 'int32',\n              default: 0,\n              description: 'day of week for maintenance window'\n            }\n          }\n        },\n        sourceServerResourceId: {\n          type: 'string',\n          description: \"The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore'.\",\n          'x-ms-mutability': [ 'create' ]\n        },\n        pointInTimeUTC: {\n          type: 'string',\n          format: 'date-time',\n          description: \"Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore'.\",\n          'x-ms-mutability': [ 'create' ]\n        },\n        availabilityZone: {\n          type: 'string',\n          default: '',\n          description: 'availability zone information of the server.',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        createMode: {\n          type: 'string',\n          description: 'The mode to create a new PostgreSQL server.',\n          enum: [ 'Default', 'Create', 'Update', 'PointInTimeRestore' ],\n          'x-ms-enum': { name: 'CreateMode', modelAsString: true },\n          'x-ms-mutability': [ 'create', 'update' ]\n        }\n      }\n    },\n    systemData: {\n      readOnly: true,\n      description: 'The system metadata relating to this resource.',\n      type: 'object',\n      properties: {\n        createdBy: {\n          type: 'string',\n          description: 'The identity that created the resource.'\n        },\n        createdByType: {\n          type: 'string',\n          description: 'The type of identity that created the resource.',\n          enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n          'x-ms-enum': { name: 'createdByType', modelAsString: true }\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'The timestamp of resource creation (UTC).'\n        },\n        lastModifiedBy: {\n          type: 'string',\n          description: 'The identity that last modified the resource.'\n        },\n        lastModifiedByType: {\n          type: 'string',\n          description: 'The type of identity that last modified the resource.',\n          enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n          'x-ms-enum': { name: 'createdByType', modelAsString: true }\n        },\n        lastModifiedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'The timestamp of resource last modification (UTC)'\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      title: 'Tracked Resource',\n      description: \"The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\",\n      type: 'object',\n      properties: {\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          'x-ms-mutability': [ 'read', 'create', 'update' ],\n          description: 'Resource tags.'\n        },\n        location: {\n          type: 'string',\n          'x-ms-mutability': [ 'read', 'create' ],\n          description: 'The geo-location where the resource lives'\n        }\n      },\n      required: [ 'location' ],\n      allOf: [\n        {\n          title: 'Resource',\n          description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n          type: 'object',\n          properties: {\n            id: {\n              readOnly: true,\n              type: 'string',\n              description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n            },\n            name: {\n              readOnly: true,\n              type: 'string',\n              description: 'The name of the resource'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n            }\n          },\n          'x-ms-azure-resource': true\n        }\n      ]\n    }\n  ],\n  description: 'Represents a server.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-06-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2021-06-01/postgresql.json"},"here"),"."))}l.isMDXComponent=!0}}]);