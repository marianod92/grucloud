"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[622],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(u,".").concat(m)]||d[m]||l[m]||i;return t?r.createElement(f,s(s({ref:n},p),{},{components:t})):r.createElement(f,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},86314:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),s=["components"],a={id:"ExpressRouteConnection",title:"ExpressRouteConnection"},u=void 0,c={unversionedId:"azure/resources/Network/ExpressRouteConnection",id:"azure/resources/Network/ExpressRouteConnection",isDocsHomePage:!1,title:"ExpressRouteConnection",description:"Provides a ExpressRouteConnection from the Network group",source:"@site/docs/azure/resources/Network/ExpressRouteConnection.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ExpressRouteConnection",permalink:"/docs/azure/resources/Network/ExpressRouteConnection",tags:[],version:"current",frontMatter:{id:"ExpressRouteConnection",title:"ExpressRouteConnection"},sidebar:"docs",previous:{title:"ExpressRouteCircuitPeering",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitPeering"},next:{title:"ExpressRouteGateway",permalink:"/docs/azure/resources/Network/ExpressRouteGateway"}},p=[{value:"Examples",id:"examples",children:[{value:"ExpressRouteConnectionCreate",id:"expressrouteconnectioncreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"ExpressRouteConnection")," from the ",(0,i.kt)("strong",{parentName:"p"},"Network")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"expressrouteconnectioncreate"},"ExpressRouteConnectionCreate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "ExpressRouteConnection",\n    group: "Network",\n    name: "myExpressRouteConnection",\n    properties: () => ({\n      id: "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2/expressRouteConnections/connectionName",\n      name: "connectionName",\n      properties: {\n        routingWeight: 2,\n        authorizationKey: "authorizationKey",\n        expressRouteCircuitPeering: {\n          id: "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering",\n        },\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      expressRouteCircuitPeering: "myExpressRouteCircuitPeering",\n      routeTable: "myRouteTable",\n      expressRouteGateway: "myExpressRouteGateway",\n    }),\n  },\n];\n\n')),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteCircuitPeering"},"ExpressRouteCircuitPeering")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/RouteTable"},"RouteTable")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteGateway"},"ExpressRouteGateway"))),(0,i.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  required: [ 'name' ],\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the express route connection.',\n      required: [ 'expressRouteCircuitPeering' ],\n      properties: {\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the express route connection resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        expressRouteCircuitPeering: {\n          description: 'The ExpressRoute circuit peering.',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'The ID of the ExpressRoute circuit peering.'\n            }\n          }\n        },\n        authorizationKey: {\n          type: 'string',\n          description: 'Authorization key to establish the connection.'\n        },\n        routingWeight: {\n          type: 'integer',\n          description: 'The routing weight associated to the connection.'\n        },\n        enableInternetSecurity: { type: 'boolean', description: 'Enable internet security.' },\n        expressRouteGatewayBypass: {\n          type: 'boolean',\n          description: 'Enable FastPath to vWan Firewall hub.'\n        },\n        routingConfiguration: {\n          description: 'The Routing Configuration indicating the associated and propagated route tables on this connection.',\n          properties: {\n            associatedRouteTable: {\n              properties: { id: { type: 'string', description: 'Resource ID.' } },\n              description: 'Reference to another subresource.',\n              'x-ms-azure-resource': true\n            },\n            propagatedRouteTables: {\n              description: 'The list of RouteTables to advertise the routes to.',\n              properties: {\n                labels: {\n                  type: 'array',\n                  description: 'The list of labels.',\n                  items: { type: 'string' }\n                },\n                ids: {\n                  type: 'array',\n                  description: 'The list of resource ids of all the RouteTables.',\n                  items: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  }\n                }\n              }\n            },\n            vnetRoutes: {\n              description: 'List of routes that control routing from VirtualHub into a virtual network connection.',\n              properties: {\n                staticRoutes: {\n                  type: 'array',\n                  description: 'List of all Static Routes.',\n                  items: {\n                    description: 'List of all Static Routes.',\n                    properties: {\n                      name: {\n                        type: 'string',\n                        description: 'The name of the StaticRoute that is unique within a VnetRoute.'\n                      },\n                      addressPrefixes: {\n                        type: 'array',\n                        description: 'List of all address prefixes.',\n                        items: { type: 'string' }\n                      },\n                      nextHopIpAddress: {\n                        type: 'string',\n                        description: 'The ip address of the next hop.'\n                      }\n                    }\n                  }\n                },\n                bgpConnections: {\n                  type: 'array',\n                  readOnly: true,\n                  description: 'The list of references to HubBgpConnection objects.',\n                  items: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    name: { type: 'string', description: 'The name of the resource.' }\n  },\n  allOf: [\n    {\n      properties: { id: { type: 'string', description: 'Resource ID.' } },\n      description: 'Reference to another subresource.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'ExpressRouteConnection resource.'\n}\n")),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/virtualWan.json"},"here"),"."))}d.isMDXComponent=!0}}]);