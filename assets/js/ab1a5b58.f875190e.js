"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[407],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return m}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),l=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,s=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||s;return r?t.createElement(f,o(o({ref:n},c),{},{components:r})):t.createElement(f,o({ref:n},c))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=d;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var l=2;l<s;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8551:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var t=r(87462),i=r(63366),s=(r(67294),r(3905)),o=["components"],a={id:"AzureFirewall",title:"AzureFirewall"},u=void 0,l={unversionedId:"azure/resources/Network/AzureFirewall",id:"azure/resources/Network/AzureFirewall",isDocsHomePage:!1,title:"AzureFirewall",description:"Provides a AzureFirewall from the Network group",source:"@site/docs/azure/resources/Network/AzureFirewall.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/AzureFirewall",permalink:"/docs/azure/resources/Network/AzureFirewall",tags:[],version:"current",frontMatter:{id:"AzureFirewall",title:"AzureFirewall"},sidebar:"docs",previous:{title:"ApplicationSecurityGroup",permalink:"/docs/azure/resources/Network/ApplicationSecurityGroup"},next:{title:"BastionHost",permalink:"/docs/azure/resources/Network/BastionHost"}},c=[{value:"Examples",id:"examples",children:[{value:"Create Azure Firewall",id:"create-azure-firewall",children:[],level:3},{value:"Create Azure Firewall With Zones",id:"create-azure-firewall-with-zones",children:[],level:3},{value:"Create Azure Firewall With management subnet",id:"create-azure-firewall-with-management-subnet",children:[],level:3},{value:"Create Azure Firewall in virtual Hub",id:"create-azure-firewall-in-virtual-hub",children:[],level:3},{value:"Create Azure Firewall With Additional Properties",id:"create-azure-firewall-with-additional-properties",children:[],level:3},{value:"Create Azure Firewall With IpGroups",id:"create-azure-firewall-with-ipgroups",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],p={toc:c};function d(e){var n=e.components,r=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Provides a ",(0,s.kt)("strong",{parentName:"p"},"AzureFirewall")," from the ",(0,s.kt)("strong",{parentName:"p"},"Network")," group"),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"create-azure-firewall"},"Create Azure Firewall"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    tags: { key1: "value1" },\n    location: "West US",\n    zones: [],\n    properties: {\n      sku: { name: "AZFW_VNet", tier: "Standard" },\n      threatIntelMode: "Alert",\n      ipConfigurations: [\n        {\n          name: "azureFirewallIpConfiguration",\n          properties: {\n            subnet: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",\n            },\n            publicIPAddress: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",\n            },\n          },\n        },\n      ],\n      applicationRuleCollections: [\n        {\n          name: "apprulecoll",\n          properties: {\n            priority: 110,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                targetFqdns: ["www.test.com"],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n              },\n            ],\n          },\n        },\n      ],\n      natRuleCollections: [\n        {\n          name: "natrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Dnat" },\n            rules: [\n              {\n                name: "DNAT-HTTPS-traffic",\n                description: "D-NAT all outbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["443"],\n                protocols: ["TCP"],\n                translatedAddress: "1.2.3.5",\n                translatedPort: "8443",\n              },\n              {\n                name: "DNAT-HTTP-traffic-With-FQDN",\n                description: "D-NAT all inbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["80"],\n                protocols: ["TCP"],\n                translatedFqdn: "internalhttpserver",\n                translatedPort: "880",\n              },\n            ],\n          },\n        },\n      ],\n      networkRuleCollections: [\n        {\n          name: "netrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "L4-traffic",\n                description: "Block traffic based on source IPs and ports",\n                sourceAddresses: [\n                  "192.168.1.1-192.168.1.12",\n                  "10.1.4.12-10.1.4.255",\n                ],\n                destinationPorts: ["443-444", "8443"],\n                destinationAddresses: ["*"],\n                protocols: ["TCP"],\n              },\n              {\n                name: "L4-traffic-with-FQDN",\n                description:\n                  "Block traffic based on source IPs and ports to amazon",\n                sourceAddresses: ["10.2.4.12-10.2.4.255"],\n                destinationPorts: ["443-444", "8443"],\n                destinationFqdns: ["www.amazon.com"],\n                protocols: ["TCP"],\n              },\n            ],\n          },\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h3",{id:"create-azure-firewall-with-zones"},"Create Azure Firewall With Zones"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    location: "West US 2",\n    tags: { key1: "value1" },\n    zones: ["1", "2", "3"],\n    properties: {\n      threatIntelMode: "Alert",\n      sku: { name: "AZFW_VNet", tier: "Standard" },\n      ipConfigurations: [\n        {\n          name: "azureFirewallIpConfiguration",\n          properties: {\n            subnet: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",\n            },\n            publicIPAddress: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",\n            },\n          },\n        },\n      ],\n      applicationRuleCollections: [\n        {\n          name: "apprulecoll",\n          properties: {\n            priority: 110,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                targetFqdns: ["www.test.com"],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n              },\n            ],\n          },\n        },\n      ],\n      natRuleCollections: [\n        {\n          name: "natrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Dnat" },\n            rules: [\n              {\n                name: "DNAT-HTTPS-traffic",\n                description: "D-NAT all outbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["443"],\n                protocols: ["TCP"],\n                translatedAddress: "1.2.3.5",\n                translatedPort: "8443",\n              },\n              {\n                name: "DNAT-HTTP-traffic-With-FQDN",\n                description: "D-NAT all inbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["80"],\n                protocols: ["TCP"],\n                translatedFqdn: "internalhttpserver",\n                translatedPort: "880",\n              },\n            ],\n          },\n        },\n      ],\n      networkRuleCollections: [\n        {\n          name: "netrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "L4-traffic",\n                description: "Block traffic based on source IPs and ports",\n                sourceAddresses: [\n                  "192.168.1.1-192.168.1.12",\n                  "10.1.4.12-10.1.4.255",\n                ],\n                destinationPorts: ["443-444", "8443"],\n                destinationAddresses: ["*"],\n                protocols: ["TCP"],\n              },\n              {\n                name: "L4-traffic-with-FQDN",\n                description:\n                  "Block traffic based on source IPs and ports to amazon",\n                sourceAddresses: ["10.2.4.12-10.2.4.255"],\n                destinationPorts: ["443-444", "8443"],\n                destinationFqdns: ["www.amazon.com"],\n                protocols: ["TCP"],\n              },\n            ],\n          },\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h3",{id:"create-azure-firewall-with-management-subnet"},"Create Azure Firewall With management subnet"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    tags: { key1: "value1" },\n    location: "West US",\n    zones: [],\n    properties: {\n      sku: { name: "AZFW_VNet", tier: "Standard" },\n      threatIntelMode: "Alert",\n      ipConfigurations: [\n        {\n          name: "azureFirewallIpConfiguration",\n          properties: {\n            subnet: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",\n            },\n            publicIPAddress: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",\n            },\n          },\n        },\n      ],\n      managementIpConfiguration: {\n        name: "azureFirewallMgmtIpConfiguration",\n        properties: {\n          subnet: {\n            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallManagementSubnet",\n          },\n          publicIPAddress: {\n            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/managementPipName",\n          },\n        },\n      },\n      applicationRuleCollections: [\n        {\n          name: "apprulecoll",\n          properties: {\n            priority: 110,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                targetFqdns: ["www.test.com"],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n              },\n            ],\n          },\n        },\n      ],\n      natRuleCollections: [\n        {\n          name: "natrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Dnat" },\n            rules: [\n              {\n                name: "DNAT-HTTPS-traffic",\n                description: "D-NAT all outbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["443"],\n                protocols: ["TCP"],\n                translatedAddress: "1.2.3.5",\n                translatedPort: "8443",\n              },\n              {\n                name: "DNAT-HTTP-traffic-With-FQDN",\n                description: "D-NAT all inbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["80"],\n                protocols: ["TCP"],\n                translatedFqdn: "internalhttpserver",\n                translatedPort: "880",\n              },\n            ],\n          },\n        },\n      ],\n      networkRuleCollections: [\n        {\n          name: "netrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "L4-traffic",\n                description: "Block traffic based on source IPs and ports",\n                sourceAddresses: [\n                  "192.168.1.1-192.168.1.12",\n                  "10.1.4.12-10.1.4.255",\n                ],\n                destinationPorts: ["443-444", "8443"],\n                destinationAddresses: ["*"],\n                protocols: ["TCP"],\n              },\n              {\n                name: "L4-traffic-with-FQDN",\n                description:\n                  "Block traffic based on source IPs and ports to amazon",\n                sourceAddresses: ["10.2.4.12-10.2.4.255"],\n                destinationPorts: ["443-444", "8443"],\n                destinationFqdns: ["www.amazon.com"],\n                protocols: ["TCP"],\n              },\n            ],\n          },\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h3",{id:"create-azure-firewall-in-virtual-hub"},"Create Azure Firewall in virtual Hub"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    tags: { key1: "value1" },\n    location: "West US",\n    zones: [],\n    properties: {\n      sku: { name: "AZFW_Hub", tier: "Standard" },\n      threatIntelMode: "Alert",\n      virtualHub: {\n        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",\n      },\n      firewallPolicy: {\n        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/firewallPolicies/policy1",\n      },\n      hubIPAddresses: { publicIPs: { addresses: [], count: 1 } },\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h3",{id:"create-azure-firewall-with-additional-properties"},"Create Azure Firewall With Additional Properties"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    tags: { key1: "value1" },\n    location: "West US",\n    zones: [],\n    properties: {\n      sku: { name: "AZFW_VNet", tier: "Standard" },\n      threatIntelMode: "Alert",\n      ipConfigurations: [\n        {\n          name: "azureFirewallIpConfiguration",\n          properties: {\n            subnet: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",\n            },\n            publicIPAddress: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",\n            },\n          },\n        },\n      ],\n      applicationRuleCollections: [\n        {\n          name: "apprulecoll",\n          properties: {\n            priority: 110,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                targetFqdns: ["www.test.com"],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n              },\n            ],\n          },\n        },\n      ],\n      natRuleCollections: [\n        {\n          name: "natrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Dnat" },\n            rules: [\n              {\n                name: "DNAT-HTTPS-traffic",\n                description: "D-NAT all outbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["443"],\n                protocols: ["TCP"],\n                translatedAddress: "1.2.3.5",\n                translatedPort: "8443",\n              },\n              {\n                name: "DNAT-HTTP-traffic-With-FQDN",\n                description: "D-NAT all inbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["80"],\n                protocols: ["TCP"],\n                translatedFqdn: "internalhttpserver",\n                translatedPort: "880",\n              },\n            ],\n          },\n        },\n      ],\n      networkRuleCollections: [\n        {\n          name: "netrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "L4-traffic",\n                description: "Block traffic based on source IPs and ports",\n                sourceAddresses: [\n                  "192.168.1.1-192.168.1.12",\n                  "10.1.4.12-10.1.4.255",\n                ],\n                destinationPorts: ["443-444", "8443"],\n                destinationAddresses: ["*"],\n                protocols: ["TCP"],\n              },\n              {\n                name: "L4-traffic-with-FQDN",\n                description:\n                  "Block traffic based on source IPs and ports to amazon",\n                sourceAddresses: ["10.2.4.12-10.2.4.255"],\n                destinationPorts: ["443-444", "8443"],\n                destinationFqdns: ["www.amazon.com"],\n                protocols: ["TCP"],\n              },\n            ],\n          },\n        },\n      ],\n      ipGroups: [],\n      additionalProperties: { key1: "value1", key2: "value2" },\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h3",{id:"create-azure-firewall-with-ipgroups"},"Create Azure Firewall With IpGroups"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeAzureFirewall({\n  name: "myAzureFirewall",\n  properties: () => ({\n    tags: { key1: "value1" },\n    location: "West US",\n    zones: [],\n    properties: {\n      sku: { name: "AZFW_VNet", tier: "Standard" },\n      threatIntelMode: "Alert",\n      ipConfigurations: [\n        {\n          name: "azureFirewallIpConfiguration",\n          properties: {\n            subnet: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",\n            },\n            publicIPAddress: {\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",\n            },\n          },\n        },\n      ],\n      applicationRuleCollections: [\n        {\n          name: "apprulecoll",\n          properties: {\n            priority: 110,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "rule1",\n                description: "Deny inbound rule",\n                protocols: [{ protocolType: "Https", port: 443 }],\n                targetFqdns: ["www.test.com"],\n                sourceAddresses: ["216.58.216.164", "10.0.0.0/24"],\n              },\n            ],\n          },\n        },\n      ],\n      natRuleCollections: [\n        {\n          name: "natrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Dnat" },\n            rules: [\n              {\n                name: "DNAT-HTTPS-traffic",\n                description: "D-NAT all outbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["443"],\n                protocols: ["TCP"],\n                translatedAddress: "1.2.3.5",\n                translatedPort: "8443",\n              },\n              {\n                name: "DNAT-HTTP-traffic-With-FQDN",\n                description: "D-NAT all inbound web traffic for inspection",\n                sourceAddresses: ["*"],\n                destinationAddresses: ["1.2.3.4"],\n                destinationPorts: ["80"],\n                protocols: ["TCP"],\n                translatedFqdn: "internalhttpserver",\n                translatedPort: "880",\n              },\n            ],\n          },\n        },\n      ],\n      networkRuleCollections: [\n        {\n          name: "netrulecoll",\n          properties: {\n            priority: 112,\n            action: { type: "Deny" },\n            rules: [\n              {\n                name: "L4-traffic",\n                description: "Block traffic based on source IPs and ports",\n                sourceAddresses: [\n                  "192.168.1.1-192.168.1.12",\n                  "10.1.4.12-10.1.4.255",\n                ],\n                destinationPorts: ["443-444", "8443"],\n                destinationAddresses: ["*"],\n                protocols: ["TCP"],\n              },\n              {\n                name: "L4-traffic-with-FQDN",\n                description:\n                  "Block traffic based on source IPs and ports to amazon",\n                sourceAddresses: ["10.2.4.12-10.2.4.255"],\n                destinationPorts: ["443-444", "8443"],\n                destinationFqdns: ["www.amazon.com"],\n                protocols: ["TCP"],\n              },\n            ],\n          },\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnets: [resources.Network.Subnet["mySubnet"]],\n    publicIpAddresses: [resources.Network.PublicIPAddress["myPublicIPAddress"]],\n    virtualHub: resources.Network.VirtualHub["myVirtualHub"],\n    firewallPolicy: resources.Network.FirewallPolicy["myFirewallPolicy"],\n  }),\n});\n\n')),(0,s.kt)("h2",{id:"dependencies"},"Dependencies"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"../Network/PublicIPAddress.md"},"PublicIPAddress")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualHub"},"VirtualHub")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/FirewallPolicy"},"FirewallPolicy"))),(0,s.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the azure firewall.',\n      properties: {\n        applicationRuleCollections: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the azure firewall application rule collection.',\n                properties: {\n                  priority: {\n                    type: 'integer',\n                    format: 'int32',\n                    maximum: 65000,\n                    exclusiveMaximum: false,\n                    minimum: 100,\n                    exclusiveMinimum: false,\n                    description: 'Priority of the application rule collection resource.'\n                  },\n                  action: {\n                    description: 'The action type of a rule collection.',\n                    properties: {\n                      type: {\n                        description: 'The type of action.',\n                        type: 'string',\n                        enum: [ 'Allow', 'Deny' ],\n                        'x-ms-enum': {\n                          name: 'AzureFirewallRCActionType',\n                          modelAsString: true\n                        }\n                      }\n                    }\n                  },\n                  rules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        name: {\n                          type: 'string',\n                          description: 'Name of the application rule.'\n                        },\n                        description: {\n                          type: 'string',\n                          description: 'Description of the rule.'\n                        },\n                        sourceAddresses: {\n                          type: 'array',\n                          description: 'List of source IP addresses for this rule.',\n                          items: { type: 'string' }\n                        },\n                        protocols: {\n                          type: 'array',\n                          items: {\n                            properties: {\n                              protocolType: {\n                                description: 'Protocol type.',\n                                type: 'string',\n                                enum: [Array],\n                                'x-ms-enum': [Object]\n                              },\n                              port: {\n                                type: 'integer',\n                                format: 'int32',\n                                maximum: 64000,\n                                exclusiveMaximum: false,\n                                minimum: 0,\n                                exclusiveMinimum: false,\n                                description: 'Port number for the protocol, cannot be greater than 64000. This field is optional.'\n                              }\n                            },\n                            description: 'Properties of the application rule protocol.'\n                          },\n                          description: 'Array of ApplicationRuleProtocols.'\n                        },\n                        targetFqdns: {\n                          type: 'array',\n                          description: 'List of FQDNs for this rule.',\n                          items: { type: 'string' }\n                        },\n                        fqdnTags: {\n                          type: 'array',\n                          description: 'List of FQDN Tags for this rule.',\n                          items: { type: 'string' }\n                        },\n                        sourceIpGroups: {\n                          type: 'array',\n                          description: 'List of source IpGroups for this rule.',\n                          items: { type: 'string' }\n                        }\n                      },\n                      description: 'Properties of an application rule.'\n                    },\n                    description: 'Collection of rules used by a application rule collection.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the application rule collection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Application rule collection resource.'\n          },\n          description: 'Collection of application rule collections used by Azure Firewall.'\n        },\n        natRuleCollections: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the azure firewall NAT rule collection.',\n                properties: {\n                  priority: {\n                    type: 'integer',\n                    format: 'int32',\n                    maximum: 65000,\n                    exclusiveMaximum: false,\n                    minimum: 100,\n                    exclusiveMinimum: false,\n                    description: 'Priority of the NAT rule collection resource.'\n                  },\n                  action: {\n                    description: 'The action type of a NAT rule collection.',\n                    properties: {\n                      type: {\n                        description: 'The type of action.',\n                        type: 'string',\n                        enum: [ 'Snat', 'Dnat' ],\n                        'x-ms-enum': {\n                          name: 'AzureFirewallNatRCActionType',\n                          modelAsString: true\n                        }\n                      }\n                    }\n                  },\n                  rules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        name: {\n                          type: 'string',\n                          description: 'Name of the NAT rule.'\n                        },\n                        description: {\n                          type: 'string',\n                          description: 'Description of the rule.'\n                        },\n                        sourceAddresses: {\n                          type: 'array',\n                          description: 'List of source IP addresses for this rule.',\n                          items: { type: 'string' }\n                        },\n                        destinationAddresses: {\n                          type: 'array',\n                          description: 'List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.',\n                          items: { type: 'string' }\n                        },\n                        destinationPorts: {\n                          type: 'array',\n                          description: 'List of destination ports.',\n                          items: { type: 'string' }\n                        },\n                        protocols: {\n                          type: 'array',\n                          items: {\n                            type: 'string',\n                            description: 'The protocol of a Network Rule resource.',\n                            enum: [ 'TCP', 'UDP', 'Any', 'ICMP' ],\n                            'x-ms-enum': {\n                              name: 'AzureFirewallNetworkRuleProtocol',\n                              modelAsString: true\n                            }\n                          },\n                          description: 'Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.'\n                        },\n                        translatedAddress: {\n                          type: 'string',\n                          description: 'The translated address for this NAT rule.'\n                        },\n                        translatedPort: {\n                          type: 'string',\n                          description: 'The translated port for this NAT rule.'\n                        },\n                        translatedFqdn: {\n                          type: 'string',\n                          description: 'The translated FQDN for this NAT rule.'\n                        },\n                        sourceIpGroups: {\n                          type: 'array',\n                          description: 'List of source IpGroups for this rule.',\n                          items: { type: 'string' }\n                        }\n                      },\n                      description: 'Properties of a NAT rule.'\n                    },\n                    description: 'Collection of rules used by a NAT rule collection.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the NAT rule collection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'NAT rule collection resource.'\n          },\n          description: 'Collection of NAT rule collections used by Azure Firewall.'\n        },\n        networkRuleCollections: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the azure firewall network rule collection.',\n                properties: {\n                  priority: {\n                    type: 'integer',\n                    format: 'int32',\n                    maximum: 65000,\n                    exclusiveMaximum: false,\n                    minimum: 100,\n                    exclusiveMinimum: false,\n                    description: 'Priority of the network rule collection resource.'\n                  },\n                  action: {\n                    description: 'The action type of a rule collection.',\n                    properties: {\n                      type: {\n                        description: 'The type of action.',\n                        type: 'string',\n                        enum: [ 'Allow', 'Deny' ],\n                        'x-ms-enum': {\n                          name: 'AzureFirewallRCActionType',\n                          modelAsString: true\n                        }\n                      }\n                    }\n                  },\n                  rules: {\n                    type: 'array',\n                    items: {\n                      properties: {\n                        name: {\n                          type: 'string',\n                          description: 'Name of the network rule.'\n                        },\n                        description: {\n                          type: 'string',\n                          description: 'Description of the rule.'\n                        },\n                        protocols: {\n                          type: 'array',\n                          items: {\n                            type: 'string',\n                            description: 'The protocol of a Network Rule resource.',\n                            enum: [ 'TCP', 'UDP', 'Any', 'ICMP' ],\n                            'x-ms-enum': {\n                              name: 'AzureFirewallNetworkRuleProtocol',\n                              modelAsString: true\n                            }\n                          },\n                          description: 'Array of AzureFirewallNetworkRuleProtocols.'\n                        },\n                        sourceAddresses: {\n                          type: 'array',\n                          description: 'List of source IP addresses for this rule.',\n                          items: { type: 'string' }\n                        },\n                        destinationAddresses: {\n                          type: 'array',\n                          description: 'List of destination IP addresses.',\n                          items: { type: 'string' }\n                        },\n                        destinationPorts: {\n                          type: 'array',\n                          description: 'List of destination ports.',\n                          items: { type: 'string' }\n                        },\n                        destinationFqdns: {\n                          type: 'array',\n                          description: 'List of destination FQDNs.',\n                          items: { type: 'string' }\n                        },\n                        sourceIpGroups: {\n                          type: 'array',\n                          description: 'List of source IpGroups for this rule.',\n                          items: { type: 'string' }\n                        },\n                        destinationIpGroups: {\n                          type: 'array',\n                          description: 'List of destination IpGroups for this rule.',\n                          items: { type: 'string' }\n                        }\n                      },\n                      description: 'Properties of the network rule.'\n                    },\n                    description: 'Collection of rules used by a network rule collection.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the network rule collection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Network rule collection resource.'\n          },\n          description: 'Collection of network rule collections used by Azure Firewall.'\n        },\n        ipConfigurations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the azure firewall IP configuration.',\n                properties: {\n                  privateIPAddress: {\n                    type: 'string',\n                    readOnly: true,\n                    description: 'The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.'\n                  },\n                  subnet: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  publicIPAddress: {\n                    properties: {\n                      id: { type: 'string', description: 'Resource ID.' }\n                    },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the Azure firewall IP configuration resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'IP configuration of an Azure Firewall.'\n          },\n          description: 'IP configuration of the Azure Firewall resource.'\n        },\n        managementIpConfiguration: {\n          properties: {\n            properties: {\n              'x-ms-client-flatten': true,\n              description: 'Properties of the azure firewall IP configuration.',\n              properties: {\n                privateIPAddress: {\n                  type: 'string',\n                  readOnly: true,\n                  description: 'The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.'\n                },\n                subnet: {\n                  properties: {\n                    id: { type: 'string', description: 'Resource ID.' }\n                  },\n                  description: 'Reference to another subresource.',\n                  'x-ms-azure-resource': true\n                },\n                publicIPAddress: {\n                  properties: {\n                    id: { type: 'string', description: 'Resource ID.' }\n                  },\n                  description: 'Reference to another subresource.',\n                  'x-ms-azure-resource': true\n                },\n                provisioningState: {\n                  readOnly: true,\n                  description: 'The provisioning state of the Azure firewall IP configuration resource.',\n                  type: 'string',\n                  enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                  'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                }\n              }\n            },\n            name: {\n              type: 'string',\n              description: 'Name of the resource that is unique within a resource group. This name can be used to access the resource.'\n            },\n            etag: {\n              type: 'string',\n              readOnly: true,\n              description: 'A unique read-only string that changes whenever the resource is updated.'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'Type of the resource.'\n            }\n          },\n          allOf: [\n            {\n              properties: { id: { type: 'string', description: 'Resource ID.' } },\n              description: 'Reference to another subresource.',\n              'x-ms-azure-resource': true\n            }\n          ],\n          description: 'IP configuration of an Azure Firewall.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the Azure firewall resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        threatIntelMode: {\n          description: 'The operation mode for Threat Intelligence.',\n          type: 'string',\n          enum: [ 'Alert', 'Deny', 'Off' ],\n          'x-ms-enum': { name: 'AzureFirewallThreatIntelMode', modelAsString: true }\n        },\n        virtualHub: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        firewallPolicy: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        hubIPAddresses: {\n          description: 'IP addresses associated with AzureFirewall.',\n          properties: {\n            publicIPs: {\n              description: 'Public IP addresses associated with azure firewall.',\n              properties: {\n                addresses: {\n                  type: 'array',\n                  description: 'The list of Public IP addresses associated with azure firewall or IP addresses to be retained.',\n                  items: {\n                    properties: {\n                      address: {\n                        type: 'string',\n                        description: 'Public IP Address value.'\n                      }\n                    },\n                    description: 'Public IP Address associated with azure firewall.'\n                  }\n                },\n                count: {\n                  type: 'integer',\n                  format: 'int32',\n                  description: 'The number of Public IP addresses associated with azure firewall.'\n                }\n              }\n            },\n            privateIPAddress: {\n              type: 'string',\n              description: 'Private IP Address associated with azure firewall.'\n            }\n          }\n        },\n        ipGroups: {\n          readOnly: true,\n          description: 'IpGroups associated with AzureFirewall.',\n          type: 'array',\n          items: {\n            properties: {\n              id: {\n                type: 'string',\n                readOnly: true,\n                description: 'Resource ID.'\n              },\n              changeNumber: {\n                type: 'string',\n                readOnly: true,\n                description: 'The iteration number.'\n              }\n            },\n            description: 'IpGroups associated with azure firewall.'\n          }\n        },\n        sku: {\n          description: 'The Azure Firewall Resource SKU.',\n          properties: {\n            name: {\n              type: 'string',\n              description: 'Name of an Azure Firewall SKU.',\n              enum: [ 'AZFW_VNet', 'AZFW_Hub' ],\n              'x-ms-enum': { name: 'AzureFirewallSkuName', modelAsString: true }\n            },\n            tier: {\n              type: 'string',\n              description: 'Tier of an Azure Firewall.',\n              enum: [ 'Standard', 'Premium', 'Basic' ],\n              'x-ms-enum': { name: 'AzureFirewallSkuTier', modelAsString: true }\n            }\n          }\n        },\n        additionalProperties: {\n          description: 'The additional properties used to further config this azure firewall.',\n          type: 'object',\n          additionalProperties: { type: 'string' }\n        }\n      }\n    },\n    zones: {\n      type: 'array',\n      items: { type: 'string' },\n      description: 'A list of availability zones denoting where the resource needs to come from.'\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Azure Firewall resource.'\n}\n")),(0,s.kt)("h2",{id:"misc"},"Misc"),(0,s.kt)("p",null,"The resource version is ",(0,s.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,s.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/azureFirewall.json"},"here"),"."))}d.isMDXComponent=!0}}]);