"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3101],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=n.createContext({}),a=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=a(e.components);return n.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=a(t),m=i,g=l["".concat(u,".").concat(m)]||l[m]||d[m]||o;return t?n.createElement(g,s(s({ref:r},p),{},{components:t})):n.createElement(g,s({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=l;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var a=2;a<o;a++)s[a]=t[a];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},45893:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return p},default:function(){return l}});var n=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],c={id:"ExpressRouteCircuitConnection",title:"ExpressRouteCircuitConnection"},u=void 0,a={unversionedId:"azure/resources/Network/ExpressRouteCircuitConnection",id:"azure/resources/Network/ExpressRouteCircuitConnection",isDocsHomePage:!1,title:"ExpressRouteCircuitConnection",description:"Provides a ExpressRouteCircuitConnection from the Network group",source:"@site/docs/azure/resources/Network/ExpressRouteCircuitConnection.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ExpressRouteCircuitConnection",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitConnection",tags:[],version:"current",frontMatter:{id:"ExpressRouteCircuitConnection",title:"ExpressRouteCircuitConnection"},sidebar:"docs",previous:{title:"ExpressRouteCircuitAuthorization",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitAuthorization"},next:{title:"ExpressRouteCircuitPeering",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitPeering"}},p=[{value:"Examples",id:"examples",children:[{value:"ExpressRouteCircuitConnectionCreate",id:"expressroutecircuitconnectioncreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:p};function l(e){var r=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"ExpressRouteCircuitConnection")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"expressroutecircuitconnectioncreate"},"ExpressRouteCircuitConnectionCreate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeExpressRouteCircuitConnection({\n  name: "myExpressRouteCircuitConnection",\n  properties: () => ({\n    properties: {\n      expressRouteCircuitPeering: {\n        id: "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering",\n      },\n      peerExpressRouteCircuitPeering: {\n        id: "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering",\n      },\n      authorizationKey: "946a1918-b7a2-4917-b43c-8c4cdaee006a",\n      addressPrefix: "10.0.0.0/29",\n      ipv6CircuitConnectionConfig: { addressPrefix: "aa:bb::/125" },\n    },\n  }),\n  dependencies: ({}) => ({\n    resourceGroup: "myResourceGroup",\n    expressRouteCircuitPeering: "myExpressRouteCircuitPeering",\n    circuit: "myExpressRouteCircuit",\n    peering: "myExpressRouteCircuitPeering",\n  }),\n});\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteCircuitPeering"},"ExpressRouteCircuitPeering")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteCircuit"},"ExpressRouteCircuit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteCircuitPeering"},"ExpressRouteCircuitPeering"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the express route circuit connection.',\n      properties: {\n        expressRouteCircuitPeering: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        peerExpressRouteCircuitPeering: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        addressPrefix: {\n          type: 'string',\n          description: '/29 IP address space to carve out Customer addresses for tunnels.'\n        },\n        authorizationKey: { type: 'string', description: 'The authorization key.' },\n        ipv6CircuitConnectionConfig: {\n          description: 'IPv6 Address PrefixProperties of the express route circuit connection.',\n          properties: {\n            addressPrefix: {\n              type: 'string',\n              description: '/125 IP address space to carve out customer addresses for global reach.'\n            },\n            circuitConnectionStatus: {\n              readOnly: true,\n              description: 'Express Route Circuit connection state.',\n              type: 'string',\n              enum: [ 'Connected', 'Connecting', 'Disconnected' ],\n              'x-ms-enum': { name: 'CircuitConnectionStatus', modelAsString: true }\n            }\n          }\n        },\n        circuitConnectionStatus: {\n          description: 'Express Route Circuit connection state.',\n          type: 'string',\n          readOnly: true,\n          enum: [ 'Connected', 'Connecting', 'Disconnected' ],\n          'x-ms-enum': { name: 'CircuitConnectionStatus', modelAsString: true }\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the express route circuit connection resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        }\n      }\n    },\n    name: {\n      type: 'string',\n      description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n    },\n    etag: {\n      readOnly: true,\n      type: 'string',\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    },\n    type: {\n      readOnly: true,\n      type: 'string',\n      description: 'Type of the resource.'\n    }\n  },\n  allOf: [\n    {\n      properties: { id: { type: 'string', description: 'Resource ID.' } },\n      description: 'Reference to another subresource.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/expressRouteCircuit.json"},"here"),"."))}l.isMDXComponent=!0}}]);