"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9168],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return g}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=c(r),g=i,f=l["".concat(p,".").concat(g)]||l[g]||d[g]||o;return r?t.createElement(f,s(s({ref:n},u),{},{components:r})):t.createElement(f,s({ref:n},u))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=l;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},71702:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return l}});var t=r(87462),i=r(63366),o=(r(67294),r(3905)),s=["components"],a={id:"P2sVpnServerConfiguration",title:"P2sVpnServerConfiguration"},p=void 0,c={unversionedId:"azure/resources/Network/P2sVpnServerConfiguration",id:"azure/resources/Network/P2sVpnServerConfiguration",isDocsHomePage:!1,title:"P2sVpnServerConfiguration",description:"Provides a P2sVpnServerConfiguration from the Network group",source:"@site/docs/azure/resources/Network/P2sVpnServerConfiguration.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/P2sVpnServerConfiguration",permalink:"/docs/azure/resources/Network/P2sVpnServerConfiguration",tags:[],version:"current",frontMatter:{id:"P2sVpnServerConfiguration",title:"P2sVpnServerConfiguration"},sidebar:"docs",previous:{title:"P2sVpnGateway",permalink:"/docs/azure/resources/Network/P2sVpnGateway"},next:{title:"PacketCapture",permalink:"/docs/azure/resources/Network/PacketCapture"}},u=[{value:"Examples",id:"examples",children:[{value:"P2SVpnServerConfigurationPut",id:"p2svpnserverconfigurationput",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:u};function l(e){var n=e.components,r=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"P2sVpnServerConfiguration")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"p2svpnserverconfigurationput"},"P2SVpnServerConfigurationPut"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "P2sVpnServerConfiguration",\n    group: "Network",\n    name: "myP2sVpnServerConfiguration",\n    properties: () => ({\n      properties: {\n        vpnProtocols: ["IkeV2"],\n        vpnClientIpsecPolicies: [\n          {\n            saLifeTimeSeconds: 86472,\n            saDataSizeKilobytes: 429497,\n            ipsecEncryption: "AES256",\n            ipsecIntegrity: "SHA256",\n            ikeEncryption: "AES256",\n            ikeIntegrity: "SHA384",\n            dhGroup: "DHGroup14",\n            pfsGroup: "PFS14",\n          },\n        ],\n        p2SVpnServerConfigVpnClientRootCertificates: [\n          {\n            name: "p2sVpnServerConfigVpnClientRootCert1",\n            properties: {\n              publicCertData:\n                "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN",\n            },\n          },\n        ],\n        p2SVpnServerConfigVpnClientRevokedCertificates: [\n          {\n            name: "p2sVpnServerConfigVpnClientRevokedCert1",\n            properties: {\n              thumbprint: "83FFBFC8848B5A5836C94D0112367E16148A286F",\n            },\n          },\n        ],\n        radiusServerAddress: "8.9.9.9",\n        radiusServerSecret: "<radiusServerSecret>",\n        p2SVpnServerConfigRadiusServerRootCertificates: [\n          {\n            name: "p2sVpnServerConfigRadiusServerRootCert1",\n            properties: {\n              publicCertData:\n                "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM",\n            },\n          },\n        ],\n        p2SVpnServerConfigRadiusClientRootCertificates: [\n          {\n            name: "p2sVpnServerConfigRadiusClientRootCert1",\n            properties: {\n              thumbprint: "83FFBFC8848B5A5836C94D0112367E16148A286F",\n            },\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      virtualWan: "myVirtualWan",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualWan"},"VirtualWan"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the P2SVpnServer configuration.',\n      properties: {\n        name: {\n          type: 'string',\n          description: 'The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.'\n        },\n        vpnProtocols: {\n          type: 'array',\n          items: {\n            type: 'string',\n            description: 'VPN protocol enabled for the P2SVpnServerConfiguration.',\n            enum: [ 'IkeV2', 'OpenVPN' ],\n            'x-ms-enum': {\n              name: 'VpnGatewayTunnelingProtocol',\n              modelAsString: true\n            }\n          },\n          description: 'VPN protocols for the P2SVpnServerConfiguration.'\n        },\n        p2SVpnServerConfigVpnClientRootCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the P2SVpnServerConfiguration VPN client root certificate.',\n                properties: {\n                  publicCertData: {\n                    type: 'string',\n                    description: 'The certificate public data.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the VPN client root certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                },\n                required: [ 'publicCertData' ]\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            required: [ 'properties' ],\n            description: 'VPN client root certificate of P2SVpnServerConfiguration.'\n          },\n          description: 'VPN client root certificate of P2SVpnServerConfiguration.'\n        },\n        p2SVpnServerConfigVpnClientRevokedCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the vpn client revoked certificate.',\n                properties: {\n                  thumbprint: {\n                    type: 'string',\n                    description: 'The revoked VPN client certificate thumbprint.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the VPN client revoked certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'VPN client revoked certificate of P2SVpnServerConfiguration.'\n          },\n          description: 'VPN client revoked certificate of P2SVpnServerConfiguration.'\n        },\n        p2SVpnServerConfigRadiusServerRootCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the P2SVpnServerConfiguration Radius Server root certificate.',\n                properties: {\n                  publicCertData: {\n                    type: 'string',\n                    description: 'The certificate public data.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the radius server root certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                },\n                required: [ 'publicCertData' ]\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            required: [ 'properties' ],\n            description: 'Radius Server root certificate of P2SVpnServerConfiguration.'\n          },\n          description: 'Radius Server root certificate of P2SVpnServerConfiguration.'\n        },\n        p2SVpnServerConfigRadiusClientRootCertificates: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the Radius client root certificate.',\n                properties: {\n                  thumbprint: {\n                    type: 'string',\n                    description: 'The Radius client root certificate thumbprint.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the radius client root certificate resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Radius client root certificate of P2SVpnServerConfiguration.'\n          },\n          description: 'Radius client root certificate of P2SVpnServerConfiguration.'\n        },\n        vpnClientIpsecPolicies: {\n          type: 'array',\n          items: {\n            properties: {\n              saLifeTimeSeconds: {\n                type: 'integer',\n                format: 'int32',\n                description: 'The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.'\n              },\n              saDataSizeKilobytes: {\n                type: 'integer',\n                format: 'int32',\n                description: 'The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.'\n              },\n              ipsecEncryption: {\n                description: 'The IPSec encryption algorithm (IKE phase 1).',\n                type: 'string',\n                enum: [\n                  'None',      'DES',\n                  'DES3',      'AES128',\n                  'AES192',    'AES256',\n                  'GCMAES128', 'GCMAES192',\n                  'GCMAES256'\n                ],\n                'x-ms-enum': { name: 'IpsecEncryption', modelAsString: true }\n              },\n              ipsecIntegrity: {\n                description: 'The IPSec integrity algorithm (IKE phase 1).',\n                type: 'string',\n                enum: [\n                  'MD5',\n                  'SHA1',\n                  'SHA256',\n                  'GCMAES128',\n                  'GCMAES192',\n                  'GCMAES256'\n                ],\n                'x-ms-enum': { name: 'IpsecIntegrity', modelAsString: true }\n              },\n              ikeEncryption: {\n                description: 'The IKE encryption algorithm (IKE phase 2).',\n                type: 'string',\n                enum: [\n                  'DES',\n                  'DES3',\n                  'AES128',\n                  'AES192',\n                  'AES256',\n                  'GCMAES256',\n                  'GCMAES128'\n                ],\n                'x-ms-enum': { name: 'IkeEncryption', modelAsString: true }\n              },\n              ikeIntegrity: {\n                description: 'The IKE integrity algorithm (IKE phase 2).',\n                type: 'string',\n                enum: [\n                  'MD5',\n                  'SHA1',\n                  'SHA256',\n                  'SHA384',\n                  'GCMAES256',\n                  'GCMAES128'\n                ],\n                'x-ms-enum': { name: 'IkeIntegrity', modelAsString: true }\n              },\n              dhGroup: {\n                description: 'The DH Group used in IKE Phase 1 for initial SA.',\n                type: 'string',\n                enum: [\n                  'None',\n                  'DHGroup1',\n                  'DHGroup2',\n                  'DHGroup14',\n                  'DHGroup2048',\n                  'ECP256',\n                  'ECP384',\n                  'DHGroup24'\n                ],\n                'x-ms-enum': { name: 'DhGroup', modelAsString: true }\n              },\n              pfsGroup: {\n                description: 'The Pfs Group used in IKE Phase 2 for new child SA.',\n                type: 'string',\n                enum: [\n                  'None',   'PFS1',\n                  'PFS2',   'PFS2048',\n                  'ECP256', 'ECP384',\n                  'PFS24',  'PFS14',\n                  'PFSMM'\n                ],\n                'x-ms-enum': { name: 'PfsGroup', modelAsString: true }\n              }\n            },\n            required: [\n              'saLifeTimeSeconds',\n              'saDataSizeKilobytes',\n              'ipsecEncryption',\n              'ipsecIntegrity',\n              'ikeEncryption',\n              'ikeIntegrity',\n              'dhGroup',\n              'pfsGroup'\n            ],\n            description: 'An IPSec Policy configuration for a virtual network gateway connection.'\n          },\n          description: 'VpnClientIpsecPolicies for P2SVpnServerConfiguration.'\n        },\n        radiusServerAddress: {\n          type: 'string',\n          description: 'The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.'\n        },\n        radiusServerSecret: {\n          type: 'string',\n          description: 'The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the P2S VPN server configuration resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        p2SVpnGateways: {\n          type: 'array',\n          readOnly: true,\n          items: {\n            properties: { id: { type: 'string', description: 'Resource ID.' } },\n            description: 'Reference to another subresource.',\n            'x-ms-azure-resource': true\n          },\n          description: 'List of references to P2SVpnGateways.'\n        },\n        etag: {\n          type: 'string',\n          description: 'A unique read-only string that changes whenever the resource is updated.'\n        }\n      }\n    },\n    name: {\n      type: 'string',\n      description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: { id: { type: 'string', description: 'Resource ID.' } },\n      description: 'Reference to another subresource.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'P2SVpnServerConfiguration Resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2019-07-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2019-07-01/virtualWan.json"},"here"),"."))}l.isMDXComponent=!0}}]);