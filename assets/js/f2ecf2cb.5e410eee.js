"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8459],{3905:function(n,e,t){t.d(e,{Zo:function(){return m},kt:function(){return l}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=r.createContext({}),c=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},m=function(n){var e=c(n.components);return r.createElement(p.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,p=n.parentName,m=a(n,["components","mdxType","originalType","parentName"]),u=c(t),l=i,g=u["".concat(p,".").concat(l)]||u[l]||d[l]||o;return t?r.createElement(g,s(s({ref:e},m),{},{components:t})):r.createElement(g,s({ref:e},m))}));function l(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,s=new Array(o);s[0]=u;var a={};for(var p in e)hasOwnProperty.call(e,p)&&(a[p]=e[p]);a.originalType=n,a.mdxType="string"==typeof n?n:i,s[1]=a;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},18728:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return m},default:function(){return u}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],a={id:"HostingEnvironment",title:"HostingEnvironment"},p=void 0,c={unversionedId:"azure/resources/Web/HostingEnvironment",id:"azure/resources/Web/HostingEnvironment",isDocsHomePage:!1,title:"HostingEnvironment",description:"Provides a HostingEnvironment from the Web group",source:"@site/docs/azure/resources/Web/HostingEnvironment.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/HostingEnvironment",permalink:"/docs/azure/resources/Web/HostingEnvironment",tags:[],version:"current",frontMatter:{id:"HostingEnvironment",title:"HostingEnvironment"},sidebar:"docs",previous:{title:"CustomApi",permalink:"/docs/azure/resources/Web/CustomApi"},next:{title:"HostingEnvironmentMultiRolePool",permalink:"/docs/azure/resources/Web/HostingEnvironmentMultiRolePool"}},m=[{value:"Examples",id:"examples",children:[],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:m};function u(n){var e=n.components,t=(0,i.Z)(n,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"HostingEnvironment")," from the ",(0,o.kt)("strong",{parentName:"p"},"Web")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualNetwork"},"VirtualNetwork"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'Description of an hostingEnvironment (App Service Environment)',\n  type: 'object',\n  allOf: [\n    {\n      required: [ 'location' ],\n      properties: {\n        id: { description: 'Resource Id', type: 'string' },\n        name: { description: 'Resource Name', type: 'string' },\n        kind: { description: 'Kind of resource', type: 'string' },\n        location: { description: 'Resource Location', type: 'string' },\n        type: { description: 'Resource type', type: 'string' },\n        tags: {\n          description: 'Resource tags',\n          type: 'object',\n          additionalProperties: { type: 'string' }\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  properties: {\n    properties: {\n      required: [ 'status' ],\n      properties: {\n        name: {\n          description: 'Name of the hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        location: {\n          description: 'Location of the hostingEnvironment (App Service Environment), e.g. \"West US\"',\n          type: 'string'\n        },\n        provisioningState: {\n          description: 'Provisioning state of the hostingEnvironment (App Service Environment)',\n          enum: [\n            'Succeeded',\n            'Failed',\n            'Canceled',\n            'InProgress',\n            'Deleting'\n          ],\n          type: 'string',\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: false }\n        },\n        status: {\n          description: 'Current status of the hostingEnvironment (App Service Environment)',\n          enum: [ 'Preparing', 'Ready', 'Scaling', 'Deleting' ],\n          type: 'string',\n          'x-ms-enum': { name: 'HostingEnvironmentStatus', modelAsString: false }\n        },\n        vnetName: {\n          description: \"Name of the hostingEnvironment's (App Service Environment) virtual network\",\n          type: 'string'\n        },\n        vnetResourceGroupName: {\n          description: \"Resource group of the hostingEnvironment's (App Service Environment) virtual network\",\n          type: 'string'\n        },\n        vnetSubnetName: {\n          description: \"Subnet of the hostingEnvironment's (App Service Environment) virtual network\",\n          type: 'string'\n        },\n        virtualNetwork: {\n          description: \"Description of the hostingEnvironment's (App Service Environment) virtual network\",\n          type: 'object',\n          properties: {\n            id: {\n              description: 'Resource id of the virtual network',\n              type: 'string'\n            },\n            name: {\n              description: 'Name of the virtual network (read-only)',\n              type: 'string'\n            },\n            type: {\n              description: 'Resource type of the virtual network (read-only)',\n              type: 'string'\n            },\n            subnet: {\n              description: 'Subnet within the virtual network',\n              type: 'string'\n            }\n          }\n        },\n        internalLoadBalancingMode: {\n          description: \"Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET\",\n          enum: [ 'None', 'Web', 'Publishing' ],\n          type: 'string',\n          'x-ms-enum': { name: 'InternalLoadBalancingMode', modelAsString: false }\n        },\n        multiSize: {\n          description: 'Front-end VM size, e.g. \"Medium\", \"Large\"',\n          type: 'string'\n        },\n        multiRoleCount: {\n          format: 'int32',\n          description: 'Number of front-end instances',\n          type: 'integer'\n        },\n        workerPools: {\n          description: 'Description of worker pools with worker size ids, VM sizes, and number of workers in each pool',\n          type: 'array',\n          items: {\n            description: 'Worker pool of a hostingEnvironment (App Service Environment)',\n            type: 'object',\n            allOf: [\n              {\n                required: [ 'location' ],\n                properties: {\n                  id: { description: 'Resource Id', type: 'string' },\n                  name: { description: 'Resource Name', type: 'string' },\n                  kind: { description: 'Kind of resource', type: 'string' },\n                  location: { description: 'Resource Location', type: 'string' },\n                  type: { description: 'Resource type', type: 'string' },\n                  tags: {\n                    description: 'Resource tags',\n                    type: 'object',\n                    additionalProperties: { type: 'string' }\n                  }\n                },\n                'x-ms-azure-resource': true\n              }\n            ],\n            properties: {\n              properties: {\n                properties: {\n                  workerSizeId: {\n                    format: 'int32',\n                    description: 'Worker size id for referencing this worker pool',\n                    type: 'integer'\n                  },\n                  computeMode: {\n                    description: 'Shared or dedicated web app hosting',\n                    enum: [ 'Shared', 'Dedicated', 'Dynamic' ],\n                    type: 'string',\n                    'x-ms-enum': {\n                      name: 'ComputeModeOptions',\n                      modelAsString: false\n                    }\n                  },\n                  workerSize: {\n                    description: 'VM size of the worker pool instances',\n                    type: 'string'\n                  },\n                  workerCount: {\n                    format: 'int32',\n                    description: 'Number of instances in the worker pool',\n                    type: 'integer'\n                  },\n                  instanceNames: {\n                    description: 'Names of all instances in the worker pool (read only)',\n                    type: 'array',\n                    items: { type: 'string' }\n                  }\n                },\n                'x-ms-client-flatten': true\n              },\n              sku: {\n                description: 'Describes a sku for a scalable resource',\n                type: 'object',\n                properties: {\n                  name: {\n                    description: 'Name of the resource sku',\n                    type: 'string'\n                  },\n                  tier: {\n                    description: 'Service Tier of the resource sku',\n                    type: 'string'\n                  },\n                  size: {\n                    description: 'Size specifier of the resource sku',\n                    type: 'string'\n                  },\n                  family: {\n                    description: 'Family code of the resource sku',\n                    type: 'string'\n                  },\n                  capacity: {\n                    format: 'int32',\n                    description: 'Current number of instances assigned to the resource',\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          }\n        },\n        ipsslAddressCount: {\n          format: 'int32',\n          description: 'Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)',\n          type: 'integer'\n        },\n        databaseEdition: {\n          description: 'Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"Standard\"',\n          type: 'string'\n        },\n        databaseServiceObjective: {\n          description: 'Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"S0\"',\n          type: 'string'\n        },\n        upgradeDomains: {\n          format: 'int32',\n          description: 'Number of upgrade domains of this hostingEnvironment (App Service Environment)',\n          type: 'integer'\n        },\n        subscriptionId: {\n          description: 'Subscription of the hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        dnsSuffix: {\n          description: 'DNS suffix of the hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        lastAction: {\n          description: 'Last deployment action on this hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        lastActionResult: {\n          description: 'Result of the last deployment action on this hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        allowedMultiSizes: {\n          description: 'List of comma separated strings describing which VM sizes are allowed for front-ends',\n          type: 'string'\n        },\n        allowedWorkerSizes: {\n          description: 'List of comma separated strings describing which VM sizes are allowed for workers',\n          type: 'string'\n        },\n        maximumNumberOfMachines: {\n          format: 'int32',\n          description: 'Maximum number of VMs in this hostingEnvironment (App Service Environment)',\n          type: 'integer'\n        },\n        vipMappings: {\n          description: 'Description of IP SSL mapping for this hostingEnvironment (App Service Environment)',\n          type: 'array',\n          items: {\n            description: 'Class that represents a VIP mapping',\n            type: 'object',\n            properties: {\n              virtualIP: { description: 'Virtual IP address', type: 'string' },\n              internalHttpPort: {\n                format: 'int32',\n                description: 'Internal HTTP port',\n                type: 'integer'\n              },\n              internalHttpsPort: {\n                format: 'int32',\n                description: 'Internal HTTPS port',\n                type: 'integer'\n              },\n              inUse: { description: 'Is VIP mapping in use', type: 'boolean' }\n            }\n          }\n        },\n        environmentCapacities: {\n          description: 'Current total, used, and available worker capacities',\n          type: 'array',\n          items: {\n            description: 'Class containing stamp capacity information',\n            type: 'object',\n            properties: {\n              name: { description: 'Name of the stamp', type: 'string' },\n              availableCapacity: {\n                format: 'int64',\n                description: 'Available capacity (# of machines, bytes of storage etc...)',\n                type: 'integer'\n              },\n              totalCapacity: {\n                format: 'int64',\n                description: 'Total capacity (# of machines, bytes of storage etc...)',\n                type: 'integer'\n              },\n              unit: { description: 'Name of the unit', type: 'string' },\n              computeMode: {\n                description: 'Shared/Dedicated workers',\n                enum: [ 'Shared', 'Dedicated', 'Dynamic' ],\n                type: 'string',\n                'x-ms-enum': { name: 'ComputeModeOptions', modelAsString: false }\n              },\n              workerSize: {\n                description: 'Size of the machines',\n                enum: [ 'Default', 'Small', 'Medium', 'Large' ],\n                type: 'string',\n                'x-ms-enum': { name: 'WorkerSizeOptions', modelAsString: false }\n              },\n              workerSizeId: {\n                format: 'int32',\n                description: 'Size Id of machines: \\r\\n' +\n                  '            0 - Small\\r\\n' +\n                  '            1 - Medium\\r\\n' +\n                  '            2 - Large',\n                type: 'integer'\n              },\n              excludeFromCapacityAllocation: {\n                description: 'If true it includes basic sites\\r\\n' +\n                  '            Basic sites are not used for capacity allocation.',\n                type: 'boolean'\n              },\n              isApplicableForAllComputeModes: {\n                description: 'Is capacity applicable for all sites?',\n                type: 'boolean'\n              },\n              siteMode: { description: 'Shared or Dedicated', type: 'string' }\n            }\n          }\n        },\n        networkAccessControlList: {\n          description: 'Access control list for controlling traffic to the hostingEnvironment (App Service Environment)',\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              action: {\n                enum: [ 'Permit', 'Deny' ],\n                type: 'string',\n                'x-ms-enum': {\n                  name: 'AccessControlEntryAction',\n                  modelAsString: false\n                }\n              },\n              description: { type: 'string' },\n              order: { format: 'int32', type: 'integer' },\n              remoteSubnet: { type: 'string' }\n            }\n          }\n        },\n        environmentIsHealthy: {\n          description: 'True/false indicating whether the hostingEnvironment (App Service Environment) is healthy',\n          type: 'boolean'\n        },\n        environmentStatus: {\n          description: 'Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        resourceGroup: {\n          description: 'Resource group of the hostingEnvironment (App Service Environment)',\n          type: 'string'\n        },\n        apiManagementAccountId: {\n          description: 'Api Management Account associated with this Hosting Environment',\n          type: 'string'\n        },\n        suspended: {\n          description: 'True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\\r\\n' +\n            '            (most likely because NSG blocked the incoming traffic)',\n          type: 'boolean'\n        },\n        clusterSettings: {\n          description: 'Custom settings for changing the behavior of the hosting environment',\n          type: 'array',\n          items: {\n            description: 'Name value pair',\n            type: 'object',\n            properties: {\n              name: { description: 'Pair name', type: 'string' },\n              value: { description: 'Pair value', type: 'string' }\n            }\n          }\n        }\n      },\n      'x-ms-client-flatten': true\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2015-08-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2015-08-01/service.json"},"here"),"."))}u.isMDXComponent=!0}}]);