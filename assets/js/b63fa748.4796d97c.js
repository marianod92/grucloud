"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7591],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=i.createContext({}),c=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return i.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,y=u["".concat(p,".").concat(m)]||u[m]||l[m]||o;return t?i.createElement(y,s(s({ref:n},d),{},{components:t})):i.createElement(y,s({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var c=2;c<o;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},13025:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var i=t(87462),r=t(63366),o=(t(67294),t(3905)),s=["components"],a={id:"WebApp",title:"WebApp"},p=void 0,c={unversionedId:"azure/resources/Web/WebApp",id:"azure/resources/Web/WebApp",isDocsHomePage:!1,title:"WebApp",description:"Provides a WebApp from the Web group",source:"@site/docs/azure/resources/Web/WebApp.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/WebApp",permalink:"/docs/azure/resources/Web/WebApp",tags:[],version:"current",frontMatter:{id:"WebApp",title:"WebApp"},sidebar:"docs",previous:{title:"UserProvidedFunctionAppForStaticSiteBuild",permalink:"/docs/azure/resources/Web/UserProvidedFunctionAppForStaticSiteBuild"},next:{title:"WebAppBackupStatus",permalink:"/docs/azure/resources/Web/WebAppBackupStatus"}},d=[{value:"Examples",id:"examples",children:[],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:d};function u(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"WebApp")," from the ",(0,o.kt)("strong",{parentName:"p"},"Web")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/ManagedIdentity/UserAssignedIdentity"},"UserAssignedIdentity")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/ServerFarm"},"ServerFarm")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/HostingEnvironment"},"HostingEnvironment")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'A web app, a mobile app backend, or an API app.',\n  type: 'object',\n  allOf: [\n    {\n      description: 'Azure resource. This resource is tracked in Azure Resource Manager',\n      required: [ 'location' ],\n      type: 'object',\n      properties: {\n        id: { description: 'Resource Id.', type: 'string', readOnly: true },\n        name: {\n          description: 'Resource Name.',\n          type: 'string',\n          readOnly: true\n        },\n        kind: { description: 'Kind of resource.', type: 'string' },\n        location: { description: 'Resource Location.', type: 'string' },\n        type: {\n          description: 'Resource type.',\n          type: 'string',\n          readOnly: true\n        },\n        tags: {\n          description: 'Resource tags.',\n          type: 'object',\n          additionalProperties: { type: 'string' }\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  properties: {\n    properties: {\n      description: 'Site resource specific properties',\n      type: 'object',\n      properties: {\n        state: {\n          description: 'Current state of the app.',\n          type: 'string',\n          readOnly: true\n        },\n        hostNames: {\n          description: 'Hostnames associated with the app.',\n          type: 'array',\n          items: { type: 'string' },\n          readOnly: true\n        },\n        repositorySiteName: {\n          description: 'Name of the repository site.',\n          type: 'string',\n          readOnly: true\n        },\n        usageState: {\n          description: 'State indicating whether the app has exceeded its quota usage. Read-only.',\n          enum: [ 'Normal', 'Exceeded' ],\n          type: 'string',\n          readOnly: true,\n          'x-ms-enum': { name: 'UsageState', modelAsString: false }\n        },\n        enabled: {\n          description: '<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).',\n          type: 'boolean'\n        },\n        enabledHostNames: {\n          description: 'Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\\n' +\n            'the app is not served on those hostnames.',\n          type: 'array',\n          items: { type: 'string' },\n          readOnly: true\n        },\n        availabilityState: {\n          description: 'Management information availability state for the app.',\n          enum: [ 'Normal', 'Limited', 'DisasterRecoveryMode' ],\n          type: 'string',\n          readOnly: true,\n          'x-ms-enum': { name: 'SiteAvailabilityState', modelAsString: false }\n        },\n        hostNameSslStates: {\n          description: \"Hostname SSL states are used to manage the SSL bindings for app's hostnames.\",\n          type: 'array',\n          items: {\n            description: 'SSL-enabled hostname.',\n            type: 'object',\n            properties: {\n              name: { description: 'Hostname.', type: 'string' },\n              sslState: {\n                description: 'SSL type.',\n                enum: [ 'Disabled', 'SniEnabled', 'IpBasedEnabled' ],\n                type: 'string',\n                'x-ms-enum': { name: 'SslState', modelAsString: false }\n              },\n              virtualIP: {\n                description: 'Virtual IP address assigned to the hostname if IP based SSL is enabled.',\n                type: 'string'\n              },\n              thumbprint: {\n                description: 'SSL certificate thumbprint.',\n                type: 'string'\n              },\n              toUpdate: {\n                description: 'Set to <code>true</code> to update existing hostname.',\n                type: 'boolean'\n              },\n              hostType: {\n                description: 'Indicates whether the hostname is a standard or repository hostname.',\n                enum: [ 'Standard', 'Repository' ],\n                type: 'string',\n                'x-ms-enum': { name: 'HostType', modelAsString: false }\n              }\n            }\n          }\n        },\n        serverFarmId: {\n          description: 'Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".',\n          type: 'string'\n        },\n        reserved: {\n          description: '<code>true</code> if reserved; otherwise, <code>false</code>.',\n          default: false,\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isXenon: {\n          description: 'Obsolete: Hyper-V sandbox.',\n          default: false,\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        hyperV: {\n          description: 'Hyper-V sandbox.',\n          default: false,\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        lastModifiedTimeUtc: {\n          format: 'date-time',\n          description: 'Last time the app was modified, in UTC. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        siteConfig: {\n          description: 'Configuration of the app.',\n          type: 'object',\n          properties: {\n            numberOfWorkers: {\n              format: 'int32',\n              description: 'Number of workers.',\n              type: 'integer'\n            },\n            defaultDocuments: {\n              description: 'Default documents.',\n              type: 'array',\n              items: { type: 'string' }\n            },\n            netFrameworkVersion: {\n              description: '.NET Framework version.',\n              default: 'v4.6',\n              type: 'string'\n            },\n            phpVersion: { description: 'Version of PHP.', type: 'string' },\n            pythonVersion: { description: 'Version of Python.', type: 'string' },\n            nodeVersion: { description: 'Version of Node.js.', type: 'string' },\n            powerShellVersion: { description: 'Version of PowerShell.', type: 'string' },\n            linuxFxVersion: {\n              description: 'Linux App Framework and version',\n              type: 'string'\n            },\n            windowsFxVersion: {\n              description: 'Xenon App Framework and version',\n              type: 'string'\n            },\n            requestTracingEnabled: {\n              description: '<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            requestTracingExpirationTime: {\n              format: 'date-time',\n              description: 'Request tracing expiration time.',\n              type: 'string'\n            },\n            remoteDebuggingEnabled: {\n              description: '<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            remoteDebuggingVersion: {\n              description: 'Remote debugging version.',\n              type: 'string'\n            },\n            httpLoggingEnabled: {\n              description: '<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            acrUseManagedIdentityCreds: {\n              description: 'Flag to use Managed Identity Creds for ACR pull',\n              type: 'boolean'\n            },\n            acrUserManagedIdentityID: {\n              description: 'If using user managed identity, the user managed identity ClientId',\n              type: 'string'\n            },\n            logsDirectorySizeLimit: {\n              format: 'int32',\n              description: 'HTTP logs directory size limit.',\n              type: 'integer'\n            },\n            detailedErrorLoggingEnabled: {\n              description: '<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            publishingUsername: { description: 'Publishing user name.', type: 'string' },\n            appSettings: {\n              description: 'Application settings.',\n              type: 'array',\n              items: {\n                description: 'Name value pair.',\n                type: 'object',\n                properties: {\n                  name: { description: 'Pair name.', type: 'string' },\n                  value: { description: 'Pair value.', type: 'string' }\n                }\n              }\n            },\n            connectionStrings: {\n              description: 'Connection strings.',\n              type: 'array',\n              items: {\n                description: 'Database connection string information.',\n                type: 'object',\n                properties: {\n                  name: {\n                    description: 'Name of connection string.',\n                    type: 'string'\n                  },\n                  connectionString: {\n                    description: 'Connection string value.',\n                    type: 'string'\n                  },\n                  type: {\n                    description: 'Type of database.',\n                    enum: [\n                      'MySql',\n                      'SQLServer',\n                      'SQLAzure',\n                      'Custom',\n                      'NotificationHub',\n                      'ServiceBus',\n                      'EventHub',\n                      'ApiHub',\n                      'DocDb',\n                      'RedisCache',\n                      'PostgreSQL'\n                    ],\n                    type: 'string',\n                    'x-ms-enum': {\n                      name: 'ConnectionStringType',\n                      modelAsString: false\n                    }\n                  }\n                }\n              }\n            },\n            machineKey: {\n              description: 'Site MachineKey.',\n              readOnly: true,\n              type: 'object',\n              properties: {\n                validation: {\n                  description: 'MachineKey validation.',\n                  type: 'string'\n                },\n                validationKey: { description: 'Validation key.', type: 'string' },\n                decryption: {\n                  description: 'Algorithm used for decryption.',\n                  type: 'string'\n                },\n                decryptionKey: { description: 'Decryption key.', type: 'string' }\n              }\n            },\n            handlerMappings: {\n              description: 'Handler mappings.',\n              type: 'array',\n              items: {\n                description: 'The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \\n' +\n                  'For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.',\n                type: 'object',\n                properties: {\n                  extension: {\n                    description: 'Requests with this extension will be handled using the specified FastCGI application.',\n                    type: 'string'\n                  },\n                  scriptProcessor: {\n                    description: 'The absolute path to the FastCGI application.',\n                    type: 'string'\n                  },\n                  arguments: {\n                    description: 'Command-line arguments to be passed to the script processor.',\n                    type: 'string'\n                  }\n                }\n              }\n            },\n            documentRoot: { description: 'Document root.', type: 'string' },\n            scmType: {\n              description: 'SCM type.',\n              enum: [\n                'None',        'Dropbox',\n                'Tfs',         'LocalGit',\n                'GitHub',      'CodePlexGit',\n                'CodePlexHg',  'BitbucketGit',\n                'BitbucketHg', 'ExternalGit',\n                'ExternalHg',  'OneDrive',\n                'VSO',         'VSTSRM'\n              ],\n              type: 'string',\n              'x-ms-enum': { name: 'ScmType', modelAsString: true }\n            },\n            use32BitWorkerProcess: {\n              description: '<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            webSocketsEnabled: {\n              description: '<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            alwaysOn: {\n              description: '<code>true</code> if Always On is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            javaVersion: { description: 'Java version.', type: 'string' },\n            javaContainer: { description: 'Java container.', type: 'string' },\n            javaContainerVersion: { description: 'Java container version.', type: 'string' },\n            appCommandLine: {\n              description: 'App command line to launch.',\n              type: 'string'\n            },\n            managedPipelineMode: {\n              description: 'Managed pipeline mode.',\n              enum: [ 'Integrated', 'Classic' ],\n              type: 'string',\n              'x-ms-enum': { name: 'ManagedPipelineMode', modelAsString: false }\n            },\n            virtualApplications: {\n              description: 'Virtual applications.',\n              type: 'array',\n              items: {\n                description: 'Virtual application in an app.',\n                type: 'object',\n                properties: {\n                  virtualPath: { description: 'Virtual path.', type: 'string' },\n                  physicalPath: { description: 'Physical path.', type: 'string' },\n                  preloadEnabled: {\n                    description: '<code>true</code> if preloading is enabled; otherwise, <code>false</code>.',\n                    type: 'boolean'\n                  },\n                  virtualDirectories: {\n                    description: 'Virtual directories for virtual application.',\n                    type: 'array',\n                    items: {\n                      description: 'Directory for virtual application.',\n                      type: 'object',\n                      properties: {\n                        virtualPath: {\n                          description: 'Path to virtual application.',\n                          type: 'string'\n                        },\n                        physicalPath: {\n                          description: 'Physical path.',\n                          type: 'string'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            loadBalancing: {\n              description: 'Site load balancing.',\n              enum: [\n                'WeightedRoundRobin',\n                'LeastRequests',\n                'LeastResponseTime',\n                'WeightedTotalTraffic',\n                'RequestHash',\n                'PerSiteRoundRobin'\n              ],\n              type: 'string',\n              'x-ms-enum': { name: 'SiteLoadBalancing', modelAsString: false }\n            },\n            experiments: {\n              description: 'This is work around for polymorphic types.',\n              type: 'object',\n              properties: {\n                rampUpRules: {\n                  description: 'List of ramp-up rules.',\n                  type: 'array',\n                  items: {\n                    description: 'Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.',\n                    type: 'object',\n                    properties: {\n                      actionHostName: {\n                        description: 'Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.',\n                        type: 'string'\n                      },\n                      reroutePercentage: {\n                        format: 'double',\n                        description: 'Percentage of the traffic which will be redirected to <code>ActionHostName</code>.',\n                        type: 'number'\n                      },\n                      changeStep: {\n                        format: 'double',\n                        description: 'In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \\\\n<code>MinReroutePercentage</code> or \\n' +\n                          '<code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\\\\nCustom decision algorithm \\n' +\n                          'can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.',\n                        type: 'number'\n                      },\n                      changeIntervalInMinutes: {\n                        format: 'int32',\n                        description: 'Specifies interval in minutes to reevaluate ReroutePercentage.',\n                        type: 'integer'\n                      },\n                      minReroutePercentage: {\n                        format: 'double',\n                        description: 'Specifies lower boundary above which ReroutePercentage will stay.',\n                        type: 'number'\n                      },\n                      maxReroutePercentage: {\n                        format: 'double',\n                        description: 'Specifies upper boundary below which ReroutePercentage will stay.',\n                        type: 'number'\n                      },\n                      changeDecisionCallbackUrl: {\n                        description: 'Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.\\n' +\n                          'https://www.siteextensions.net/packages/TiPCallback/',\n                        type: 'string'\n                      },\n                      name: {\n                        description: 'Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.',\n                        type: 'string'\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            limits: {\n              description: 'Site limits.',\n              type: 'object',\n              properties: {\n                maxPercentageCpu: {\n                  format: 'double',\n                  description: 'Maximum allowed CPU usage percentage.',\n                  type: 'number'\n                },\n                maxMemoryInMb: {\n                  format: 'int64',\n                  description: 'Maximum allowed memory usage in MB.',\n                  type: 'integer'\n                },\n                maxDiskSizeInMb: {\n                  format: 'int64',\n                  description: 'Maximum allowed disk size usage in MB.',\n                  type: 'integer'\n                }\n              }\n            },\n            autoHealEnabled: {\n              description: '<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            autoHealRules: {\n              description: 'Auto Heal rules.',\n              type: 'object',\n              properties: {\n                triggers: {\n                  description: 'Conditions that describe when to execute the auto-heal actions.',\n                  type: 'object',\n                  properties: {\n                    requests: {\n                      description: 'A rule based on total requests.',\n                      type: 'object',\n                      properties: {\n                        count: {\n                          format: 'int32',\n                          description: 'Request Count.',\n                          type: 'integer'\n                        },\n                        timeInterval: {\n                          description: 'Time interval.',\n                          type: 'string'\n                        }\n                      }\n                    },\n                    privateBytesInKB: {\n                      format: 'int32',\n                      description: 'A rule based on private bytes.',\n                      type: 'integer'\n                    },\n                    statusCodes: {\n                      description: 'A rule based on status codes.',\n                      type: 'array',\n                      items: {\n                        description: 'Trigger based on status code.',\n                        type: 'object',\n                        properties: {\n                          status: {\n                            format: 'int32',\n                            description: 'HTTP status code.',\n                            type: 'integer'\n                          },\n                          subStatus: {\n                            format: 'int32',\n                            description: 'Request Sub Status.',\n                            type: 'integer'\n                          },\n                          win32Status: {\n                            format: 'int32',\n                            description: 'Win32 error code.',\n                            type: 'integer'\n                          },\n                          count: {\n                            format: 'int32',\n                            description: 'Request Count.',\n                            type: 'integer'\n                          },\n                          timeInterval: {\n                            description: 'Time interval.',\n                            type: 'string'\n                          },\n                          path: {\n                            description: 'Request Path',\n                            type: 'string'\n                          }\n                        }\n                      }\n                    },\n                    slowRequests: {\n                      description: 'A rule based on request execution time.',\n                      type: 'object',\n                      properties: {\n                        timeTaken: { description: 'Time taken.', type: 'string' },\n                        path: {\n                          description: 'Request Path.',\n                          type: 'string'\n                        },\n                        count: {\n                          format: 'int32',\n                          description: 'Request Count.',\n                          type: 'integer'\n                        },\n                        timeInterval: {\n                          description: 'Time interval.',\n                          type: 'string'\n                        }\n                      }\n                    },\n                    slowRequestsWithPath: {\n                      description: 'A rule based on multiple Slow Requests Rule with path',\n                      type: 'array',\n                      items: {\n                        description: 'Trigger based on request execution time.',\n                        type: 'object',\n                        properties: {\n                          timeTaken: {\n                            description: 'Time taken.',\n                            type: 'string'\n                          },\n                          path: {\n                            description: 'Request Path.',\n                            type: 'string'\n                          },\n                          count: {\n                            format: 'int32',\n                            description: 'Request Count.',\n                            type: 'integer'\n                          },\n                          timeInterval: {\n                            description: 'Time interval.',\n                            type: 'string'\n                          }\n                        }\n                      }\n                    },\n                    statusCodesRange: {\n                      description: 'A rule based on status codes ranges.',\n                      type: 'array',\n                      items: {\n                        description: 'Trigger based on range of status codes.',\n                        type: 'object',\n                        properties: {\n                          statusCodes: {\n                            description: 'HTTP status code.',\n                            type: 'string'\n                          },\n                          path: { type: 'string' },\n                          count: {\n                            format: 'int32',\n                            description: 'Request Count.',\n                            type: 'integer'\n                          },\n                          timeInterval: {\n                            description: 'Time interval.',\n                            type: 'string'\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                actions: {\n                  description: 'Actions to be executed when a rule is triggered.',\n                  type: 'object',\n                  properties: {\n                    actionType: {\n                      description: 'Predefined action to be taken.',\n                      enum: [ 'Recycle', 'LogEvent', 'CustomAction' ],\n                      type: 'string',\n                      'x-ms-enum': {\n                        name: 'AutoHealActionType',\n                        modelAsString: false\n                      }\n                    },\n                    customAction: {\n                      description: 'Custom action to be taken.',\n                      type: 'object',\n                      properties: {\n                        exe: {\n                          description: 'Executable to be run.',\n                          type: 'string'\n                        },\n                        parameters: {\n                          description: 'Parameters for the executable.',\n                          type: 'string'\n                        }\n                      }\n                    },\n                    minProcessExecutionTime: {\n                      description: 'Minimum time the process must execute\\n' +\n                        'before taking the action',\n                      type: 'string'\n                    }\n                  }\n                }\n              }\n            },\n            tracingOptions: { description: 'Tracing options.', type: 'string' },\n            vnetName: {\n              description: 'Virtual Network name.',\n              type: 'string',\n              'x-ms-mutability': [ 'create', 'read' ]\n            },\n            vnetRouteAllEnabled: {\n              description: 'Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.',\n              type: 'boolean'\n            },\n            vnetPrivatePortsCount: {\n              format: 'int32',\n              description: 'The number of private ports assigned to this app. These will be assigned dynamically on runtime.',\n              type: 'integer'\n            },\n            cors: {\n              description: 'Cross-Origin Resource Sharing (CORS) settings.',\n              type: 'object',\n              properties: {\n                allowedOrigins: {\n                  description: 'Gets or sets the list of origins that should be allowed to make cross-origin\\n' +\n                    'calls (for example: http://example.com:12345). Use \"*\" to allow all.',\n                  type: 'array',\n                  items: { type: 'string' }\n                },\n                supportCredentials: {\n                  description: 'Gets or sets whether CORS requests with credentials are allowed. See \\n' +\n                    'https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials\\n' +\n                    'for more details.',\n                  type: 'boolean'\n                }\n              }\n            },\n            push: {\n              description: 'Push endpoint settings.',\n              type: 'object',\n              allOf: [\n                {\n                  description: 'Azure proxy only resource. This resource is not tracked by Azure Resource Manager.',\n                  type: 'object',\n                  properties: {\n                    id: {\n                      description: 'Resource Id.',\n                      type: 'string',\n                      readOnly: true\n                    },\n                    name: {\n                      description: 'Resource Name.',\n                      type: 'string',\n                      readOnly: true\n                    },\n                    kind: {\n                      description: 'Kind of resource.',\n                      type: 'string'\n                    },\n                    type: {\n                      description: 'Resource type.',\n                      type: 'string',\n                      readOnly: true\n                    }\n                  },\n                  'x-ms-azure-resource': true\n                }\n              ],\n              properties: {\n                properties: {\n                  description: 'PushSettings resource specific properties',\n                  required: [ 'isPushEnabled' ],\n                  type: 'object',\n                  properties: {\n                    isPushEnabled: {\n                      description: 'Gets or sets a flag indicating whether the Push endpoint is enabled.',\n                      type: 'boolean'\n                    },\n                    tagWhitelistJson: {\n                      description: 'Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.',\n                      type: 'string'\n                    },\n                    tagsRequiringAuth: {\n                      description: 'Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\\n' +\n                        'Tags can consist of alphanumeric characters and the following:\\n' +\n                        \"'_', '@', '#', '.', ':', '-'. \\n\" +\n                        'Validation should be performed at the PushRequestHandler.',\n                      type: 'string'\n                    },\n                    dynamicTagsJson: {\n                      description: 'Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.',\n                      type: 'string'\n                    }\n                  },\n                  'x-ms-client-flatten': true\n                }\n              }\n            },\n            apiDefinition: {\n              description: 'Information about the formal API definition for the app.',\n              type: 'object',\n              properties: {\n                url: {\n                  description: 'The URL of the API definition.',\n                  type: 'string'\n                }\n              }\n            },\n            apiManagementConfig: {\n              description: 'Azure API management settings linked to the app.',\n              type: 'object',\n              properties: {\n                id: { description: 'APIM-Api Identifier.', type: 'string' }\n              }\n            },\n            autoSwapSlotName: { description: 'Auto-swap slot name.', type: 'string' },\n            localMySqlEnabled: {\n              description: '<code>true</code> to enable local MySQL; otherwise, <code>false</code>.',\n              default: false,\n              type: 'boolean'\n            },\n            managedServiceIdentityId: {\n              format: 'int32',\n              description: 'Managed Service Identity Id',\n              type: 'integer'\n            },\n            xManagedServiceIdentityId: {\n              format: 'int32',\n              description: 'Explicit Managed Service Identity Id',\n              type: 'integer'\n            },\n            keyVaultReferenceIdentity: {\n              description: 'Identity to use for Key Vault Reference authentication.',\n              type: 'string'\n            },\n            ipSecurityRestrictions: {\n              description: 'IP security restrictions for main.',\n              type: 'array',\n              items: {\n                description: 'IP security restriction on an app.',\n                type: 'object',\n                properties: {\n                  ipAddress: {\n                    description: 'IP address the security restriction is valid for.\\n' +\n                      'It can be in form of pure ipv4 address (required SubnetMask property) or\\n' +\n                      'CIDR notation such as ipv4/mask (leading bit match). For CIDR,\\n' +\n                      'SubnetMask property must not be specified.',\n                    type: 'string'\n                  },\n                  subnetMask: {\n                    description: 'Subnet mask for the range of IP addresses the restriction is valid for.',\n                    type: 'string'\n                  },\n                  vnetSubnetResourceId: {\n                    description: 'Virtual network resource id',\n                    type: 'string'\n                  },\n                  vnetTrafficTag: {\n                    format: 'int32',\n                    description: '(internal) Vnet traffic tag',\n                    type: 'integer'\n                  },\n                  subnetTrafficTag: {\n                    format: 'int32',\n                    description: '(internal) Subnet traffic tag',\n                    type: 'integer'\n                  },\n                  action: {\n                    description: 'Allow or Deny access for this IP range.',\n                    type: 'string'\n                  },\n                  tag: {\n                    description: 'Defines what this IP filter will be used for. This is to support IP filtering on proxies.',\n                    enum: [ 'Default', 'XffProxy', 'ServiceTag' ],\n                    type: 'string',\n                    'x-ms-enum': { name: 'IpFilterTag', modelAsString: true }\n                  },\n                  priority: {\n                    format: 'int32',\n                    description: 'Priority of IP restriction rule.',\n                    type: 'integer'\n                  },\n                  name: {\n                    description: 'IP restriction rule name.',\n                    type: 'string'\n                  },\n                  description: {\n                    description: 'IP restriction rule description.',\n                    type: 'string'\n                  },\n                  headers: {\n                    description: 'IP restriction rule headers.\\n' +\n                      'X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples). \\n' +\n                      'The matching logic is ..\\n' +\n                      '- If the property is null or empty (default), all hosts(or lack of) are allowed.\\n' +\n                      '- A value is compared using ordinal-ignore-case (excluding port number).\\n' +\n                      \"- Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com\\n\" +\n                      ' but not the root domain contoso.com or multi-level foo.bar.contoso.com\\n' +\n                      '- Unicode host names are allowed but are converted to Punycode for matching.\\n' +\n                      '\\n' +\n                      'X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).\\n' +\n                      'The matching logic is ..\\n' +\n                      '- If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.\\n' +\n                      '- If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.\\n' +\n                      '\\n' +\n                      'X-Azure-FDID and X-FD-HealthProbe.\\n' +\n                      'The matching logic is exact match.',\n                    type: 'object',\n                    additionalProperties: { type: 'array', items: { type: 'string' } }\n                  }\n                }\n              }\n            },\n            scmIpSecurityRestrictions: {\n              description: 'IP security restrictions for scm.',\n              type: 'array',\n              items: {\n                description: 'IP security restriction on an app.',\n                type: 'object',\n                properties: {\n                  ipAddress: {\n                    description: 'IP address the security restriction is valid for.\\n' +\n                      'It can be in form of pure ipv4 address (required SubnetMask property) or\\n' +\n                      'CIDR notation such as ipv4/mask (leading bit match). For CIDR,\\n' +\n                      'SubnetMask property must not be specified.',\n                    type: 'string'\n                  },\n                  subnetMask: {\n                    description: 'Subnet mask for the range of IP addresses the restriction is valid for.',\n                    type: 'string'\n                  },\n                  vnetSubnetResourceId: {\n                    description: 'Virtual network resource id',\n                    type: 'string'\n                  },\n                  vnetTrafficTag: {\n                    format: 'int32',\n                    description: '(internal) Vnet traffic tag',\n                    type: 'integer'\n                  },\n                  subnetTrafficTag: {\n                    format: 'int32',\n                    description: '(internal) Subnet traffic tag',\n                    type: 'integer'\n                  },\n                  action: {\n                    description: 'Allow or Deny access for this IP range.',\n                    type: 'string'\n                  },\n                  tag: {\n                    description: 'Defines what this IP filter will be used for. This is to support IP filtering on proxies.',\n                    enum: [ 'Default', 'XffProxy', 'ServiceTag' ],\n                    type: 'string',\n                    'x-ms-enum': { name: 'IpFilterTag', modelAsString: true }\n                  },\n                  priority: {\n                    format: 'int32',\n                    description: 'Priority of IP restriction rule.',\n                    type: 'integer'\n                  },\n                  name: {\n                    description: 'IP restriction rule name.',\n                    type: 'string'\n                  },\n                  description: {\n                    description: 'IP restriction rule description.',\n                    type: 'string'\n                  },\n                  headers: {\n                    description: 'IP restriction rule headers.\\n' +\n                      'X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples). \\n' +\n                      'The matching logic is ..\\n' +\n                      '- If the property is null or empty (default), all hosts(or lack of) are allowed.\\n' +\n                      '- A value is compared using ordinal-ignore-case (excluding port number).\\n' +\n                      \"- Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com\\n\" +\n                      ' but not the root domain contoso.com or multi-level foo.bar.contoso.com\\n' +\n                      '- Unicode host names are allowed but are converted to Punycode for matching.\\n' +\n                      '\\n' +\n                      'X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).\\n' +\n                      'The matching logic is ..\\n' +\n                      '- If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.\\n' +\n                      '- If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.\\n' +\n                      '\\n' +\n                      'X-Azure-FDID and X-FD-HealthProbe.\\n' +\n                      'The matching logic is exact match.',\n                    type: 'object',\n                    additionalProperties: { type: 'array', items: { type: 'string' } }\n                  }\n                }\n              }\n            },\n            scmIpSecurityRestrictionsUseMain: {\n              description: 'IP security restrictions for scm to use main.',\n              type: 'boolean'\n            },\n            http20Enabled: {\n              description: 'Http20Enabled: configures a web site to allow clients to connect over http2.0',\n              default: true,\n              type: 'boolean'\n            },\n            minTlsVersion: {\n              description: 'MinTlsVersion: configures the minimum version of TLS required for SSL requests',\n              enum: [ '1.0', '1.1', '1.2' ],\n              type: 'string',\n              'x-ms-enum': { name: 'SupportedTlsVersions', modelAsString: true }\n            },\n            scmMinTlsVersion: {\n              description: 'ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site',\n              enum: [ '1.0', '1.1', '1.2' ],\n              type: 'string',\n              'x-ms-enum': { name: 'SupportedTlsVersions', modelAsString: true }\n            },\n            ftpsState: {\n              description: 'State of FTP / FTPS service',\n              enum: [ 'AllAllowed', 'FtpsOnly', 'Disabled' ],\n              type: 'string',\n              'x-ms-enum': { name: 'FtpsState', modelAsString: true }\n            },\n            preWarmedInstanceCount: {\n              format: 'int32',\n              description: 'Number of preWarmed instances.\\n' +\n                'This setting only applies to the Consumption and Elastic Plans',\n              maximum: 10,\n              minimum: 0,\n              type: 'integer'\n            },\n            functionAppScaleLimit: {\n              format: 'int32',\n              description: 'Maximum number of workers that a site can scale out to.\\n' +\n                'This setting only applies to the Consumption and Elastic Premium Plans',\n              minimum: 0,\n              type: 'integer'\n            },\n            healthCheckPath: { description: 'Health check path', type: 'string' },\n            functionsRuntimeScaleMonitoringEnabled: {\n              description: 'Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,\\n' +\n                'the ScaleController will not monitor event sources directly, but will instead call to the\\n' +\n                'runtime to get scale status.',\n              type: 'boolean'\n            },\n            websiteTimeZone: {\n              description: 'Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Time Zones',\n              type: 'string'\n            },\n            minimumElasticInstanceCount: {\n              format: 'int32',\n              description: 'Number of minimum instance count for a site\\n' +\n                'This setting only applies to the Elastic Plans',\n              maximum: 20,\n              minimum: 0,\n              type: 'integer'\n            },\n            azureStorageAccounts: {\n              description: 'List of Azure Storage Accounts.',\n              type: 'object',\n              additionalProperties: {\n                description: 'Azure Files or Blob Storage access information value for dictionary storage.',\n                type: 'object',\n                properties: {\n                  type: {\n                    description: 'Type of storage.',\n                    enum: [ 'AzureFiles', 'AzureBlob' ],\n                    type: 'string',\n                    'x-ms-enum': { name: 'AzureStorageType', modelAsString: false }\n                  },\n                  accountName: {\n                    description: 'Name of the storage account.',\n                    type: 'string'\n                  },\n                  shareName: {\n                    description: 'Name of the file share (container name, for Blob storage).',\n                    type: 'string'\n                  },\n                  accessKey: {\n                    description: 'Access key for the storage account.',\n                    type: 'string',\n                    'x-ms-secret': true\n                  },\n                  mountPath: {\n                    description: \"Path to mount the storage within the site's runtime environment.\",\n                    type: 'string'\n                  },\n                  state: {\n                    description: 'State of the storage account.',\n                    enum: [\n                      'Ok',\n                      'InvalidCredentials',\n                      'InvalidShare',\n                      'NotValidated'\n                    ],\n                    type: 'string',\n                    readOnly: true,\n                    'x-ms-enum': { name: 'AzureStorageState', modelAsString: false }\n                  }\n                }\n              }\n            },\n            publicNetworkAccess: {\n              description: 'Property to allow or block all public traffic.',\n              type: 'string'\n            }\n          }\n        },\n        trafficManagerHostNames: {\n          description: 'Azure Traffic Manager hostnames associated with the app. Read-only.',\n          type: 'array',\n          items: { type: 'string' },\n          readOnly: true\n        },\n        scmSiteAlsoStopped: {\n          description: '<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.',\n          default: false,\n          type: 'boolean'\n        },\n        targetSwapSlot: {\n          description: 'Specifies which deployment slot this app will swap into. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        hostingEnvironmentProfile: {\n          description: 'App Service Environment to use for the app.',\n          'x-ms-mutability': [ 'create', 'read' ],\n          type: 'object',\n          properties: {\n            id: {\n              description: 'Resource ID of the App Service Environment.',\n              type: 'string'\n            },\n            name: {\n              description: 'Name of the App Service Environment.',\n              type: 'string',\n              readOnly: true\n            },\n            type: {\n              description: 'Resource type of the App Service Environment.',\n              type: 'string',\n              readOnly: true\n            }\n          }\n        },\n        clientAffinityEnabled: {\n          description: '<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.',\n          type: 'boolean'\n        },\n        clientCertEnabled: {\n          description: '<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.',\n          type: 'boolean'\n        },\n        clientCertMode: {\n          description: 'This composes with ClientCertEnabled setting.\\n' +\n            '- ClientCertEnabled: false means ClientCert is ignored.\\n' +\n            '- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\\n' +\n            '- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.',\n          enum: [ 'Required', 'Optional', 'OptionalInteractiveUser' ],\n          type: 'string',\n          'x-ms-enum': { name: 'ClientCertMode', modelAsString: false }\n        },\n        clientCertExclusionPaths: {\n          description: 'client certificate authentication comma-separated exclusion paths',\n          type: 'string'\n        },\n        hostNamesDisabled: {\n          description: '<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\\n' +\n            ' If <code>true</code>, the app is only accessible via API management process.',\n          type: 'boolean'\n        },\n        customDomainVerificationId: {\n          description: 'Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.',\n          type: 'string'\n        },\n        outboundIpAddresses: {\n          description: 'List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        possibleOutboundIpAddresses: {\n          description: 'List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        containerSize: {\n          format: 'int32',\n          description: 'Size of the function container.',\n          type: 'integer'\n        },\n        dailyMemoryTimeQuota: {\n          format: 'int32',\n          description: 'Maximum allowed daily memory-time quota (applicable on dynamic apps only).',\n          type: 'integer'\n        },\n        suspendedTill: {\n          format: 'date-time',\n          description: 'App suspended till in case memory-time quota is exceeded.',\n          type: 'string',\n          readOnly: true\n        },\n        maxNumberOfWorkers: {\n          format: 'int32',\n          description: 'Maximum number of workers.\\n' +\n            'This only applies to Functions container.',\n          type: 'integer',\n          readOnly: true\n        },\n        cloningInfo: {\n          description: 'If specified during app creation, the app is cloned from a source app.',\n          'x-ms-mutability': [ 'create' ],\n          required: [ 'sourceWebAppId' ],\n          type: 'object',\n          properties: {\n            correlationId: {\n              format: 'uuid',\n              description: 'Correlation ID of cloning operation. This ID ties multiple cloning operations\\n' +\n                'together to use the same snapshot.',\n              type: 'string',\n              example: '00000000-0000-0000-0000-000000000000'\n            },\n            overwrite: {\n              description: '<code>true</code> to overwrite destination app; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            cloneCustomHostNames: {\n              description: '<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            cloneSourceControl: {\n              description: '<code>true</code> to clone source control from source app; otherwise, <code>false</code>.',\n              type: 'boolean'\n            },\n            sourceWebAppId: {\n              description: 'ARM resource ID of the source app. App resource ID is of the form \\n' +\n                '/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \\n' +\n                '/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.',\n              type: 'string'\n            },\n            sourceWebAppLocation: {\n              description: 'Location of source app ex: West US or North Europe',\n              type: 'string'\n            },\n            hostingEnvironment: { description: 'App Service Environment.', type: 'string' },\n            appSettingsOverrides: {\n              description: 'Application setting overrides for cloned app. If specified, these settings override the settings cloned \\n' +\n                'from source app. Otherwise, application settings from source app are retained.',\n              type: 'object',\n              additionalProperties: { type: 'string' }\n            },\n            configureLoadBalancing: {\n              description: '<code>true</code> to configure load balancing for source and destination app.',\n              type: 'boolean'\n            },\n            trafficManagerProfileId: {\n              description: 'ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \\n' +\n                '/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.',\n              type: 'string'\n            },\n            trafficManagerProfileName: {\n              description: 'Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.',\n              type: 'string'\n            }\n          }\n        },\n        resourceGroup: {\n          description: 'Name of the resource group the app belongs to. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        isDefaultContainer: {\n          description: '<code>true</code> if the app is a default container; otherwise, <code>false</code>.',\n          type: 'boolean',\n          readOnly: true\n        },\n        defaultHostName: {\n          description: 'Default hostname of the app. Read-only.',\n          type: 'string',\n          readOnly: true\n        },\n        slotSwapStatus: {\n          description: 'Status of the last deployment slot swap operation.',\n          readOnly: true,\n          type: 'object',\n          properties: {\n            timestampUtc: {\n              format: 'date-time',\n              description: 'The time the last successful slot swap completed.',\n              type: 'string',\n              readOnly: true\n            },\n            sourceSlotName: {\n              description: 'The source slot of the last swap operation.',\n              type: 'string',\n              readOnly: true\n            },\n            destinationSlotName: {\n              description: 'The destination slot of the last swap operation.',\n              type: 'string',\n              readOnly: true\n            }\n          }\n        },\n        httpsOnly: {\n          description: 'HttpsOnly: configures a web site to accept only https requests. Issues redirect for\\n' +\n            'http requests',\n          type: 'boolean'\n        },\n        redundancyMode: {\n          description: 'Site redundancy mode',\n          enum: [\n            'None',\n            'Manual',\n            'Failover',\n            'ActiveActive',\n            'GeoRedundant'\n          ],\n          type: 'string',\n          'x-ms-enum': { name: 'RedundancyMode', modelAsString: false }\n        },\n        inProgressOperationId: {\n          format: 'uuid',\n          description: 'Specifies an operation id if this site has a pending operation.',\n          type: 'string',\n          readOnly: true,\n          example: '00000000-0000-0000-0000-000000000000'\n        },\n        storageAccountRequired: {\n          description: 'Checks if Customer provided storage account is required',\n          type: 'boolean'\n        },\n        keyVaultReferenceIdentity: {\n          description: 'Identity to use for Key Vault Reference authentication.',\n          type: 'string'\n        },\n        virtualNetworkSubnetId: {\n          description: 'Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\\n' +\n            'This must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}',\n          type: 'string'\n        }\n      },\n      'x-ms-client-flatten': true\n    },\n    identity: {\n      description: 'Managed service identity.',\n      type: 'object',\n      properties: {\n        type: {\n          description: 'Type of managed service identity.',\n          enum: [\n            'SystemAssigned',\n            'UserAssigned',\n            'SystemAssigned, UserAssigned',\n            'None'\n          ],\n          type: 'string',\n          'x-ms-enum': { name: 'ManagedServiceIdentityType', modelAsString: false }\n        },\n        tenantId: {\n          description: 'Tenant of managed service identity.',\n          type: 'string',\n          readOnly: true\n        },\n        principalId: {\n          description: 'Principal Id of managed service identity.',\n          type: 'string',\n          readOnly: true\n        },\n        userAssignedIdentities: {\n          description: \"The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\",\n          type: 'object',\n          additionalProperties: {\n            description: 'User Assigned identity.',\n            type: 'object',\n            properties: {\n              principalId: {\n                description: 'Principal Id of user assigned identity',\n                type: 'string',\n                readOnly: true\n              },\n              clientId: {\n                description: 'Client Id of user assigned identity',\n                type: 'string',\n                readOnly: true\n              }\n            }\n          }\n        }\n      }\n    },\n    extendedLocation: {\n      description: 'Extended Location.',\n      type: 'object',\n      properties: {\n        name: { description: 'Name of extended location.', type: 'string' },\n        type: {\n          description: 'Type of extended location.',\n          type: 'string',\n          readOnly: true\n        }\n      }\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-02-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2021-02-01/WebApps.json"},"here"),"."))}u.isMDXComponent=!0}}]);