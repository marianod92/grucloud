"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8051],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,y=d["".concat(u,".").concat(m)]||d[m]||l[m]||i;return t?r.createElement(y,s(s({ref:n},c),{},{components:t})):r.createElement(y,s({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},65406:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),s=["components"],a={id:"ExpressRouteGateway",title:"ExpressRouteGateway"},u=void 0,p={unversionedId:"azure/resources/Network/ExpressRouteGateway",id:"azure/resources/Network/ExpressRouteGateway",isDocsHomePage:!1,title:"ExpressRouteGateway",description:"Provides a ExpressRouteGateway from the Network group",source:"@site/docs/azure/resources/Network/ExpressRouteGateway.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ExpressRouteGateway",permalink:"/docs/azure/resources/Network/ExpressRouteGateway",tags:[],version:"current",frontMatter:{id:"ExpressRouteGateway",title:"ExpressRouteGateway"},sidebar:"docs",previous:{title:"ExpressRouteConnection",permalink:"/docs/azure/resources/Network/ExpressRouteConnection"},next:{title:"FirewallPolicy",permalink:"/docs/azure/resources/Network/FirewallPolicy"}},c=[{value:"Examples",id:"examples",children:[{value:"ExpressRouteGatewayCreate",id:"expressroutegatewaycreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:c};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"ExpressRouteGateway")," from the ",(0,i.kt)("strong",{parentName:"p"},"Network")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"expressroutegatewaycreate"},"ExpressRouteGatewayCreate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeExpressRouteGateway({\n  name: "myExpressRouteGateway",\n  properties: () => ({\n    location: "westus",\n    properties: {\n      virtualHub: {\n        id: "/subscriptions/subid/resourceGroups/resourceGroupId/providers/Microsoft.Network/virtualHubs/virtualHubName",\n      },\n      autoScaleConfiguration: { bounds: { min: 3 } },\n    },\n  }),\n  dependencies: ({}) => ({\n    resourceGroup: "myResourceGroup",\n    virtualHub: "myVirtualHub",\n  }),\n});\n\n')),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualHub"},"VirtualHub"))),(0,i.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the express route gateway.',\n      required: [ 'virtualHub' ],\n      properties: {\n        autoScaleConfiguration: {\n          properties: {\n            bounds: {\n              properties: {\n                min: {\n                  type: 'integer',\n                  description: 'Minimum number of scale units deployed for ExpressRoute gateway.'\n                },\n                max: {\n                  type: 'integer',\n                  description: 'Maximum number of scale units deployed for ExpressRoute gateway.'\n                }\n              },\n              description: 'Minimum and maximum number of scale units to deploy.'\n            }\n          },\n          description: 'Configuration for auto scaling.'\n        },\n        expressRouteConnections: {\n          type: 'array',\n          readOnly: true,\n          description: 'List of ExpressRoute connections to the ExpressRoute gateway.',\n          items: {\n            required: [ 'name' ],\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route connection.',\n                required: [ 'expressRouteCircuitPeering' ],\n                properties: {\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the express route connection resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  expressRouteCircuitPeering: {\n                    description: 'The ExpressRoute circuit peering.',\n                    properties: {\n                      id: {\n                        type: 'string',\n                        description: 'The ID of the ExpressRoute circuit peering.'\n                      }\n                    }\n                  },\n                  authorizationKey: {\n                    type: 'string',\n                    description: 'Authorization key to establish the connection.'\n                  },\n                  routingWeight: {\n                    type: 'integer',\n                    description: 'The routing weight associated to the connection.'\n                  },\n                  enableInternetSecurity: {\n                    type: 'boolean',\n                    description: 'Enable internet security.'\n                  },\n                  expressRouteGatewayBypass: {\n                    type: 'boolean',\n                    description: 'Enable FastPath to vWan Firewall hub.'\n                  },\n                  routingConfiguration: {\n                    description: 'The Routing Configuration indicating the associated and propagated route tables on this connection.',\n                    properties: {\n                      associatedRouteTable: {\n                        properties: {\n                          id: {\n                            type: 'string',\n                            description: 'Resource ID.'\n                          }\n                        },\n                        description: 'Reference to another subresource.',\n                        'x-ms-azure-resource': true\n                      },\n                      propagatedRouteTables: {\n                        description: 'The list of RouteTables to advertise the routes to.',\n                        properties: {\n                          labels: {\n                            type: 'array',\n                            description: 'The list of labels.',\n                            items: { type: 'string' }\n                          },\n                          ids: {\n                            type: 'array',\n                            description: 'The list of resource ids of all the RouteTables.',\n                            items: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        }\n                      },\n                      vnetRoutes: {\n                        description: 'List of routes that control routing from VirtualHub into a virtual network connection.',\n                        properties: {\n                          staticRoutes: {\n                            type: 'array',\n                            description: 'List of all Static Routes.',\n                            items: {\n                              description: 'List of all Static Routes.',\n                              properties: {\n                                name: [Object],\n                                addressPrefixes: [Object],\n                                nextHopIpAddress: [Object]\n                              }\n                            }\n                          },\n                          bgpConnections: {\n                            type: 'array',\n                            readOnly: true,\n                            description: 'The list of references to HubBgpConnection objects.',\n                            items: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'ExpressRouteConnection resource.'\n          }\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the express route gateway resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        virtualHub: {\n          description: 'The Virtual Hub where the ExpressRoute gateway is or will be deployed.',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.'\n            }\n          }\n        }\n      }\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'ExpressRoute gateway resource.'\n}\n")),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/virtualWan.json"},"here"),"."))}d.isMDXComponent=!0}}]);