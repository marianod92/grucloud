"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[996],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,b=d["".concat(s,".").concat(m)]||d[m]||l[m]||i;return n?r.createElement(b,c(c({ref:t},u),{},{components:n})):r.createElement(b,c({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var p=2;p<i;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73448:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),c=["components"],a={id:"WebAppSourceControlSlot",title:"WebAppSourceControlSlot"},s=void 0,p={unversionedId:"azure/resources/Web/WebAppSourceControlSlot",id:"azure/resources/Web/WebAppSourceControlSlot",isDocsHomePage:!1,title:"WebAppSourceControlSlot",description:"Provides a WebAppSourceControlSlot from the Web group",source:"@site/docs/azure/resources/Web/WebAppSourceControlSlot.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/WebAppSourceControlSlot",permalink:"/docs/azure/resources/Web/WebAppSourceControlSlot",tags:[],version:"current",frontMatter:{id:"WebAppSourceControlSlot",title:"WebAppSourceControlSlot"},sidebar:"docs",previous:{title:"WebAppSourceControl",permalink:"/docs/azure/resources/Web/WebAppSourceControl"},next:{title:"WebAppSwiftVirtualNetworkConnection",permalink:"/docs/azure/resources/Web/WebAppSwiftVirtualNetworkConnection"}},u=[{value:"Examples",id:"examples",children:[],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"WebAppSourceControlSlot")," from the ",(0,i.kt)("strong",{parentName:"p"},"Web")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/Site"},"Site")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/SiteSlot"},"SiteSlot"))),(0,i.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'Source control configuration for an app.',\n  type: 'object',\n  allOf: [\n    {\n      description: 'Azure proxy only resource. This resource is not tracked by Azure Resource Manager.',\n      type: 'object',\n      properties: {\n        id: { description: 'Resource Id.', type: 'string', readOnly: true },\n        name: {\n          description: 'Resource Name.',\n          type: 'string',\n          readOnly: true\n        },\n        kind: { description: 'Kind of resource.', type: 'string' },\n        type: {\n          description: 'Resource type.',\n          type: 'string',\n          readOnly: true\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  properties: {\n    properties: {\n      description: 'SiteSourceControl resource specific properties',\n      type: 'object',\n      properties: {\n        repoUrl: {\n          description: 'Repository or source control URL.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        branch: {\n          description: 'Name of branch to use for deployment.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isManualIntegration: {\n          description: '<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isGitHubAction: {\n          description: '<code>true</code> if this is deployed via GitHub action.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        deploymentRollbackEnabled: {\n          description: '<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isMercurial: {\n          description: '<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        gitHubActionConfiguration: {\n          description: 'If GitHub Action is selected, than the associated configuration.',\n          type: 'object',\n          properties: {\n            codeConfiguration: {\n              description: 'GitHub Action code configuration.',\n              type: 'object',\n              properties: {\n                runtimeStack: {\n                  description: 'Runtime stack is used to determine the workflow file content for code base apps.',\n                  type: 'string'\n                },\n                runtimeVersion: {\n                  description: 'Runtime version is used to determine what build version to set in the workflow file.',\n                  type: 'string'\n                }\n              }\n            },\n            containerConfiguration: {\n              description: 'GitHub Action container configuration.',\n              type: 'object',\n              properties: {\n                serverUrl: {\n                  description: 'The server URL for the container registry where the build will be hosted.',\n                  type: 'string'\n                },\n                imageName: {\n                  description: 'The image name for the build.',\n                  type: 'string'\n                },\n                username: {\n                  description: 'The username used to upload the image to the container registry.',\n                  type: 'string'\n                },\n                password: {\n                  description: 'The password used to upload the image to the container registry.',\n                  type: 'string',\n                  'x-ms-secret': true\n                }\n              }\n            },\n            isLinux: {\n              description: 'This will help determine the workflow configuration to select.',\n              type: 'boolean'\n            },\n            generateWorkflowFile: {\n              description: 'Workflow option to determine whether the workflow file should be generated and written to the repository.',\n              type: 'boolean'\n            }\n          }\n        }\n      },\n      'x-ms-client-flatten': true\n    }\n  }\n}\n")),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-03-01"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2021-03-01/WebApps.json"},"here"),"."))}d.isMDXComponent=!0}}]);