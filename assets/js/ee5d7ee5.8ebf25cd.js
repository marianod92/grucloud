"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1377],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(t),m=i,g=l["".concat(a,".").concat(m)]||l[m]||d[m]||o;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=l;var p={};for(var a in n)hasOwnProperty.call(n,a)&&(p[a]=n[a]);p.originalType=e,p.mdxType="string"==typeof e?e:i,s[1]=p;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},5679:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return u},default:function(){return l}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],p={id:"CustomApi",title:"CustomApi"},a=void 0,c={unversionedId:"azure/resources/Web/CustomApi",id:"azure/resources/Web/CustomApi",isDocsHomePage:!1,title:"CustomApi",description:"Provides a CustomApi from the Web group",source:"@site/docs/azure/resources/Web/CustomApi.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/CustomApi",permalink:"/docs/azure/resources/Web/CustomApi",tags:[],version:"current",frontMatter:{id:"CustomApi",title:"CustomApi"},sidebar:"docs",previous:{title:"Container App",permalink:"/docs/azure/resources/Web/ContainerApp"},next:{title:"HostingEnvironment",permalink:"/docs/azure/resources/Web/HostingEnvironment"}},u=[{value:"Examples",id:"examples",children:[{value:"Replace a custom API",id:"replace-a-custom-api",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:u};function l(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"CustomApi")," from the ",(0,o.kt)("strong",{parentName:"p"},"Web")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"replace-a-custom-api"},"Replace a custom API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Web.makeCustomApi({\n  name: "myCustomApi",\n  properties: () => ({\n    properties: {\n      capabilities: [],\n      description: "",\n      displayName: "testCustomApi",\n      iconUri: "/testIcon.svg",\n      apiDefinitions: {\n        originalSwaggerUrl: "https://tempuri.org/swagger.json",\n        swagger: {},\n      },\n      apiType: "Rest",\n    },\n    id: "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testResourceGroup/providers/Microsoft.Web/customApis/testCustomApi",\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n  }),\n});\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  type: 'object',\n  description: 'A custom API',\n  additionalProperties: false,\n  properties: {\n    properties: {\n      type: 'object',\n      description: 'Custom API properties',\n      additionalProperties: false,\n      properties: {\n        connectionParameters: {\n          description: 'Connection parameters',\n          type: 'object',\n          additionalProperties: {\n            description: 'Connection provider parameters',\n            type: 'object',\n            properties: {\n              type: {\n                description: 'Type of the parameter',\n                enum: [\n                  'string',\n                  'securestring',\n                  'secureobject',\n                  'int',\n                  'bool',\n                  'object',\n                  'array',\n                  'oauthSetting',\n                  'connection'\n                ],\n                type: 'string',\n                'x-ms-enum': {\n                  name: 'ConnectionParameterType',\n                  modelAsString: false\n                }\n              },\n              oAuthSettings: {\n                description: 'OAuth settings for the connection provider',\n                type: 'object',\n                properties: {\n                  identityProvider: { description: 'Identity provider', type: 'string' },\n                  clientId: {\n                    description: 'Resource provider client id',\n                    type: 'string'\n                  },\n                  clientSecret: {\n                    description: 'Client Secret needed for OAuth',\n                    type: 'string'\n                  },\n                  scopes: {\n                    description: 'OAuth scopes',\n                    type: 'array',\n                    items: { type: 'string' }\n                  },\n                  redirectUrl: { description: 'Url', type: 'string' },\n                  properties: {\n                    type: 'object',\n                    description: 'Read only properties for this oauth setting.'\n                  },\n                  customParameters: {\n                    description: 'OAuth parameters key is the name of parameter',\n                    type: 'object',\n                    additionalProperties: {\n                      description: 'OAuth settings for the API',\n                      type: 'object',\n                      properties: {\n                        value: {\n                          description: 'Value of the setting',\n                          type: 'string'\n                        },\n                        options: {\n                          type: 'object',\n                          description: 'Options available to this parameter'\n                        },\n                        uiDefinition: {\n                          type: 'object',\n                          description: 'UI definitions per culture as caller can specify the culture'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        runtimeUrls: {\n          type: 'array',\n          description: 'Runtime URLs',\n          items: { type: 'string' }\n        },\n        capabilities: {\n          type: 'array',\n          description: 'The custom API capabilities',\n          items: { type: 'string' }\n        },\n        swagger: {\n          type: 'object',\n          description: 'The JSON representation of the swagger'\n        },\n        brandColor: { type: 'string', description: 'Brand color' },\n        description: { type: 'string', description: 'The custom API description' },\n        displayName: { type: 'string', description: 'The display name' },\n        iconUri: { type: 'string', description: 'The icon URI' },\n        backendService: {\n          type: 'object',\n          description: 'The API backend service',\n          additionalProperties: false,\n          properties: {\n            serviceUrl: { type: 'string', description: 'The service URL' }\n          }\n        },\n        apiDefinitions: {\n          type: 'object',\n          description: 'API Definitions',\n          additionalProperties: false,\n          properties: {\n            originalSwaggerUrl: { type: 'string', description: 'The original swagger URL' },\n            modifiedSwaggerUrl: { type: 'string', description: 'The modified swagger URL' }\n          }\n        },\n        apiType: {\n          type: 'string',\n          description: 'The API type',\n          enum: [ 'NotSpecified', 'Rest', 'Soap' ],\n          'x-ms-enum': { name: 'ApiType', modelAsString: true }\n        },\n        wsdlDefinition: {\n          type: 'object',\n          description: 'The WSDL definition',\n          additionalProperties: false,\n          properties: {\n            url: { type: 'string', description: 'The WSDL URL' },\n            content: { type: 'string', description: 'The WSDL content' },\n            service: {\n              type: 'object',\n              description: 'The service with name and endpoint names',\n              additionalProperties: false,\n              required: [ 'qualifiedName' ],\n              properties: {\n                qualifiedName: {\n                  description: \"The service's qualified name\",\n                  type: 'string'\n                },\n                endpointQualifiedNames: {\n                  type: 'array',\n                  description: \"List of the endpoints' qualified names\",\n                  items: { type: 'string' }\n                }\n              }\n            },\n            importMethod: {\n              type: 'string',\n              description: 'The WSDL import method',\n              enum: [ 'NotSpecified', 'SoapToRest', 'SoapPassThrough' ],\n              'x-ms-enum': { name: 'WsdlImportMethod', modelAsString: true }\n            }\n          }\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      description: 'A resource',\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        id: { description: 'Resource id', type: 'string', readOnly: true },\n        name: {\n          description: 'Resource name',\n          type: 'string',\n          readOnly: true\n        },\n        type: {\n          description: 'Resource type',\n          type: 'string',\n          readOnly: true\n        },\n        location: { description: 'Resource location', type: 'string' },\n        etag: { description: 'Resource ETag', type: 'string' },\n        tags: {\n          type: 'object',\n          description: 'Resource tags',\n          additionalProperties: { type: 'string' },\n          example: { SampleTagName: 'SampleTagValue' }\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ]\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2016-06-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2016-06-01/logicAppsManagementClient.json"},"here"),"."))}l.isMDXComponent=!0}}]);